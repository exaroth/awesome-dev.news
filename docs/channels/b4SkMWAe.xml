<?xml version="1.0" encoding="utf-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>DevOps</title><link>https://www.awesome-dev.news</link><description></description><item><title>Digest #172: Kubernetes 2.0, GCP Incident and AWS Lambda Hacks</title><link>https://www.devopsbulletin.com/p/digest-172-kubernetes-20-gcp-incident</link><author>Mohamed Labouardy</author><category>devops</category><enclosure url="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fceb050a9-cff6-4285-9a70-ef18a8d0caa7_6157x2760.png" length="" type=""/><pubDate>Fri, 20 Jun 2025 15:54:02 +0000</pubDate><source url="https://www.devopsbulletin.com/">DevOps bulletin</source><content:encoded><![CDATA[Welcome to this week’s edition of the DevOps Bulletin!This week, we explore what a hypothetical Kubernetes 2.0 might look like and whether it’s time to rethink core assumptions like controllers, CRDs, and YAML. We also broke down Google Cloud’s latest public incident write-up in plain terms and asked a tough question: Why are we building AI agents to answer things an SQL query could handle better? Plus, we dig into how NAT and packet mangling work in Linux, and how Pinterest handles EC2 network throttling at scale. One more thing: if you’ve ever spent an hour fighting with port forwarding to share a local app, ngrok’s no-config API sharing guide might save your next afternoon.All this and more in this week’s DevOps Bulletin—don’t miss out!If you've ever wasted an afternoon messing with port forwarding, firewalls, or cloud configs just to share an API, yeah, same.  makes it dead simple to expose your API to the internet, securely, in seconds. No config dumps. No infra overhead. Just your app, online. client for instant, schema-aware SQL exploration; runs locally so your data and credentials stay on your machine. is a command-line tool that runs HTTP requests defined in a simple, plain-text format. and SCP client with userspace Tailscale connectivity. Secure shell access and file transfers over Tailnet without requiring a full Tailscale daemon. is an AI-powered CLI that restructures messy commit histories into clean, conventional commits. is a lightweight container image registry that stores and serves images directly from your Docker daemon's storage. is an anonymous, expiring Docker container registry using the official Docker Registry image. If you have feedback to share or are interested in sponsoring this newsletter, feel free to reach out via , or simply reply to this email.]]></content:encoded></item><item><title>Blind &amp; Visually Impaired Initiative (BVI) Meeting - 2025-06-17</title><link>https://www.youtube.com/watch?v=pcVgyZVyUvc</link><author>CNCF [Cloud Native Computing Foundation]</author><category>k8s</category><category>devops</category><category>video</category><enclosure url="https://www.youtube.com/v/pcVgyZVyUvc?version=3" length="" type=""/><pubDate>Fri, 20 Jun 2025 14:30:28 +0000</pubDate><source url="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA">CNCF</source><content:encoded><![CDATA[Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon India in Hyderabad (August 6-7), and KubeCon + CloudNativeCon North America in Atlanta (November 10-13). Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io]]></content:encoded></item><item><title>KeycloakCon: Welcome + Opening Remarks - Mana Takeda, Nomura Research Institute, Ltd.</title><link>https://www.youtube.com/watch?v=spqU1exuKcE</link><author>CNCF [Cloud Native Computing Foundation]</author><category>k8s</category><category>devops</category><category>video</category><enclosure url="https://www.youtube.com/v/spqU1exuKcE?version=3" length="" type=""/><pubDate>Fri, 20 Jun 2025 13:49:43 +0000</pubDate><source url="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA">CNCF</source><content:encoded><![CDATA[Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon India in Hyderabad (August 6-7), and KubeCon + CloudNativeCon North America in Atlanta (November 10-13). Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io

KeycloakCon: Welcome + Opening Remarks - Mana Takeda, Nomura Research Institute, Ltd.]]></content:encoded></item><item><title>Standardizing Authentication Flows in Keycloak Environments – Efficient Authorization S... Yuta Kato</title><link>https://www.youtube.com/watch?v=lTEgUizqTg4</link><author>CNCF [Cloud Native Computing Foundation]</author><category>k8s</category><category>devops</category><category>video</category><enclosure url="https://www.youtube.com/v/lTEgUizqTg4?version=3" length="" type=""/><pubDate>Fri, 20 Jun 2025 13:49:43 +0000</pubDate><source url="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA">CNCF</source><content:encoded><![CDATA[Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon India in Hyderabad (August 6-7), and KubeCon + CloudNativeCon North America in Atlanta (November 10-13). Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io

Standardizing Authentication Flows in Keycloak Environments – Efficient Authorization Strategies Using OPA - Yuta Kato, CyberAgent, Inc.

In this session, we will explain how we standardized and streamlined authentication flows to address the growing workload faced by engineers due to the rapid increase in authentication services.

To tackle the challenging task of building individual authentication flows for over 100 services, we adopted an implementation approach that defines authorization levels using role information and leverages attribute data stored in Keycloak.

By accurately linking user information with imported role data and standardizing authentication flows, we enabled faster updates to authorization systems. Additionally, we implemented centralized policy management for each client using OPA (Open Policy Agent) and policy language, significantly improving maintenance efficiency.

This session will provide practical and scalable design strategies and implementation methods for building robust systems that address authorization strategies using OPA.]]></content:encoded></item><item><title>Sponsored Keynote: Hitachi’s Keycloak Journey - Evolution of Business and Community - Michito Okai</title><link>https://www.youtube.com/watch?v=dUR9_gZZOfY</link><author>CNCF [Cloud Native Computing Foundation]</author><category>k8s</category><category>devops</category><category>video</category><enclosure url="https://www.youtube.com/v/dUR9_gZZOfY?version=3" length="" type=""/><pubDate>Fri, 20 Jun 2025 13:49:41 +0000</pubDate><source url="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA">CNCF</source><content:encoded><![CDATA[Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon India in Hyderabad (August 6-7), and KubeCon + CloudNativeCon North America in Atlanta (November 10-13). Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io

Sponsored Keynote: Hitachi’s Keycloak Journey - Evolution of Business and Community - Michito Okai, Software Engineer, Hitachi Ltd.

In this keynote session, Michito Okai will explain how Hitachi uses Keycloak for real business. Keycloak has a wide range of functions, complies with various standard specifications, and has good performance. Therefore, Keycloak can solve the requirements of various industries such as banking, insurance, and the public sector and so on. In fact, Hitachi has realized a variety of use cases in real business to solve customer requirements by making full utilization of Keycloak.

Also, to make full utilization of Keycloak in real business, Hitachi has been working on community activities. For example, based on requirements from customers, Hitachi added new functions and made Keycloak compliant with standard specifications.]]></content:encoded></item><item><title>Sponsored Keynote: Networking Reception Welcome, Presented by NRI - Hiroyuki Wada</title><link>https://www.youtube.com/watch?v=BACroos63Rk</link><author>CNCF [Cloud Native Computing Foundation]</author><category>k8s</category><category>devops</category><category>video</category><enclosure url="https://www.youtube.com/v/BACroos63Rk?version=3" length="" type=""/><pubDate>Fri, 20 Jun 2025 13:49:41 +0000</pubDate><source url="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA">CNCF</source><content:encoded><![CDATA[Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon India in Hyderabad (August 6-7), and KubeCon + CloudNativeCon North America in Atlanta (November 10-13). Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io

Sponsored Keynote: Networking Reception Welcome, Presented by NRI - Hiroyuki Wada, Nomura Research Institute, Ltd.

Join us as we kick off the Networking Reception with a warm welcome from NRI, proud sponsor of tonight’s gathering.]]></content:encoded></item><item><title>Keycloakify: A Practical Toolkit for Customizing Keycloak Interfaces - Joseph Garrone, Insee</title><link>https://www.youtube.com/watch?v=0peJITq1WXU</link><author>CNCF [Cloud Native Computing Foundation]</author><category>k8s</category><category>devops</category><category>video</category><enclosure url="https://www.youtube.com/v/0peJITq1WXU?version=3" length="" type=""/><pubDate>Fri, 20 Jun 2025 13:49:41 +0000</pubDate><source url="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA">CNCF</source><content:encoded><![CDATA[Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon India in Hyderabad (August 6-7), and KubeCon + CloudNativeCon North America in Atlanta (November 10-13). Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io

Keycloakify: A Practical Toolkit for Customizing Keycloak Interfaces - Joseph Garrone, Insee

Keycloakify is an open-source tool that simplifies theming in Keycloak by enabling the use of modern frameworks like React, Angular, and Svelte.

It supports customization of login, account, admin, and email interfaces, with real-time previews and standard frontend tooling.

In this session, we’ll walk through how it works, how it’s used in production environments, and how it compares to Keycloak’s built-in theming system.]]></content:encoded></item><item><title>Keynote: Keycloak Introduction and Demo - Marek Posolda, Keycloak Project Maintainer</title><link>https://www.youtube.com/watch?v=hwmko7glE6I</link><author>CNCF [Cloud Native Computing Foundation]</author><category>k8s</category><category>devops</category><category>video</category><enclosure url="https://www.youtube.com/v/hwmko7glE6I?version=3" length="" type=""/><pubDate>Fri, 20 Jun 2025 13:49:40 +0000</pubDate><source url="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA">CNCF</source><content:encoded><![CDATA[Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon India in Hyderabad (August 6-7), and KubeCon + CloudNativeCon North America in Atlanta (November 10-13). Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io

Keynote: Keycloak Introduction and Demo - Marek Posolda, Keycloak Project Maintainer

In this talk, Marek will introduce the Keycloak project. He will talk about the history of the Keycloak, use of Keycloak and how can be Keycloak used to secure your applications. Marek will show the simple demo how to secure your application with Keycloak.]]></content:encoded></item><item><title>Fine-Grained Authorization &amp; Beyond: Mastering Keycloak Patterns in AI-infused Apps - Daniel Oh</title><link>https://www.youtube.com/watch?v=Ry5m_SOXKd4</link><author>CNCF [Cloud Native Computing Foundation]</author><category>k8s</category><category>devops</category><category>video</category><enclosure url="https://www.youtube.com/v/Ry5m_SOXKd4?version=3" length="" type=""/><pubDate>Fri, 20 Jun 2025 13:49:40 +0000</pubDate><source url="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA">CNCF</source><content:encoded><![CDATA[Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon India in Hyderabad (August 6-7), and KubeCon + CloudNativeCon North America in Atlanta (November 10-13). Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io

Fine-Grained Authorization & Beyond: Mastering Keycloak Patterns in AI-infused Apps - Daniel Oh, Red Hat


Securing a single application with Keycloak and OIDC/OAuth 2.0 is straightforward, but what about complex microservice architectures, especially those incorporating AI capabilities? This session explores advanced patterns and best practices for leveraging Keycloak within distributed systems built with a specific focus on securing AI applications. We'll go beyond basic authentication and RBAC to implement fine-grained authorization for accessing and utilizing AI models using Keycloak Authorization Services. Topics include efficient token propagation between services (including those hosting AI models), securing service-to-service communication, handling multi-tenancy considerations for AI services, and integrating custom Keycloak policies to control access to sensitive AI functionalities and data. Learn how to build scalable, maintainable, and highly secure microservice ecosystems, including those leveraging AI, powered by Quarkus, Langchain4j, and Keycloak.]]></content:encoded></item><item><title>Don&apos;t Be Afraid to Operate Alone! The ABCs of Authentication Infrastructure Manag... Chotaro Iwasaki</title><link>https://www.youtube.com/watch?v=LjvmutbHr6s</link><author>CNCF [Cloud Native Computing Foundation]</author><category>k8s</category><category>devops</category><category>video</category><enclosure url="https://www.youtube.com/v/LjvmutbHr6s?version=3" length="" type=""/><pubDate>Fri, 20 Jun 2025 13:49:40 +0000</pubDate><source url="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA">CNCF</source><content:encoded><![CDATA[Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon India in Hyderabad (August 6-7), and KubeCon + CloudNativeCon North America in Atlanta (November 10-13). Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io

Don't Be Afraid to Operate Alone! The ABCs of Authentication Infrastructure Management - Chotaro Iwasaki, Giftee, Inc.

There are many documents and books that explain the basic concepts and configuration methods for Keycloak. However, the current situation is that concrete know-how about operation is not shared much.

Our company operates an authentication infrastructure centered on Keycloak for various services developed in-house. In this session, we will share the ideas and concrete efforts in introducing and operating a general-purpose authentication infrastructure.

We hope that this session will contribute to the revitalization of the Keycloak community in Japan by circulating the sharing of knowledge about Keycloak operation!]]></content:encoded></item><item><title>How To Manage Keycloak Securely by Using Terraform on Google Cloud - Atsushi Kitano, Cloud Ace</title><link>https://www.youtube.com/watch?v=HuHHKNRsOp8</link><author>CNCF [Cloud Native Computing Foundation]</author><category>k8s</category><category>devops</category><category>video</category><enclosure url="https://www.youtube.com/v/HuHHKNRsOp8?version=3" length="" type=""/><pubDate>Fri, 20 Jun 2025 13:49:40 +0000</pubDate><source url="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA">CNCF</source><content:encoded><![CDATA[Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon India in Hyderabad (August 6-7), and KubeCon + CloudNativeCon North America in Atlanta (November 10-13). Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io

How To Manage Keycloak Securely by Using Terraform on Google Cloud - Atsushi Kitano, Cloud Ace

We have launched a new service which monitors customers' systems.
It uses Keycloak to authenticate for customers and developers to use our service components, for instance, Grafana, ArgoCD, Backstage, Redmine, and so on.

So, Keycloak has personal information, and we have to manage it securely.
We're using Terraform to configure Keycloak, not for making mistakes due to creating by hand. And we don't want to encounter errors when running Terraform code from the developer's PC.
So we're running it from the CD agent. We use Cloud Build, a Google Cloud product, because it provides a private pool that allows us to use a specific IP address.

We'll introduce how to build this CD system and how to use Terraform in my session.]]></content:encoded></item><item><title>No More Configuration Confusion! Keycloak Mapper Basics for SEs – How to Work with... Takahiro Inoue</title><link>https://www.youtube.com/watch?v=7j2TqT7EU10</link><author>CNCF [Cloud Native Computing Foundation]</author><category>k8s</category><category>devops</category><category>video</category><enclosure url="https://www.youtube.com/v/7j2TqT7EU10?version=3" length="" type=""/><pubDate>Fri, 20 Jun 2025 13:49:40 +0000</pubDate><source url="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA">CNCF</source><content:encoded><![CDATA[Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon India in Hyderabad (August 6-7), and KubeCon + CloudNativeCon North America in Atlanta (November 10-13). Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io

No More Configuration Confusion! Keycloak Mapper Basics for SEs – How to Work with LDAP/External IdP Integration and OIDC Tokens - Takahiro Inoue, Red Hat

When using Keycloak, configuring Mappers is essential for integrating with LDAP or external IdPs and for managing OIDC tokens.

This session will cover three key types of Mappers:
User Federation Mappers used for integration with LDAP or Active Directory,
Identity Provider Mappers for mapping attributes from external IdPs such as Google and GitHub, and
Protocol Mappers for outputting information into tokens.
We'll explain the types and use cases for each Mapper to help you understand their roles.

This is the perfect session for anyone looking to quickly grasp the basics of Mappers and learn key configuration tips to avoid confusion in real-world environments.]]></content:encoded></item><item><title>OpenID Federation Trust Chain on Keycloak for Highly Assured Use Cases of Digital I... Yutaka Obuchi</title><link>https://www.youtube.com/watch?v=08Y40Au93w8</link><author>CNCF [Cloud Native Computing Foundation]</author><category>k8s</category><category>devops</category><category>video</category><enclosure url="https://www.youtube.com/v/08Y40Au93w8?version=3" length="" type=""/><pubDate>Fri, 20 Jun 2025 13:49:40 +0000</pubDate><source url="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA">CNCF</source><content:encoded><![CDATA[Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon India in Hyderabad (August 6-7), and KubeCon + CloudNativeCon North America in Atlanta (November 10-13). Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io

OpenID Federation Trust Chain on Keycloak for Highly Assured Use Cases of Digital Identity Wallet - Yutaka Obuchi, Hitachi

OpenID Federation 1.0 provides a framework to build trust between a Relying Party and an OpenID Provider that have no direct relationship so that the Relying Party can send OIDC/OAuth requests to the OpenID Provider without being previously registered.

One primary use case is the trust between an Issuer and a Holder (Wallet) on W3C’s Verifiable Credential Data Model, which is getting a lot of attentions as an approach to realize the Digital Identity Wallet ecosystem.
Especially when high assurance level is needed like EU Digital Identity Wallet, OpenID Federation can provide a strong solution.

In this session:
Firstly I will explain OpenID Federation and the reason why it is important for Digital Identity Wallet ecosystem.
Then I will explain what types of roles Keycloak can play with OpenID Federation Trust Chain.
Also I will show a simple demo of client registration with OpenID Federation Trust Chain on Keycloak.]]></content:encoded></item><item><title>Keynote: AI Agents with Keycloak in MCP - Takashi Norimatsu, Senior OSS Specialist, Hitachi Ltd.</title><link>https://www.youtube.com/watch?v=-CsygNAJt-0</link><author>CNCF [Cloud Native Computing Foundation]</author><category>k8s</category><category>devops</category><category>video</category><enclosure url="https://www.youtube.com/v/-CsygNAJt-0?version=3" length="" type=""/><pubDate>Fri, 20 Jun 2025 13:49:40 +0000</pubDate><source url="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA">CNCF</source><content:encoded><![CDATA[Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon India in Hyderabad (August 6-7), and KubeCon + CloudNativeCon North America in Atlanta (November 10-13). Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io

Keynote: AI Agents with Keycloak in MCP - Takashi Norimatsu, Senior OSS Specialist, Hitachi Ltd.

In this talk, Takashi investigates the possibility of integrating Keycloak with AI agents.
In the field of AI agents, Model Context Protocol (MCP) becomes a hot topic, which makes it easy for an AI agent/tool to connect internal/external services.

When an AI agent/tool implementing an MCP client accesses a remote external service implementing an MCP server, end user authentication and authorization is sometimes required. According to the MCP specification, OAuth 2.1 needs to be used for that, which implies that there is the possibility of using Keycloak for end user authentication and authorization because Keycloak supported OAuth 2.1.

Firstly, Takashi talks about MCP briefly and describes end user authentication and authorization of MCP in more detail. After that, the speaker shows the possible system configuration that includes Keycloak as a part of the MCP server.]]></content:encoded></item><item><title>Compliance in the Age of AI: Why Strong CI/CD Foundations Matter</title><link>https://devops.com/compliance-in-the-age-of-ai-why-strong-ci-cd-foundations-matter/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=compliance-in-the-age-of-ai-why-strong-ci-cd-foundations-matter</link><author>Arpad Kun</author><category>devops</category><pubDate>Fri, 20 Jun 2025 10:31:11 +0000</pubDate><source url="https://devops.com/">DevOps.com</source><content:encoded><![CDATA[]]></content:encoded></item><item><title>Streamline Operational Troubleshooting with Amazon Q Developer CLI</title><link>https://aws.amazon.com/blogs/devops/streamline-operational-troubleshooting-with-amazon-q-developer-cli/</link><author>Kirankumar Chandrashekar</author><category>devops</category><pubDate>Thu, 19 Jun 2025 22:11:59 +0000</pubDate><source url="https://aws.amazon.com/blogs/devops/">AWS DevOps blog</source><content:encoded><![CDATA[Amazon Q Developer is the most capable generative AI–powered assistant for software development, helping developers perform complex workflows. Amazon Q Developer command-line interface (CLI) combines conversational AI with direct access to AWS services, helping you understand, build, and operate applications more effectively. The Amazon Q Developer CLI executes commands, analyzes outputs, and provides contextual recommendations based on best practices for troubleshooting tools and platforms available on your local machine.In today’s cloud-native environments, troubleshooting production issues often involves juggling multiple terminal windows, parsing through extensive log files, and navigating numerous AWS console pages. This constant context-switching delays problem resolution and adds cognitive burden to teams managing cloud infrastructure.In this blog post, you will explore how Amazon Q Developer CLI transforms the troubleshooting experience by streamlining challenging scenarios through conversational interactions.The Traditional Troubleshooting ExperienceWhen issues arise, engineers typically spend hours manually examining infrastructure configurations, reviewing logs across services, and analyzing error patterns. The process requires switching between multiple interfaces, correlating information from various sources, and deep AWS knowledge. This complex workflow often extends problem resolution from hours into days and increase the burden on the infrastructure teams.Solution: Amazon Q Developer CLIAmazon Q Developer CLI streamlines the entire troubleshooting process, from initial investigation to problem resolution, making complex AWS troubleshooting accessible and efficient through simple conversations.How Amazon Q Developer CLI works:Natural Language Interface: Execute AWS CLI commands and interact with AWS services using conversational prompts Map out infrastructure and analyze configurationsIntelligent Log Analysis: Parse, correlate, and analyze logs across servicesRoot Cause Identification: Pinpoint issues through AI-powered reasoning Implement fixes with minimal human intervention Test solutions and explain complex issues simplyOne of the built-in tools within the Amazon Q Developer CLI, , enables natural language interaction with AWS services, as shown in Figure 1. This tool leverages the AWS CLI permissions configured on your local machine, allowing secure and authorized access to your AWS resources.Figure 1: Tools selection in Amazon Q Developer CLIReal-World Troubleshooting ScenarioDemonstration Environment SetupThis demonstration was performed with the following environment configuration:The environment includes a local development machine with necessary tools, appropriate AWS account permissions, and terminal access. By starting Amazon Q Developer CLI in the project directory, it has immediate access to relevant code and configuration files.Scenario: Troubleshooting NGINX 5XX ErrorsThe scenario demonstrates troubleshooting a multi-tier application architecture as shown in figure 2 deployed on Amazon ECS Fargate with:Application Load Balancer (ALB) distributing traffic across availability zonesNGINX reverse proxy service handling incoming requests processing business logic enabling internal communication Logs providing centralized loggingFigure 2: AWS Architecture diagram for the app used in this blog postTraditional Troubleshooting StepsFor the architecture in figure 2, when 502 Gateway Timeout errors occur, traditional troubleshooting requires:Checking ALB target group healthExamining ECS service status across multiple consolesAnalyzing CloudWatch logs from different log groupsCorrelating error patterns between servicesReviewing infrastructure code for configuration issuesImplementing and deploying fixesAmazon Q Developer CLI ApproachInstead, let’s see how Amazon Q Developer CLI handles this systematically, step by step:Step1: Initial Problem ReportAmazon Q Developer CLI is provided with the initial prompt as a problem statement within the application project directory as shown in the following screenshot in figure 3. Amazon Q Developer responds back and says it is going investigate the 502 Gateway Timeout errors in the NGINX application.Our production NGINX application is experiencing 502 Gateway Timeout errors. 
I have checked out the application and infrastructure code locally and the AWS CLI 
profile 'demo-profile' is configured with access to the AWS account where the 
infrastructure and application is deployed to. Can you help investigate and diagnose the issue?
Figure 3: Amazon Q Developer CLI with initial prompt and problem statementStep2: Systematic Infrastructure DiscoveryAmazon Q Developer CLI start to systematically discovering the infrastructure as shown in the following screenshot in figure 4. If you see the initial prompt did not include that the app is hosted on ECS, but Amazon Q Developer CLI understood the context and executes the AWS CLI calls to describe the Cluster and the services within it. It made sure that the ECS tasks are running for both the services within the Cluster. It is a key discovery that both services show healthy status (1/1 desired count), indicating the issue isn’t service availability.Figure 4: AWS Infrastructure discovery by Amazon Q Developer CLIStep 3: Intelligent Log AnalysisAmazon Q Developer CLI retrieves and analyzes recent CloudWatch logs from the NGINX container, immediately identifying the critical error pattern as shown in the following screenshot in figure 5, where Amazon Q Developer responds: “Perfect! I found the issue. The NGINX logs show clear 504 gateway timeout with upstream timeout messages.”Figure 5: CloudWatch Log analysis by Amazon Q Developer CLIStep 4: Amazon Q Developer CLI Analysis and Root Cause IdentificationAmazon Q Developer examines backend service logs and discovers a mismatch between the backend service response time and NGINX timeout settings, as seen in the following screenshot in figure 6.Figure 6: Root cause identification by Amazon Q Developer CLIStep 5: Amazon Q Developer CLI Root Cause AnalysisAmazon Q Developer CLI examines the ECS task definitions to identify the exact configuration mismatch, as shown in the following screenshot in figure 7. Amazon Q Developer finds that:Backend service is configured with response_delay=15000 (15 secs)NGINX proxy is configured with proxy_read_timeout 10sThis mismatch causes 504 gateway timeout errors when the backend response exceeds NGINX’s timeout threshold.Figure 7: Root cause analysis and issue detection by Amazon Q Developer CLIStep 6: Automated Code FixHere’s where Amazon Q Developer CLI truly excels—it doesn’t just diagnose; it implements the fix. Since Amazon Q Developer CLI is started within the project where the CDK code for ECS task definition is defined, it identified the code configuration and also modified it, as shown in the following screenshot in figure 8.Figure 8: CDK code fix by Amazon Q Developer CLIAmazon Q Developer CLI builds and deploys the fix by executing  and  using the ‘‘ AWS CLI profile that was initially provided in the prompt, as shown in the following screenshot in figure 9.Figure 9: CDK code build and deployment by Amazon Q Developer CLIAmazon Q Developer CLI validates the solution by sending a curl request to the ALB endpoint after the successful deployment, as shown in the following screenshot in figure 10.Figure 10: Fix validation by Amazon Q Developer CLIIn addition to that, Amazon Q Developer also sends a request to the health check endpoint and validates everything is working after the fix was deployed, as shown in the following screenshot in figure 11.Figure 11: Health endpoint validation by Amazon Q Developer CLIWhat Amazon Q Developer CLI AccomplishedUsing just conversational commands, Amazon Q Developer CLI performed a complete troubleshooting cycle:Infrastructure Discovery: Automatically mapped ECS clusters, services, and dependencies Analyzed thousands of log entries across multiple services Identified exact configuration mismatch between NGINX’s timeout (10s) and the backend’s response delay (15s) Located problematic timeout setting in CDK infrastructure codeAutomated Implementation: Modified infrastructure code to increase the NGINX timeout Built, deployed, and validated the complete solution Verified both fix effectiveness and overall system healthAmazon Q Developer CLI handles troubleshooting tasks through a single, conversational interface, eliminating the need for multiple tools or AWS CLI commands.Amazon Q Developer CLI represents a significant evolution in how we troubleshoot cloud infrastructure issues. By combining natural language understanding with powerful command execution capabilities, it transforms complex troubleshooting workflows into efficient, action-oriented dialogues. Whether you’re dealing with NGINX 5XX errors or similar issues across other AWS services, Amazon Q Developer CLI can help you diagnose issues, implement fixes, and validate solutions—all through a conversational interface that feels natural and intuitive.Give Amazon Q Developer CLI a try the next time you encounter a troubleshooting challenge, and experience the difference it can make in your operational workflow.Kirankumar Chandrashekar is a Generative AI Specialist Solutions Architect at AWS, focusing on Amazon Q Developer. Bringing deep expertise in AWS cloud services, DevOps, modernization, and infrastructure as code, he helps customers accelerate their development cycles and elevate developer productivity through innovative AI-powered solutions. By leveraging Amazon Q Developer, he enables teams to build applications faster, automate routine tasks, and streamline development workflows. Kirankumar is dedicated to enhancing developer efficiency while solving complex customer challenges, and enjoys music, cooking, and traveling.]]></content:encoded></item><item><title>Announcing the new AWS CDK EKS v2 L2 Constructs</title><link>https://aws.amazon.com/blogs/devops/announcing-the-new-aws-cdk-eks-v2-l2-constructs/</link><author>Matteo Luigi Restelli</author><category>devops</category><pubDate>Thu, 19 Jun 2025 21:07:01 +0000</pubDate><source url="https://aws.amazon.com/blogs/devops/">AWS DevOps blog</source><content:encoded><![CDATA[Today, we’re announcing the release of  construct, a new alpha version of AWS Cloud Development Kit (CDK) L2 construct for Amazon Elastic Kubernetes Service (EKS). This construct represents a significant change in how developers can define and manage their EKS environments using infrastructure as code. While maintaining the powerful capabilities of its predecessor library for creating and managing EKS clusters, this alpha release introduces key architectural improvements that enhance both flexibility and maintainability.The AWS Cloud Development Kit (AWS CDK) is an open-source software development framework that enables you to define your cloud infrastructure using familiar programming languages and deploy it through AWS CloudFormation. The CDK uses constructs – a layered abstraction concept where Layer 1 (L1) constructs map directly to CloudFormation resources, while Layer 2 (L2) constructs provide intuitive APIs, helper functions, best-practice defaults, and generate a lot of the boilerplate code and glue logic for you. This layered approach means you can seamlessly move between high-level abstractions for common use cases and low-level resource definitions when you need fine-grained control. The result is an Infrastructure as Code (IaC) experience that helps you maintain productivity while ensuring you have access to the full power of AWS services when you need it. You can read more about constructs and their benefits in the CDK user guide.In this post we’ll explore:How to use the new EKS v2 constructAmazon EKS is a managed Kubernetes service that makes it easy to run Kubernetes on AWS without needing to manage the control plane or nodes. EKS automatically handles critical tasks like patching, node provisioning, and upgrades. You can run EKS using EC2 instances for worker nodes, AWS Fargate for serverless containers, or a combination of both, providing the flexibility to choose the right compute option for your workloads.While the existing EKS L2 construct has served customers well, we identified opportunities to further enhance the developer experience and operational efficiency based on their feedback. The new  construct delivers significant improvements through native AWS CloudFormation resources, modern Access Entry-based authentication, and enhanced architectural flexibility. Key benefits include reduced deployment overhead, simplified cluster access management, support for multiple EKS clusters within a single stack, and granular control over resource creation with features like the optional  Lambda handler. These improvements help customers build and manage their EKS infrastructure more efficiently while maintaining the robust functionality they expect from AWS CDK constructs.Given that this construct is in the alpha stage, you’ll need to install and import the construct using the experimental construct libraries process. During the alpha stage, the CDK team is actively gathering customer feedback and iterating on the implementation. Once the construct meets our bar for general availability, we’ll integrate it directly into the AWS CDK core library, making it as easily accessible as our other L1 and L2 constructs. This approach allows us to rapidly deliver new capabilities while ensuring they meet the high standards our customers expect.Deploying EKS Cluster with Default ConfigurationLet’s explore how to create an Amazon EKS cluster using AWS CDK  construct with minimal configuration requirements. The following example demonstrates the most straightforward way to define an EKS cluster, leveraging the power of CDK’s opinionated defaults. Creating a new cluster is done using the  construct. The only required property is the Kubernetes version.import * as eksv2 from '@aws-cdk/aws-eks-v2-alpha';

// Creating an EKS Cluster with default properties
const eksCluster = new eksv2.Cluster(this, 'EksCluster', {
    version: eksv2.KubernetesVersion.V1_32
});This translates in the following Architecture as shown in figure 1:Figure 1 – L2 CDK construct v2 for EKS, Default Architecture – A logically isolated section of the AWS Cloud that spans across two Availability Zones, equipped with an Internet Gateway to enable secure communication with the internet. This multi-AZ design helps ensure your applications remain available even if an Availability Zone experiences issues. – A fully managed Kubernetes control plane deployed in an AWS-managed VPC , providing high availability and automatic version management for the Kubernetes control plane components.Public Subnet Infrastructure – Two public subnets, each with its own NAT Gateway Instance, enabling your cluster components to securely access the internet for essential operations like pulling container images and downloading updates. These NAT Gateways provide a secure outbound path while protecting your workloads from direct internet exposure.Private Subnet Configuration – Two private subnets optimized for running your EKS worker nodes, offering enhanced security by isolating your workloads from direct internet access while maintaining the ability to communicate with AWS services and the internet through the NAT Gateways. – A comprehensive set of IAM roles and policies that implement the principle of least privilege: 
  Control plane service role that enables EKS to manage AWS resources on your behalfNode IAM role that allows worker nodes to interact with other AWS services and join the EKS clusterYou can also use  to provision a cluster that uses only Fargate workers.import * as eksv2 from '@aws-cdk/aws-eks-v2-alpha';

// Creating an EKS Cluster with default properties and Fargate workers
const eksFargateCluster = new eksv2.FargateCluster(this, 'EksFargateCluster', {
   version: eksv2.KubernetesVersion.V1_32,
});To help our customers maintain better control over their cluster access patterns, the Kubectl Handler is not automatically deployed with the default configuration. You can easily enable this functionality by configuring the  property when you need kubectl access management as shown below.import * as eksv2 from '@aws-cdk/aws-eks-v2-alpha';
import { KubectlV32Layer } from '@aws-cdk/lambda-layer-kubectl-v32'

// Creating an EKS Cluster with default properties and kubectl handler
const eksCluster = new eksv2.Cluster(this, 'EksCluster', {
   version: eksv2.KubernetesVersion.V1_32,
   kubectlProviderOptions: {
      kubectlLayer: new KubectlV32Layer(this, 'KubectlLayer')
   },
});Deploying EKS Cluster with AutoModeEKS Auto Mode represents a significant advancement in how Amazon EKS manages compute capacity for Kubernetes clusters. This intelligent capacity management system automatically provisions and scales node groups based on workload demands, removing the need for manual capacity planning.When you create a new cluster with the  construct, EKS Automode is activated by default, by means that DefaultCapacityType.AUTOMODE is automatically set as the default capacity type for the EKS Cluster. If you prefer, you can specify the  to AutoMode:import * as eksv2 from '@aws-cdk/aws-eks-v2-alpha';

// Creating an EKS Cluster with AutoMode
const eksCluster = new eksv2.Cluster(this, 'EksCluster', {
   version: eksv2.KubernetesVersion.V1_32,
   defaultCapacityType: eksv2.DefaultCapacityType.AUTOMODE, // default value
});
After deploying the Stack containing the construct instance, in the EKS Console you’ll be able to see that an EKS Cluster has been created with AutoMode enabled:Figure 2 – EKS Cluster Deployed with AutomodeAuto Mode enhances your Amazon EKS experience by automatically configuring two strategically designed node pools out of the box:A system node pool optimized for running critical cluster system components and add-ons, ensuring reliable cluster operations.A general node pool specifically tuned for your application workloads, providing the flexibility needed for diverse containerized applications.You can configure which node pools to enable through the  property:import * as eksv2 from '@aws-cdk/aws-eks-v2-alpha';

// Creating an EKS Cluster with Automode and selecting nodePools
const eksCluster = new eksv2.Cluster(this, 'EksCluster', {
   version: eksv2.KubernetesVersion.V1_32,
   defaultCapacityType: eksv2.DefaultCapacityType.AUTOMODE,
   compute: {
      nodePools: ['system', 'general-purpose'],
   },
});Deploying EKS Cluster with Managed Node GroupsAmazon EKS Managed Node Groups deliver a seamless compute management experience for your Kubernetes clusters. This powerful capability eliminates operational complexity by automating the end-to-end lifecycle of Amazon EC2 instances that power your containerized applications. Behind the scenes, Amazon EKS managed node groups intelligently orchestrate these changes, ensuring zero-disruption to your applications through graceful node draining. The service automatically leverages the latest Amazon EKS-optimized AMIs, providing a secure and optimized foundation for your workloads.By setting  to , customers can leverage the traditional managed node group management approach:import * as eksv2 from '@aws-cdk/aws-eks-v2-alpha';

// Creating an EKS Cluster with Managed Node Groups and default instance types
const eksCluster = new eksv2.Cluster(this, 'EksCluster', {
   version: eksv2.KubernetesVersion.V1_32,
   defaultCapacityType: eksv2.DefaultCapacityType.NODEGROUP,
});
By default, when using DefaultCapacityType.NODEGROUP, this library will allocate a managed node group with two  instances. After deploying the above code, you can check the EKS Console to see that an EKS Cluster has been deployed as shown in figure 3:Figure 3 – EKS Cluster Deployed with Managed Node GroupsYou can also check the Compute tab and see the Managed Node Group Configuration as shown in figure 4:Figure 4 – EKS Cluster Managed Node Group Default ConfigurationIf you want to have control over instance types of a Managed Node Group, you can specify the default EC2 type as property of the construct:import * as eksv2 from '@aws-cdk/aws-eks-v2-alpha';
import * as ec2 from 'aws-cdk-lib/aws-ec2'

// Creating an EKS Cluster with Managed Node Groups and specific instance types
const eksCluster = new eksv2.Cluster(this, 'EksCluster', {
   version: eksv2.KubernetesVersion.V1_32,
   defaultCapacityType: eksv2.DefaultCapacityType.NODEGROUP,
   defaultCapacity: 5,
   defaultCapacityInstance: ec2.InstanceType.of(ec2.InstanceClass.M5, ec2.InstanceSize.SMALL),
});
You can also specify additional customizations after the EKS cluster declaration, via the  method:import * as eksv2 from '@aws-cdk/aws-eks-v2-alpha';
import * as ec2 from 'aws-cdk-lib/aws-ec2'

// Creating an EKS Cluster with Managed Node Groups and specific instance types
const eksCluster = new eksv2.Cluster(this, 'EksCluster', {
   version: eksv2.KubernetesVersion.V1_32,
   defaultCapacityType: eksv2.DefaultCapacityType.NODEGROUP,
   defaultCapacity: 0,
});

eksCluster.addNodegroupCapacity('custom-node-group', {
  instanceTypes: [new ec2.InstanceType('m5.large')],
  minSize: 4,
  diskSize: 100,
});
Managing Permissions through Access EntriesThe new  construct transitions away from the previous ConfigMap-based authentication (which is deprecated in EKS) in favor of the Access Entries Authentication mode. This change introduces Access Entry as the standardized method for managing cluster permissions, offering a more streamlined and secure approach to granting cluster access to IAM users and roles.You can define Access Policies through the  construct and you can adjust the scope of the Access Policy to the entire EKS cluster or to specific EKS Namespaces:import * as eksv2 from '@aws-cdk/aws-eks-v2-alpha';

// AmazonEKSClusterAdminPolicy with `cluster` scope
eks.AccessPolicy.fromAccessPolicyName('AmazonEKSClusterAdminPolicy', {
   accessScopeType: eks.AccessScopeType.CLUSTER,
});

// AmazonEKSAdminPolicy with `namespace` scope
eks.AccessPolicy.fromAccessPolicyName('AmazonEKSAdminPolicy', {
   accessScopeType: eks.AccessScopeType.NAMESPACE,
   namespaces: ['foo', 'bar'] 
});You can then grant access to specific IAM Roles using the  method:import * as iam from 'aws-cdk-lib/aws-iam'

// Defining a IAM Role
const clusterAdminRole = new iam.Role(this, 'ClusterAdminRole', {
   assumedBy: new iam.ArnPrincipal('arn_for_trusted_principal'),
});

// Creating an EKS Cluster with AutoMode
const eksCluster = new eksv2.Cluster(this, 'EksCluster', {
   version: eksv2.KubernetesVersion.V1_32,
   defaultCapacityType: eksv2.DefaultCapacityType.AUTOMODE,
});

// Cluster Admin role for this cluster
eksCluster.grantAccess('clusterAdminAccess', clusterAdminRole.roleArn, [
	eks.AccessPolicy.fromAccessPolicyName('AmazonEKSClusterAdminPolicy', {
   	    accessScopeType: eks.AccessScopeType.CLUSTER,
    }),
]);When the Principal assumes the , it receives seamless access to the EKS cluster through a carefully orchestrated permission chain. This access is governed by the AmazonEKSClusterAdminPolicy, which is automatically attached to the Access Policy linked to the IAM Role.In this post, we introduced the new AWS CDK L2 construct  for Amazon EKS, demonstrating how it simplifies cluster deployment while offering enhanced flexibility and operational efficiency. Through practical examples, we showcased how customers can leverage the construct’s intelligent defaults and customization options to build production-ready Kubernetes environments on AWSThe new L2 construct for Amazon EKS delivers significant improvements that help customers accelerate their container adoption journey:: Eliminates dependency on Custom Resources and AWS Lambda functions by utilizing native AWS CloudFormation resources, resulting in faster and more reliable deployments.: Implements Access Entry-based authentication, replacing the deprecated ConfigMap approach with a more secure and programmable solution.: Removes the single-cluster-per-stack limitation and eliminates nested stacks, enabling more flexible architectural patterns.Optimized Resource Creation: Makes the kubectl Lambda handler optional, giving customers fine-grained control over their infrastructure components.: Provides automated node group management with intelligent defaults while maintaining full customer control when needed.To get started with the new EKS L2 construct, visit the AWS CDK documentation. If you have specific features you’d like to see added, we encourage you to submit a feature request in the aws-cdk GitHub repository. Your feedback helps us continue innovating on your behalf.]]></content:encoded></item><item><title>Accelerate development with secure access to Amazon Q Developer using PingIdentity</title><link>https://aws.amazon.com/blogs/devops/accelerate-development-with-secure-access-to-amazon-q-developer-using-pingidentity/</link><author>Sid Vantair</author><category>devops</category><pubDate>Thu, 19 Jun 2025 21:03:14 +0000</pubDate><source url="https://aws.amazon.com/blogs/devops/">AWS DevOps blog</source><content:encoded><![CDATA[Customers adopting Amazon Q Developer, a generative AI-powered coding companion, often need authentication through existing identity providers like PingIdentity. By leveraging AWS IAM Identity Center, organizations can enable their developers to access Amazon Q Developer with their existing PingIdentity credentials, streamlining authentication and removing the need for separate login procedures. Amazon Q Developer can chat about code, provide inline code completions, and generate new code. It also scans your code for security vulnerabilities and makes code improvements, including language updates, debugging, and optimizations. Amazon Q Developer comes in two tiers. The Free Tier is available at no cost for individual use. The Pro Tier is a paid version offering enterprise access controls, an analytics dashboard, customization, and higher usage limits. Organizations that enable the Pro tier of Amazon Q Developer for their developers typically authenticate with AWS IAM Identity Center. This approach is popular due to its ability to federate with external identity providers. In this blog, we will show you how to set up PingIdentity as an external IdP for IAM Identity Center and allow developers to access Amazon Q Developer using their existing PingIdentity login credentials.Figure 1 – Solution OverviewThe authentication workflow is as follows:The developer initiates an access request to Amazon Q Developer.IAM Identity center checks authentication status.If not authenticated, redirects to PingIdentity login.Developer provides PingIdentity Credentials.PingIdentity validates credentials and sends SAML response.IAM Identity Center verifies the SAML response.Upon successful verification, grants Amazon Q Developer access.Developer begins using Amazon Q Developer.PingIdentity environment with users and groups already setup for Amazon Q Developer accessPro Tier subscription of Amazon Q DeveloperIn this section, we demonstrate how to create a SAML-based connection between PingIdentity and IAM Identity Center, enabling you to access Amazon Q Developer seamlessly using your PingIdentity credentials.: You will need to switch between PingIdentity portal and IAM Identity Center in your browser. We recommend opening a new browser tab for each console.Step 1: Enable AWS Single Sign-On in PingIdentityThis step involves enabling AWS Single Sign-On application within PingIdentity.In the PingIdentity console, Navigate to the Applications Tab > Application Catalogfor AWS Single Sign-On and select to start the .Figure 2 – PingIdentity Application CatalogAlt Text: Screenshot of the PingIdentity Application Catalog interface. The search term “aws” is entered in the search bar, displaying three results: Amazon Web Services – AWS, AWS Gov-Cloud, and AWS Single Sign-On. The “AWS Single Sign-On” option is outlined with a red box and includes a plus button to add the applicationProvide Name, SSO Region and SSO Tenant ID and choose Name – Input an appropriate name for the connectionSSO Region – Input the appropriate regionTenant ID – Identity Store ID You can run the following CLI command to retrieve the value. It’s a 10-digit alphanumeric prefixed by “d-“.aws sso-admin list-instances –query ‘Instances[0].IdentityStoreId’Navigate to  and select  from the drop down.Figure 3 – AWS Single Sign-On attribute mappingAlt Text: Screenshot of the AWS Single Sign-On configuration in PingIdentity. The screen shows Step 2 of the setup process where the SAML attribute SAML_SUBJECT is mapped to the PingOne attribute “Email Address”. A red box highlights the mapping section under “PingOne Mappings”.Search and select the group that you have created earlier for enabling access to Amazon Q Developer and select to add the group.Figure 4 – Select PingIdentity directory Groups for Amazon Q Developer accessAlt Text: Screenshot of Step 3 in the AWS Single Sign-On setup process in PingIdentity. The screen shows the group selection interface where the “Amazon Q” group is listed. A plus icon is shown next to the group to add it, and a blue “Save” button is highlighted in the bottom-right corner to confirm the configuration.Step 2: Connecting PingIdentity with IAM identity CenterThis step involves configuring PingIdentity with the AWS IAM Identity Center sign-on details to complete the authentication setup.In the PingIdentity console, Navigate to the Applications Tab > Applications and select the application you created earlier in Step 1Select Enable Advanced Configuration and choose .Figure 5 – Enable Advanced configuration for AWS single Sign-On applicationAlt Text: Screenshot of the PingIdentity Applications dashboard showing the AWS Single Sign-On application selected. The overview panel displays key configuration sections including protocol (SAML), mapped attributes, selected policies, and access group (Amazon Q). The option “Enable Advanced Configuration” is highlighted near the bottom of the panel.Scroll down and select This will save the Metadata file to your local computer, which you will use later during the configuration process.Under , select  from the  drop-down menu.Figure 6 – Change identity source in IAM Identity Center ConsoleAlt Text: Screenshot of the IAM Identity Center settings page, focused on the “Identity source” tab. The page displays details such as identity source, authentication method, AWS access portal URL, issuer URL, and identity store ID. A dropdown menu labeled “Actions” is expanded in the top-right corner, showing options to “Customize AWS access portal URL” and “Change identity source,” highlighted with a red box.On the next page, select External identity provider and choose .Under Service provider metadata copy the IAM Identity Center Assertion Consumer Service (ACS) URL. Figure 7 – Copy IAM Identity Center ACS URL Alt Text: Screenshot of the “Configure external identity provider” step in the AWS IAM Identity Center setup process. The screen displays service provider metadata including the AWS access portal sign-in URL, IAM Identity Center Assertion Consumer Service (ACS) URL (highlighted with a red box), and IAM Identity Center issuer URL. A button labeled “Download metadata file” is shown in the upper right.Now go back to the PingIdentity browser tab and Navigate to the  tab and select to edit the details.Paste the ACS URL you copied from the IAM identity center console and choose .Figure 8 – Configuring AWS Single Sign-On SAML Settings in PingIdentity consoleAlt Text: Two screenshots showing the configuration and editing of SAML settings for AWS Single Sign-On in PingIdentity. The first image displays the static configuration view, listing the ACS URL, signing key (“PingOne SSO Certificate for Administrators environment”), signing method (“Response”), and signing algorithm. The second image shows the editable configuration screen with the ACS URL input field highlighted in red, alongside dropdowns for selecting the signing key, options for signing method (Assertion, Response, or both), and the RSA_SHA256 signing algorithm. These screens guide users through setting up secure SAML integration with AWS SSO.Step 3: Configure PingIdentity as external IdP in IAM identity CenterThis step involves setting up PingIdentity as an external IdP in IAM Identity Center to enable federated access.Navigate back to the previous browser tab where you had IAM Identity Center console open.Upload the downloaded PingIdentity IdP SAML metadata file from step 3 of previous section and select Figure 9 – AWS IAM Identity Center metadataAlt Text: Screenshot of the AWS Identity Center configuration screen where the user uploads the IdP SAML metadata XML file. The metadata file is shown as successfully selected. Below are empty fields for optional manual entry of IdP sign-in URL, IdP issuer URL, and IdP certificate. The “Next” button is highlighted in orange at the bottom right, indicating the next step in the setup process.Review the list of changes. Once you are ready to proceed, type then select .Step 4: Enable provisioning and identity-aware sessions in IAM identity CenterThis step involves configuring user provisioning and enabling identity-aware sessions in AWS IAM Identity Center to support dynamic access control.On the  page, locate and enable automatic provisioning. This immediately enabled automatic provisioning in IAM Identity Center and displays the necessary SCIM endpoint and access token information.In the Inbound automatic provisioning dialog box, copy each of the values for the following options. You will need to paste these later when you configure provisioning in PingIdentity. 
  Figure 10 – IAM Identity Center Settings for identity aware sessions and automatic provisioningAlt Text: Two options are displayed for further configuration: “Enable identity-aware sessions” and “Automatic provisioning.” Both options have an “Enable” button on the right-hand side, highlighted in red.Step 5: Configure connections provisioning in PingIdentityThis step involves setting up connection provisioning in PingIdentity to enable automatic user and group management.In the PingIdentity console, Navigate to the Integrations > Provisioning.Select plus icon > New ConnectionUnder connection type Identity Store.Figure 11 – PingIdentity connection provisioningAlt Text: PingIdentity Provisioning configuration screen. The left sidebar highlights the “Provisioning” tab. The main panel shows the “Create a New Connection” dialog with two connection type options: “Identity Store” and “Gateway.” The “Identity Store” option is selected using the “Select” button on the right. A plus (+) icon at the top indicates the option to add a new provisioning connection.Select SCIM outbound from the list of options and select Provide a name for the connection and select .Paste the  into the  field.Navigate to  and select .Paste the into the Oauth Access Token field.Select Test Connection to validate the connectivity and select .Figure 12 – Configure authentication detailsAlt Text: PingIdentity interface showing the “Configure Authentication” step in the “Create a New Connection” wizard. Key fields include the SCIM Base URL, SCIM Version (2.0), Authentication Method (OAuth 2 Bearer Token), OAuth Access Token (obscured), and resource paths for Users and Groups. The “Test Connection” and “Next” buttons are visible at the bottom.Navigate to  and change to .Choose . By default, the connection is created in a Disabled state.Figure 13 – Edit UserFilter Expressions for the connectionAlt Text: Final step in the PingIdentity “Create a New Connection” wizard showing the “Configure Preferences” screen. The highlighted fields include “User Filter Expression” with the value userName Eq “%s”, “User Identifier” set to userName, and group membership handling options (“Merge” and “Overwrite” with “Overwrite” selected). A “Save” button is highlighted at the bottom right.Select the connection you created and select the toggle switch to  the connection.Figure 14 – Enable the connectionAlt Text: PingIdentity configuration screen showing the IAM Identity Store integration. The page displays the identity store name, and tabs for “Overview” and “Configuration.” A toggle switch in the top-right corner is highlighted, indicating the integration is currently enabled.Step 6: Configure rules provisioning in PingIdentityThis step involves setting up provisioning rules in PingIdentity to define how users and groups are synchronized.In the PingIdentity console, Navigate to the Integrations > Provisioning.Select Provide a Name and Description for the rule.Select  to select the Connection you created in the previous step.Figure 15 – Add the IAM identity center connection to the ruleAlt Text: Screenshots showing the final steps in connecting the IAM Identity Center to the IAM identity store using PingIdentity. The first image shows the IAM Identity Store connection listed under “Available Connections” with a plus (+) icon to initiate the link. The second image shows the selected connection from the PingOne Directory (P1) as the source and IAM identity store (SCIM) as the target, with the option to “Save” the configuration.If you want to sync users from your PingIdentity directory, create a user filter. To do so, navigate to  and select  to edit the settings.Choose the appropriate filter from the drop down based on your use case and select . I have chosen Group Name which has been designated for Amazon Q Developer access.Figure 16 – PingIdentity user filterAlt Text: Screenshot of the “Edit User Filter” interface in IAM Identity Center. The user filter is configured to provision users who belong to a group with names that contain “Amazon Q Developer.” The condition logic is set to match if “Any” of the conditions are true.If you want to sync a group from your PingIdentity directory, create group provisioning. To do so, navigate to  and select  to edit the settings.Select the appropriate group which has been designated for Amazon Q Developer access and choose .Figure 17 – PingIdentity Group ProvisioningAlt Text: Screenshot of the “Edit Group Provisioning” screen in IAM Identity Center. The group “Amazon Q Developer” is selected for outbound provisioning. A “Save” button is highlighted in the bottom-left corner.Navigate to Attribute Mapping and select the pencil icon to edit the settings.Delete the PingOne Directory attribute .Add a new attribute and select Username as PingOne Directory and displayName as IAM identity Store.Figure 18 – PingIdentity attribute mappingAlt Text: Two screenshots showing the editing of attribute mappings in IAM Identity Center. The first image displays default mappings such as ‘Email Address’ to ‘workEmail’ and ‘Username’ to ‘userName’, with an option to delete or update each field. The second image shows the addition of a new attribute mapping from ‘Username’ to ‘displayName’, along with highlighted ‘Add’ and ‘Save’ buttons.Select the rule you created and select the toggle switch to enable the rule.This automatically provisions the users/groups from PingIdentity to IAM identity Center using SCIM.Figure 19 – PingIdentity Users and Groups Sync status using SCIMAlt Text: IAM Identity Center sync summary showing successful user and group provisioning. The first image highlights two users impacted and successfully synced. The second image highlights one group impacted and successfully synced. Sync status is marked ‘ACTIVE’ in both views, confirming successful integration between PingOne and AWS IAM Identity Center.Step 7: Provide access to Amazon Q DeveloperThis step involves locating and subscribing the groups that need permission to use Amazon Q Developer.In the Amazon Q Developer console, under Subscriptions add the IAM identity center groups which require access to Amazon Q Developer.Select and search for the group name.Figure 20 – Amazon Q Developer subscriptions pageAlt Text: Screenshot of the Amazon Q Developer Subscriptions page in the AWS Management Console. The “Groups” tab is selected, displaying “Amazon Q Developer,” with a subscription status of “Subscribed.” The “Amazon Q Developer” group is highlighted with a red box.Setup Amazon Q Developer with IAM Identity CenterThis section guides you through installing the Amazon Q Developer extension and setting up authentication with IAM Identity Center.To set up Amazon Q Developer extension in your integrated development environment (IDE), complete the steps in AWS documentation.Once extension is installed Choose Amazon Q icon in your IDE.Select Use with Pro license and chooseProvide the Start URL. You can retrieve this AWS access portal URL from the IAM Identity Center Console.Figure 21 – IAM identity center access portal URLAlt Text: Screenshot of the IAM Identity Center settings page in the AWS Console, displaying the identity source configuration. It shows that the identity source is set to “External identity provider” with SAML 2.0 authentication and SCIM provisioning. The highlighted section includes the AWS access portal URL and the Identity Store ID. The “Settings” tab is selected in the left navigation pane.Provide the region that hosts the identity directory and choose Select on the resulting pop up which redirects to your browser.The browser redirects you to the Pingone URL where you enter your PingIdentity credentials and select .Upon successful authentication, select on the resulting pop up to login successfully.Figure 22 – Setup Visual Studio Code Amazon Q Developer extensionAlt Text: A screen recording of Visual Studio Code where the user selects the Amazon Q icon from the sidebar. The screen transitions to a login prompt indicating that the user must authenticate using their PingIdentity credentials via IAM Identity Center before accessing Amazon Q Developer features. The message highlights that authentication is required to continue.Upon successfully completing the previous step, you can now leverage the code suggestions by Amazon Q Developer.Figure 23 – Amazon Q Developer exampleAlt Text: A screen recording of Visual Studio Code where Amazon Q Developer generates a sample code inline. To avoid ongoing charges after testing this solution, follow these steps to remove all provisioned resources:1. Remove PingIdentity Application ConfigurationIn the , navigate to .Locate and delete the  application that was configured for IAM Identity Center integration.2. Reset IAM Identity Center ConfigurationIn the  console: 
  Navigate to Settings > Identity source.Change the identity source back to the default IAM Identity Center directory if no longer using PingIdentity.Remove any external metadata and configuration uploaded during the setup.3. Revoke Subscriptions and AccessIn the Amazon Q Developer console: 
  Go to  and remove assigned groups such as  or .This will deactivate access and prevent any future charges tied to those subscriptions.4. Remove Amazon Q Developer ExtensionIf desired, uninstall the Amazon Q Developer extension from Visual Studio Code to fully revert the development environment.In this post, we demonstrated how to use existing PingIdentity credentials to access Amazon Q Developer through integration with IAM Identity Center. We provided a step-by-step guide for configuring PingIdentity as an external identity provider (IdP) with IAM Identity Center. Lastly, we demonstrated how to connect Amazon Q Developer extension within your IDE to AWS using your PingIdentity credentials, allowing seamless access to Amazon Q Developer.If you have any comments or questions, share them in the comments section.To learn more about AWS Services is a Solutions Architect with AWS covering Strategic accounts. He thrives on resolving complex technical issues to overcome customer hurdles. Outside of work, he cherishes spending time with his family and fostering inquisitiveness in his children.]]></content:encoded></item><item><title>AWS Extends MCP Support in Amazon Q Developer to Multiple IDEs</title><link>https://devops.com/aws-extends-mcp-support-in-amazon-q-developer-to-multiple-ides/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=aws-extends-mcp-support-in-amazon-q-developer-to-multiple-ides</link><author>Mike Vizard</author><category>devops</category><pubDate>Thu, 19 Jun 2025 13:09:53 +0000</pubDate><source url="https://devops.com/">DevOps.com</source><content:encoded><![CDATA[]]></content:encoded></item><item><title>Why AI-based Code Generation Falls Short</title><link>https://devops.com/why-ai-based-code-generation-falls-short/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=why-ai-based-code-generation-falls-short</link><author>Joydip Kanjilal</author><category>devops</category><pubDate>Thu, 19 Jun 2025 11:33:08 +0000</pubDate><source url="https://devops.com/">DevOps.com</source><content:encoded><![CDATA[]]></content:encoded></item><item><title>The Top 5 AI Trends for Developers</title><link>https://devops.com/the-top-5-ai-trends-for-developers/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=the-top-5-ai-trends-for-developers</link><author>Sam Basu</author><category>devops</category><pubDate>Thu, 19 Jun 2025 11:05:27 +0000</pubDate><source url="https://devops.com/">DevOps.com</source><content:encoded><![CDATA[]]></content:encoded></item><item><title>Dependabot Your Way to Zero CVEs with Copac</title><link>https://www.youtube.com/watch?v=yNym_Ui18ZM</link><author>CNCF [Cloud Native Computing Foundation]</author><category>k8s</category><category>devops</category><category>video</category><enclosure url="https://www.youtube.com/v/yNym_Ui18ZM?version=3" length="" type=""/><pubDate>Thu, 19 Jun 2025 10:01:44 +0000</pubDate><source url="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA">CNCF</source><content:encoded><![CDATA[Rebuilding images to fix CVEs is challenging—missing build contexts, third-party base images, and resource-intensive approval processes create significant obstacles. This talk demonstrates effective solutions using Trivy for vulnerability scanning.]]></content:encoded></item><item><title>Cut the Wait: Testing Cloud Apps Without Constantly Redeploying</title><link>https://www.youtube.com/watch?v=6U8uS-8PClE</link><author>CNCF [Cloud Native Computing Foundation]</author><category>k8s</category><category>devops</category><category>video</category><enclosure url="https://www.youtube.com/v/6U8uS-8PClE?version=3" length="" type=""/><pubDate>Thu, 19 Jun 2025 07:00:06 +0000</pubDate><source url="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA">CNCF</source><content:encoded><![CDATA[Constantly having to redeploy your cloud apps and wait for CI pipelines just to test small code changes? It’s slow, frustrating, and hampers developer productivity. But with mirrord, an open-source tool, developers can instantly test locally written code in a real cloud environment, without repeated redeployments.

Join this webinar to see how mirrord simplifies and accelerates developer workflows by securely mirroring traffic and resources from your cloud environment directly to your local machine. Learn how to shorten feedback loops, identify issues faster, and empower your dev team to ship faster.]]></content:encoded></item><item><title>Cloud Native Live: Taming the configuration beast with Pkl!</title><link>https://www.youtube.com/watch?v=jJVs6-QmXDo</link><author>CNCF [Cloud Native Computing Foundation]</author><category>k8s</category><category>devops</category><category>video</category><enclosure url="https://www.youtube.com/v/jJVs6-QmXDo?version=3" length="" type=""/><pubDate>Thu, 19 Jun 2025 05:05:50 +0000</pubDate><source url="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA">CNCF</source><content:encoded><![CDATA[Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon events in Hong Kong, China (June 10-11); Tokyo, Japan (June 16-17); Hyderabad, India (August 6-7); Atlanta, US (November 10-13). Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io]]></content:encoded></item><item><title>CNL: Integrating MCP metadata in your internal developer platform</title><link>https://www.youtube.com/watch?v=MhyMLykUMUc</link><author>CNCF [Cloud Native Computing Foundation]</author><category>k8s</category><category>devops</category><category>video</category><enclosure url="https://www.youtube.com/v/MhyMLykUMUc?version=3" length="" type=""/><pubDate>Thu, 19 Jun 2025 02:43:15 +0000</pubDate><source url="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA">CNCF</source><content:encoded><![CDATA[MCP, Model Context Protocol, is clearly the hot topic of 2025 and while we are seeing more and more interesting use cases around this, no one has really yet focused on all the metadata that MCP brings to the table: Tools description, Tool parameters description, prompt description. All of this is really useful information that can be used by the developer building AI Infused applications.

It’s also totally aligned with the Platform Engineering vision which tries to streamline the service catalogs to its platform user.

Join me in the mainly live coding session to see how to integrate MCP Metadata into your Platform Engineering strategy.]]></content:encoded></item><item><title>Atlassian Adds CLI Option to AI Agent for Building Software</title><link>https://devops.com/atlassian-adds-cli-option-to-ai-agent-for-building-software/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=atlassian-adds-cli-option-to-ai-agent-for-building-software</link><author>Mike Vizard</author><category>devops</category><pubDate>Wed, 18 Jun 2025 20:01:04 +0000</pubDate><source url="https://devops.com/">DevOps.com</source><content:encoded><![CDATA[]]></content:encoded></item><item><title>AWS Extends Cloud Security Reach to Include DevSecOps Tools to Scan Code</title><link>https://devops.com/aws-extends-cloud-security-reach-to-include-devsecops-tools-to-scan-code/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=aws-extends-cloud-security-reach-to-include-devsecops-tools-to-scan-code</link><author>Mike Vizard</author><category>devops</category><pubDate>Wed, 18 Jun 2025 18:39:19 +0000</pubDate><source url="https://devops.com/">DevOps.com</source><content:encoded><![CDATA[]]></content:encoded></item><item><title>Docker State of App Dev: Security</title><link>https://www.docker.com/blog/docker-state-of-app-dev-security/</link><author>Rebecca Floyd</author><category>docker</category><category>devops</category><pubDate>Wed, 18 Jun 2025 15:51:58 +0000</pubDate><source url="https://www.docker.com/">Docker blog</source><content:encoded><![CDATA[Security is a team sport: why everyone owns it nowSix security takeaways fromDocker’s 2025 State of Application Development Report.In the evolving world of software development, one thing is clear — security is no longer a siloed specialty. It’s a team sport, especially when vulnerabilities strike. That’s one of several key security findings in the 2025 Docker State of Application Development Survey.Here’s what else we learned about security from our second annual report, which was based on an online survey of over 4,500 industry professionals.1. Security isn’t someone else’s problemForget the myth that only “security people” handle security. Across orgs big and small, roles are blending. If you’re writing code, you’re in the security game. As one respondent put it, “We don’t have dedicated teams — we all do it.” According to the survey, just 1 in 5 organizations outsource security. And it’s top of mind at most others: only 1% of respondents say security is not a concern at their organization.One exception to this trend: In larger organizations (50 or more employees), software security is more likely to be the exclusive domain of security engineers, with other types of engineers playing less of a role.2. Everyone thinks they’re in charge of securityTeam leads from multiple corners report that they’re the ones focused on security. Seasoned developers are as likely to zero in on it as are mid-career security engineers. And they’re both right. Security has become woven into every function — devs, leads, and ops alike.3. When vulnerabilities hit, it’s all hands on deckNo turf wars here. When scan alerts go off,  — whether it’s security engineers helping experienced devs to decode scan results, engineering managers overseeing the incident, or DevOps engineers filling in where needed.Fixing vulnerabilities is also a major time suck. Among security-related tasks that respondents routinely deal with, it was the most selected option across all roles. Worth noting: Last year’s State of Application Development Survey identified security/vulnerability remediation tools as a key area where better tools were needed in the development process.4. Security isn’t the bottleneck — planning and execution areSurprisingly, security doesn’t crack the top 10 issues holding teams back. Planning and execution-type activities are bigger sticking points. Translation? Security is better integrated into the workflow than many give it credit for. 5. Shift-left is yesterday’s newsThe once-pervasive mantra of “shift security left” is now only the . Has the shift left already happened? Is AI and cloud complexity drowning it out? Or is this further evidence that security is, by necessity, shifting everywhere?Again, perhaps security tools have gotten better, making it easier to shift left. (Our 2024 survey identified the shift-left approach as a possible source of frustration for developers and an area where more effective tools could make a difference.) Or perhaps there’s simply broader acceptance of the shift-left trend.6. Shifting security left may not be the buzziest trend, but it’s still influentialThe impact of shifting security left pales beside more dominant trends such as Generative AI and infrastructure as code. But it’s still a strong influence for developers in leadership roles.  Security is no longer a roadblock; it’s a reflex. Teams aren’t asking, “Who owns security?” — they’re asking, “How can we all do it better?”]]></content:encoded></item><item><title>CloudBees Adds MCP Server to Unify Platform for Integrating DevOps Workflows</title><link>https://devops.com/cloudbees-adds-mcp-server-to-unify-platform-for-integrating-devops-workflows/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=cloudbees-adds-mcp-server-to-unify-platform-for-integrating-devops-workflows</link><author>Mike Vizard</author><category>devops</category><pubDate>Wed, 18 Jun 2025 15:30:22 +0000</pubDate><source url="https://devops.com/">DevOps.com</source><content:encoded><![CDATA[]]></content:encoded></item><item><title>Why Docker Chose OCI Artifacts for AI Model Packaging</title><link>https://www.docker.com/blog/oci-artifacts-for-ai-model-packaging/</link><author>Emily Casey</author><category>docker</category><category>devops</category><pubDate>Wed, 18 Jun 2025 13:32:13 +0000</pubDate><source url="https://www.docker.com/">Docker blog</source><content:encoded><![CDATA[As AI development accelerates, developers need tools that let them move fast without having to reinvent their workflows. Docker Model Runner introduces a new specification for packaging large language models (LLMs) as OCI artifacts — a format developers already know and trust. It brings model sharing into the same workflows used for containers, with support for OCI registries like Docker Hub.By using OCI artifacts, teams can skip custom toolchains and work with models the same way they do with container images. In this post, we’ll share why we chose OCI artifacts, how the format works, and what it unlocks for GenAI developers.One of Docker’s goals is to make genAI application development accessible to a larger community of developers. We can do this by helping models become first-class citizens within the cloud native ecosystem. When models are packaged as OCI artifacts, developers can get started with AI development without the need to learn, vet, and adopt a new distribution toolchain. Instead, developers can discover new models on Hub and distribute variants publicly or privately via existing OCI registries, just like they do with container images today! For teams using Docker Hub, enterprise features like Registry Access Management (RAM) provide policy-based controls and guardrails to help enforce secure, consistent access.Packaging models as OCI artifacts also paves the way for deeper integration between inference runners like Docker Model Runner and existing tools like containerd and Kubernetes.Understanding OCI images and artifactsMany of these advantages apply equally to OCI images and OCI artifacts. To understand why images can be a less optimal fit for LLMs and why a custom artifact specification conveys additional advantages, it helps to first revisit the components of an OCI image and its generic cousin, the OCI artifact.OCI images are a standardized format for container images, defined by the Open Container Initiative (OCI). They package everything needed to run a container: metadata, configuration, and filesystem layers.An OCI image is composed of three main components:An  – a JSON file containing references to an and a set of filesystem .An  – a JSON file containing the layer ordering and OCI runtime configuration.One or more  – TAR archives (typically compressed), containing filesystem changesets that, applied in order, produce a container root filesystem.Below is an example manifest from the busybox image:{
  "schemaVersion": 2,
  "mediaType": "application/vnd.oci.image.manifest.v1+json",
  "config": {
    "mediaType": "application/vnd.oci.image.config.v1+json",
    "digest": "sha256:7b4721e214600044496305a20ca3902677e572127d4d976ed0e54da0137c243a",
    "size": 477
  },
  "layers": [
    {
      "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
      "digest": "sha256:189fdd1508372905e80cc3edcdb56cdc4fa216aebef6f332dd3cba6e300238ea",
      "size": 1844697
    }
  ],
  "annotations": {
    "org.opencontainers.image.url": "https://github.com/docker-library/busybox",
    "org.opencontainers.image.version": "1.37.0-glibc"
  }
}

Because the image manifest contains content-addressable references to all image components, the hash of the manifest file, otherwise known as the image digest, can be used to uniquely identify an image.OCI artifacts offer a way to extend the OCI image format to support distributing content beyond container images. They follow the same structure: a manifest, a config file, and one or more layers. The artifact guidance in the OCI image specifications describes how this same basic structure (manifest + config + layers) can be used to distribute other types of content.The artifact type is designated by the config file’s media type. For example, in the manifest below config.mediaType is set to application/vnd.cncf.helm.config.v1+json. This indicates to registries and other tooling that the artifact is a Helm chart and should be parsed accordingly.{
  "schemaVersion": 2,
  "config": {
    "mediaType": "application/vnd.cncf.helm.config.v1+json",
    "digest": "sha256:8ec7c0f2f6860037c19b54c3cfbab48d9b4b21b485a93d87b64690fdb68c2111",
    "size": 117
  },
  "layers": [
    {
      "mediaType": "application/vnd.cncf.helm.chart.content.v1.tar+gzip",
      "digest": "sha256:1b251d38cfe948dfc0a5745b7af5ca574ecb61e52aed10b19039db39af6e1617",
      "size": 2487
    }
  ]
}

In an OCI artifact, layers may be of any media type and are not restricted to filesystem changesets. Whoever defines the artifact type defines the supported layer types and determines how the contents should be used and interpreted.Using container images vs. custom artifact typesWith this background in mind, while we could have packaged LLMs as container images, defining a custom type has some important advantages:A custom artifact type allows us to define a domain-specific config schema. Programmatic access to key metadata provides a support structure for an ecosystem of useful tools specifically tailored to AI use-cases.A custom artifact type allows us to package content in formats other than compressed TAR archives, thus avoiding performance issues that arise when LLMs are packaged as image layers. For more details on how model layers are different and why it matters, see the Layers section below.A custom type ensures that models are packaged and distributed separately from inference engines. This separation is important because it allows users to consume the variant of the inference engine optimized for their system without requiring every model to be packaged in combination with every engine.A custom artifact type frees us from the expectations that typically accompany a container image. Standalone models are not executable without an inference engine. Packaging as a custom type makes clear that they are not independently runnable, thus avoiding confusion and unexpected errors.Now that we understand the high-level goals, let’s dig deeper into the details of the format.The model specification defines the following media types:application/vnd.docker.ai.model.config.v0.1+json – identifies a model config JSON file. This value in config.mediaType in a manifest identifies an artifact as a Docker model with config file adhering to v0.1 of the specification.application/vnd.docker.ai.gguf.v3 – indicates that a layer contains a model packaged as a GGUF file.application/vnd.docker.ai.license – indicates that a layer contains a plain text software license file.Expect more media types to be defined in the future as we add runtime configuration, add support for new features like projectors and LoRA adaptors, and expand the supported packaging formats for model files.A model manifest is formatted like an image manifest and distinguished by the config.MediaType. The following example manifest, taken from the ai/gemma3, references a model config JSON and two layers, one containing a GGUF file and the other containing the model’s license.{
  "schemaVersion": 2,
  "mediaType": "application/vnd.oci.image.manifest.v1+json",
  "config": {
    "mediaType": "application/vnd.docker.ai.model.config.v0.1+json",
    "size": 372,
    "digest": "sha256:22273fd2f4e6dbaf5b5dae5c5e1064ca7d0ff8877d308eb0faf0e6569be41539"
  },
  "layers": [
    {
      "mediaType": "application/vnd.docker.ai.gguf.v3",
      "size": 2489757856,
      "digest": "sha256:09b370de51ad3bde8c3aea3559a769a59e7772e813667ddbafc96ab2dc1adaa7"
    },
    {
      "mediaType": "application/vnd.docker.ai.license",
      "size": 8346,
      "digest": "sha256:a4b03d96571f0ad98b1253bb134944e508a4e9b9de328909bdc90e3f960823e5"
    }
  ]
}


The manifest digest uniquely identifies the model and is used by Docker Model Runner as the model ID.The model configuration is a JSON file that surfaces important metadata about the model, such as size, parameter count, quantization, as well as metadata about the artifact provenance (like the creation timestamp).The following example comes from the ai/gemma model on Dockerhub:{
  "config": {
    "format": "gguf",
    "quantization": "IQ2_XXS/Q4_K_M",
    "parameters": "3.88 B",
    "architecture": "gemma3",
    "size": "2.31 GiB"
  },
  "descriptor": {
    "created": "2025-03-26T09:57:32.086694+01:00"
  },
  "rootfs": {
    "type": "rootfs",
    "diff_ids": [
      "sha256:09b370de51ad3bde8c3aea3559a769a59e7772e813667ddbafc96ab2dc1adaa7",
      "sha256:a4b03d96571f0ad98b1253bb134944e508a4e9b9de328909bdc90e3f960823e5"
    ]
  }
}

By defining a domain-specific configuration schema, we allow tools to access and use model metadata cheaply — by fetching and parsing a small JSON file — only fetching the model itself when needed.For example, a registry frontend like Docker Hub can directly surface this data to users who can, in turn, use it to compare models or select based on system capabilities and requirements. Tooling might use this data to estimate memory requirements for a given model. It could then assist in the selection process by suggesting the best variant that is compatible with the available resources.Layers in a model artifact differ from layers within an OCI image in two important respects.Unlike an image layer, where compression is recommended, model layers are . Because models are large, high-entropy files, compressing them provides a negligible reduction in size, while (un)compressing is time and compute-intensive.In contrast to a layer in an OCI image, which contains multiple files in an archive, each “layer” in a model artifact must contain a . This allows runtimes like Docker Model Runner to reduce disk usage on the client machine by storing a single uncompressed copy of the model. This file can then be directly memory mapped by the inference engine at runtime.The lack of file names, hierarchy, and metadata (e.g. modification time) ensures that identical model files always result in identical reusable layer blobs. This prevents unnecessary duplication, which is particularly important when working with LLMs, given the file size.You may have noticed that these “layers” are not really filesystem layers at all. They are files, but they do not specify a filesystem. So, how does this work at runtime? When Docker Model runner runs a model, instead of finding the GGUF file by name in a model filesystem, the desired file is identified by its media type (application/vnd.docker.ai.gguf.v3) and fetched from the model store. For more information on the Model Runner architecture, please see the architecture overview in this accompanying blog post.Like OCI images and other OCI artifacts, Docker model artifacts are distributed via registries like Dockerhub, Artifactory, or Azure Container Registry that comply with the OCI distribution specification.The Docker Hub Gen AI catalog aids in the discovery of popular models. These models are packaged in the format described here and are compatible with Docker Model Runner and any other runtime that supports the OCI specification.If you are accustomed to exploring models on Hugging Face, there’s good news! Hugging Face now supports on-demand conversion to the Docker Model Artifact format when you pull from Hugging Face with docker model pull.Hopefully, you now have a better understanding of the Docker OCI Model format and how it supports our goal of making AI app development more accessible to developers via familiar workflows and commands. But this version of the artifact format is just the beginning! In the future, you can expect the enhancements to the packaging format to bring this level of accessibility and flexibility to a broader range of use cases. Future versions will support:Additional runtime configuration options like templates, context size, and default parameters. This will allow users to configure models for specific use cases and distribute that config alongside the model, as a single immutable artifact.allowing users to extend existing model artifacts with use-case-specific fine-tuning., enabling users to package multi-modal such as language-and-vision models using LLaVA-style projectors. that provide a set of models with different parameter count and quantizations, allowing runtimes the best option for the available resources.In addition to adding features, we are committed to fostering an open ecosystem. Expect:Deeper integrations into containerd for a more native runtime experience.Efforts to harmonize with ModelPack and other model packaging standards to improve interoperability.These advancements show our ongoing commitment to making the OCI artifact a versatile and flexible way to package and run AI models, delivering the same ease and reliability developers already expect from Docker.]]></content:encoded></item><item><title>Behind the scenes: How we designed Docker Model Runner and what’s next</title><link>https://www.docker.com/blog/how-we-designed-model-runner-and-whats-next/</link><author>Jacob Howard</author><category>docker</category><category>devops</category><pubDate>Wed, 18 Jun 2025 13:30:29 +0000</pubDate><source url="https://www.docker.com/">Docker blog</source><content:encoded><![CDATA[The last few years have made it clear that AI models will continue to be a fundamental component of many applications. The catch is that they’re also a fundamentally  type of component, with complex software and hardware requirements that don’t (yet) fit neatly into the constraints of container-oriented development lifecycles and architectures. To help address this problem, Docker launched the Docker Model Runner with Docker Desktop 4.40. Since then, we’ve been working aggressively to expand Docker Model Runner with additional OS and hardware support, deeper integration with popular Docker tools, and improvements to both performance and usability.For those interested in Docker Model Runner and its future, we offer a behind-the-scenes look at its design, development, and roadmap.  Docker Model Runner is really  components: the model runner and the model distribution specification. In this article, we’ll be covering the former, but be sure to check out the companion blog post by Emily Casey for the equally important distribution side of the story.Docker Model Runner’s primary design goal was to allow users to run AI models locally and to access them from both containers and host processes. While that’s simple enough to articulate, it still leaves an enormous design space in which to find a solution. Fortunately, we had some additional constraints: we were a small engineering team, and we had some ambitious timelines. Most importantly, we didn’t want to compromise on UX, even if we couldn’t deliver it all at once. In the end, this motivated design decisions that have so far allowed us to deliver a viable solution while leaving plenty of room for future improvement.One thing we knew early on was that we weren’t going to write our own inference engine (Docker’s wheelhouse is containerized development, not low-level inference engines). We’re also big proponents of open-source, and there were just so many great existing solutions! There’s llama.cpp, vLLM, MLX, ONNX, and PyTorch, just to name a few.Of course, being spoiled for choice can also be a curse — which to choose? The obvious answer was: as many as possible, but not all at once.We decided to go with llama.cpp for our initial implementation, but we intentionally designed our APIs with an additional, optional path component (the  in ) to allow users to take advantage of multiple future backends. We also designed interfaces and stubbed out implementations for other backends to enforce good development hygiene and to avoid becoming tethered to one “initial” implementation.The second design choice we had to make was how to expose inference to consumers in containers. While there was also a fair amount of choice in the inference API space, we found that the OpenAI API standard seemed to offer the best initial tooling compatibility. We were also motivated by the fact that several teams inside Docker were already using this API for various real-world products. While we may support additional APIs in the future, we’ve so far found that this API surface is sufficient for most applications. One gap that we know exists is  compatibility with this API surface, which is something we’re working on iteratively.This decision also drove our choice of llama.cpp as our initial backend. The llama.cpp project already offered a turnkey option for OpenAI API compatibility through its server implementation. While we had to make some small modifications (e.g. Unix domain socket support), this offered us the fastest path to a solution. We’ve also started contributing these small patches upstream, and we hope to expand our contributions to these projects in the future.First-class citizenship for models in the Docker APIWhile the OpenAI API standard was the most ubiquitous option amongst existing tooling, we also knew that we wanted models to be first-class citizens in the Docker Engine API. Models have a fundamentally different execution lifecycle than the processes that typically make up the s of containers, and thus, they don’t fit well under the standard  endpoints of the Docker Engine API. However, much like containers, images, networks, and volumes, models are such a fundamental component that they really deserve their own API resource type. This motivated the addition of a set of  endpoints, closely modeled after the  endpoints, but separate for reasons that are best discussed in the distribution blog post.Another critical design goal was support for GPU acceleration of inference operations. Even the smallest useful models are extremely computationally demanding, while more sophisticated models (such as those with tool-calling capabilities) would be a stretch to fit onto local hardware at all. GPU support was going to be non-negotiable for a useful experience.Unfortunately, passing GPUs across the VM boundary in Docker Desktop, especially in a way that would be reliable across platforms and offer a usable computation API inside containers, was going to be either impossible or very flaky.As a compromise, we decided to run inference operations outside of the Docker Desktop VM and simply proxy API calls from the VM to the host. While there are some risks with this approach, we are working on initiatives to mitigate these with containerd-hosted sandboxing on macOS and Windows. Moreover, with Docker-provided models and application-provided prompts, the risk is somewhat lower, especially given that inference consists primarily of numerical operations. We assess the risk in Docker Desktop to be about on par with accessing host-side services via  (something already enabled by default).However, agents that drive tool usage with model output can cause more significant side effects, and that’s something we needed to address. Fortunately, using the Docker MCP Toolkit, we’re able to perform tool invocation inside ephemeral containers, offering reliable encapsulation of the side effects that models might drive. This hybrid approach allows us to offer the best possible local performance with relative peace of mind when using tools.Outside the context of Docker Desktop, for example, in Docker CE, we’re in a significantly better position due to the lack of a VM boundary (or at least a very transparent VM boundary in the case of a hypervisor) between the host hardware and containers. When running in standalone mode in Docker CE, the Docker Model Runner will have direct access to host hardware (e.g. via the NVIDIA Container Toolkit) and will run inference operations within a container.Modularity, iteration, and open-sourcingAs previously mentioned, the Docker Model Runner team is relatively small, which meant that we couldn’t rely on a monolithic architecture if we wanted to effectively parallelize the development work for Docker Model Runner. Moreover, we had an early and overarching directive: open-source as much as possible.Breaking up these components allowed us to divide work more effectively, iterate faster, and define clean API boundaries between different concerns. While there have been some tricky dependency hurdles (in particular when integrating with closed-source components), we’ve found that the modular approach has facilitated faster incremental changes and support for new platforms.The High-Level ArchitectureAt a high level, the Docker Model Runner architecture is composed of the three components mentioned above (the runner, the distribution code, and the CLI), but there are also some interesting sub-components within each:Figure 1: Docker Model Runner high-level architectureHow these components are packaged and hosted (and how they interact) also depends on the platform where they’re deployed. In each case it looks slightly different. Sometimes they run on the host, sometimes they run in a VM, sometimes they run in a container, but the overall architecture looks the same.The core architectural component is the . This component, provided by the model distribution code, is where the actual model tensor files are stored. These files are stored differently (and separately) from images because (1) they’re high-entropy and not particularly compressible and (2) the inference engine needs direct access to the files so that it can do things like mapping them into its virtual address space via . For more information, see the accompanying model distribution blog post.The model distribution code also provides the model distribution client. This component performs operations (such as pulling models) using the model distribution protocol against OCI registries.Built on top of the model store is the . The model runner maps inbound inference API requests (e.g.  or  requests) to processes hosting pairs of inference engines and models. It includes scheduler, loader, and runner components that coordinate the loading of models in and out of memory so that concurrent requests can be serviced, even if models can’t be loaded simultaneously (e.g. due to resource constraints). This makes the execution lifecycle of models different from that of containers, with engines and models operating as ephemeral processes (mostly hidden from users) that can be terminated and unloaded from memory as necessary (or when idle). A different backend process is run for each combination of engine (e.g. ) and model (e.g. ) as required by inference API requests (though multiple requests targeting the same pair will reuse the same runner and backend processes if possible).The runner also includes an installer service that can dynamically download backend binaries and libraries, allowing users to selectively enable features (such as CUDA support) that might require downloading hundreds of MBs of dependencies.Finally, the model runner serves as the central server for all Docker Model Runner APIs, including the  APIs (which it routes to the model distribution code) and the  APIs (which it routes to its scheduler). This API server will always opt to hold in-flight requests until the resources (primarily RAM or VRAM) are available to service them, rather than returning something like a  response. This is critical for a number of usage patterns, such multiple agents running with different models or concurrent requests for both embedding and completion.The primary user-facing component of the Docker Model Runner architecture is the . This component is a standard Docker CLI plugin that offers an interface very similar to the  command. While the lifecycle of model execution is different from that of containers, the concepts (such as pushing, pulling, and running) should be familiar enough to existing Docker users.The model CLI communicates with the model runner’s APIs to perform almost all of its operations (though the transport for that communication varies by platform). The model CLI is context-aware, allowing it to determine if it’s talking to a Docker Desktop model runner, Docker CE model runner, or a model runner on some custom platform. Because we’re using the standard Docker CLI plugin framework, we get all of the standard Docker Context functionality for free, making this detection much easier.As previously mentioned, the Docker Model Runner comprises two sets of APIs: the Docker-style APIs and the OpenAI-compatible APIs. The Docker-style APIs (modeled after the  APIs) include the following endpoints: (Model pulling) (Model listing)GET /models/{namespace}/{name} (Model metadata)DELETE /models/{namespace}/{name} (Model deletion)The bodies for these requests look very similar to their image analogs. There’s no documentation at the moment, but you can get a glimpse of the format by looking at their corresponding Go types.In contrast, the OpenAI endpoints follow a different but still RESTful convention:GET /engines/{engine}/v1/models (OpenAI-format model listing)GET /engines/{engine}/v1/models/{namespace}/{name} (OpenAI-format model metadata)POST /engines/{engine}/v1/chat/completions (Chat completions)POST /engines/{engine}/v1/completions (Chat completions (legacy endpoint))POST /engines/{engine}/v1/embeddings (Create embeddings)At this point in time, only one  value is supported (), and it can also be omitted to use the default () engine.We make these APIs available on several different endpoints:First, in Docker Desktop, they’re available on the Docker socket (), both inside and outside containers. This is in service of our design goal of having models as a first-class citizen in the Docker Engine API. At the moment, these endpoints are prefixed with a  path (to avoid dependencies on APIs that may evolve during development), but we’ll likely remove this prefix in the next few releases since these APIs have now mostly stabilized and will evolve in a backward-compatible way.Second, also in Docker Desktop, we make the APIs available on a special model-runner.docker.internal endpoint that’s accessible just from containers (though not currently from ECI containers, because we want to have inference sandboxing implemented first). This TCP-based endpoint exposes just the  and  API endpoints (not the whole Docker API) and is designed to serve existing tooling (which likely can’t access APIs via a Unix domain socket). No  prefix is used in this case.Finally, in both Docker Desktop and Docker CE, we make the  and  API endpoints available on a host TCP endpoint (, by default, again without any  prefix). In Docker Desktop this is optional and not enabled by default. In Docker CE, it’s a critical component of how the API endpoints are accessed, because we currently lack the integration to add endpoints to Docker CE’s  or to inject a custom model-runner.docker.internal hostname, so we advise using the standard  host gateway address to access this localhost-exposed port (e.g. setting your OpenAI API base URL to http://172.17.0.1:12434/engines/v1). Hopefully we’ll be able to unify this across Docker platforms in the near future (see our roadmap below).The natural first step for Docker Model Runner was integration into Docker Desktop. In Docker Desktop, we have more direct control over integration with the Docker Engine, as well as existing processes that we can use to host the model runner components. In this case, the model runner and model distribution components live in the Docker Desktop host backend process (the  process you may have seen running) and we use special middleware and networking magic to route requests on  and model-runner.docker.internal to the model runner’s API server. Since the individual inference backend processes run as subprocesses of , there’s no risk of a crash in Docker Desktop if, for example, an inference backend is killed by an Out Of Memory (OOM) error.We started initially with support for macOS on Apple Silicon, because it provided the most uniform platform for developing the model runner functionality, but we implemented most of the functionality along the way to build and test for all Docker Desktop platforms. This made it significantly easier to port to Windows on AMD64 and ARM64 platforms, as well as the GPU variations that we found there.The one complexity with Windows was the larger size of the supporting library dependencies for the GPU-based backends. It wouldn’t have been feasible (or tolerated) if we added another 500 MB – 1 GB to the Docker Desktop for Windows installer, so we decided to default to a CPU-based backend in Docker Desktop for Windows with optional support for the GPU backend. This was the primary motivating factor for the dynamic installer component of the model runner (in addition to our desire for incremental updates to different backends).This all sounds like a very well-planned exercise, and we did indeed start with a three-component design and strictly enforced API boundaries, but in truth we started with the model runner service code as a sub-package of the Docker Desktop source code. This made it much easier to iterate quickly, especially as we were exploring the architecture for the different services. Fortunately, by sticking to a relatively strict isolation policy for the code, and enforcing clean dependencies through APIs and interfaces, we were able to easily extract the code (kudos to the excellent git-filter-repo tool) into a separate repository for the purposes of open-sourcing.Aside from Docker’s penchant for open-sourcing, one of the main reasons that we wanted to make the Docker Model Runner source code publicly available was to support integration into Docker CE. Our goal was to package the  command in the same way as  and .The trick with Docker CE is that we wanted to ship Docker Model Runner as a “vanilla” Docker CLI plugin (i.e. without any special privileges or API access), which meant that we didn’t have a backend process that could host the model runner service. However, in the Docker CE case, the boundary between host hardware and container processes is much less disruptive, meaning that we could actually run Docker Model Runner in a container and simply make any accelerator hardware available to it directly. So, much like a standalone BuildKit builder container, we run the Docker Model Runner as a standalone container in Docker CE, with a special named volume for model storage (meaning you can uninstall the runner without having to re-pull models). This “installation” is performed by the model CLI automatically (and when necessary) by pulling the  image and starting a container. Explicit configuration for the runner can also be specified using the docker model install-runner command. If you want, you can also remove the model runner (and optionally the model storage) using docker model uninstall-runner.This unfortunately leads to one small compromise with the UX: we don’t currently support the model runner APIs on  or on the special model-runner.docker.internal URL. Instead, the model runner API server listens on the host system’s loopback interface at  (by default), which is available inside most containers at . If desired, users can also make this available on model-runner.docker.internal:12434 by utilizing something like –add-host=model-runner.docker.internal:host-gateway when running  or  commands. This can also be achieved by using the  key in a Compose YAML file. We have plans to make this more ergonomic in future releases.The status quo is Docker Model Runner support in Docker Desktop on macOS and Windows and support for Docker CE on Linux (including WSL2), but that’s definitely not the end of the story. Over the next few months, we have a number of initiatives planned that we think will reshape the user experience, performance, and security of Docker Model Runner.Additional GUI and CLI functionalityThe most visible functionality coming out over the next few months will be in the model CLI and the “Models” tab in the Docker Desktop dashboard. Expect to see new commands (such as , , and ) that will provide more direct support for monitoring and controlling model execution. Also, expect to see new and expanded layouts and functionality in the Models tab.Expanded OpenAI API supportA less-visible but equally important aspect of the Docker Model Runner user experience is our compatibility with the OpenAI API. There are dozens of endpoints and parameters to support (and we already support many), so we will work to expand API surface compatibility with a focus on practical use cases and prioritization of compatibility with existing tools.containerd and Moby integrationOne of the longer-term initiatives that we’re looking at is integration with . containerd already provides a modular runtime system that allows for task execution coordinated with storage. We believe this is the right way forward and that it will allow us to better codify the relationship between model storage, model execution, and model execution sandboxing.In combination with the containerd work, we would also like tighter integration with the Moby project. While our existing Docker CE integration offers a viable and performant solution, we believe that better ergonomics could be achieved with more direct integration. In particular, niceties like support for model-runner.docker.internal DNS resolution in Docker CE are on our radar. Perhaps the biggest win from this tighter integration would be to expose Docker Model Runner APIs on the Docker socket and to include the API endpoints (e.g. ) in the official Docker Engine API documentation.One of the product goals for Docker Model Runner was a consistent experience from development inner loop to production, and Kubernetes is inarguably a part of that path. The existing Docker Model Runner images that we’re using for Docker CE will also work within a Kubernetes cluster, and we’re currently developing instructions to set up a Docker Model Runner instance in a Kubernetes cluster. The big difference with Kubernetes is the variety of cluster and application architectures in use, so we’ll likely end up with different “recipes” for how to configure the Docker Model Runner in different scenarios.One of the things we’ve heard from a number of customers is that vLLM forms a core component of their production stack. This was also the first alternate backend that we stubbed out in the model runner repository, and the time has come to start poking at an implementation.Finally, there are some bits that we just can’t talk about yet, but they will fundamentally shift the way that developers interact with models. Be sure to tune-in to Docker’s sessions at WeAreDevelopers from July 9–11 for some exciting announcements around AI-related initiatives at Docker.]]></content:encoded></item><item><title>ChatLoopBackOff: Episode 62 (OpenTofu)</title><link>https://www.youtube.com/watch?v=bUlv2JLNEt0</link><author>CNCF [Cloud Native Computing Foundation]</author><category>k8s</category><category>devops</category><category>video</category><enclosure url="https://www.youtube.com/v/bUlv2JLNEt0?version=3" length="" type=""/><pubDate>Wed, 18 Jun 2025 07:25:15 +0000</pubDate><source url="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA">CNCF</source><content:encoded><![CDATA[Get to know OpenTofu with CNCF Ambassador, Sandipan Panda. This is a vibrant CNCF project delivering an open, community-driven alternative to Terraform. Born from the need for a truly open infrastructure-as-code (IaC) tool, OpenTofu is fully backward-compatible with Terraform, empowering users to manage cloud and on-prem infrastructure with the flexibility, transparency, and governance of open source. Whether you're orchestrating complex multi-cloud environments or looking for a vendor-neutral approach to IaC, OpenTofu offers a familiar syntax with a fresh commitment to openness and collaboration. Join us as we explore how OpenTofu is building momentum in the cloud native ecosystem—and why it’s quickly becoming a key choice for infrastructure automation.]]></content:encoded></item><item><title>ChatLoopBackOff: Episode 61 (Kairos)</title><link>https://www.youtube.com/watch?v=GehQj_WYUTQ</link><author>CNCF [Cloud Native Computing Foundation]</author><category>k8s</category><category>devops</category><category>video</category><enclosure url="https://www.youtube.com/v/GehQj_WYUTQ?version=3" length="" type=""/><pubDate>Wed, 18 Jun 2025 07:18:43 +0000</pubDate><source url="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA">CNCF</source><content:encoded><![CDATA[Join us for an introduction to Kairos with CNCF Ambassador, Sergio Mendez. This is a powerful CNCF project designed to simplify and secure Kubernetes deployments at the edge. Kairos enables the creation of immutable, declarative Linux-based OS images that come bundled with Kubernetes—perfect for edge environments, bare-metal clusters, and IoT applications. With features like over-the-air updates, rollback support, and secure boot, Kairos brings modern DevOps principles to edge computing. Whether you're deploying in low-connectivity scenarios or need a consistent, reproducible operating system for Kubernetes nodes, Kairos offers a flexible and resilient solution. Don’t miss this session to explore how Kairos is transforming cloud native infrastructure at the edge.]]></content:encoded></item><item><title>AI, the New Hero of Software Development … or Anti-Hero?</title><link>https://devops.com/ai-the-new-hero-of-software-development-or-anti-hero/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=ai-the-new-hero-of-software-development-or-anti-hero</link><author>Guy Currier</author><category>devops</category><pubDate>Tue, 17 Jun 2025 18:48:51 +0000</pubDate><source url="https://devops.com/">DevOps.com</source><content:encoded><![CDATA[]]></content:encoded></item><item><title>AWS re:Inforce roundup 2025: top announcements</title><link>https://aws.amazon.com/blogs/aws/aws-reinforce-roundup-2025-top-announcements/</link><author>AWS News Blog Team</author><category>devops</category><pubDate>Tue, 17 Jun 2025 17:10:23 +0000</pubDate><source url="https://aws.amazon.com/blogs/aws/">AWS blog</source><content:encoded><![CDATA[At AWS re:Inforce 2025 (June 16-18, Philadelphia), AWS Vice President and Chief Information Security Officer Amy Herzog delivered the keynote address, announcing new security innovations. Throughout the event, AWS announced additional security capabilities focused on simplifying security at scale and enabling organizations to build more resilient applications in the cloud. Below is a comprehensive roundup of the major security launches and updates announced at this year’s conference.AWS IAM now enforces MFA for root users across all account types The new Multi-Factor Authentication enforcement prevents over 99% of password-related attacks. You can use a range of supported IAM MFA methods, including FIDO-certified security keys to harden access to your AWS accounts. AWS supports FIDO2 passkeys for a user-friendly MFA implementation and allows you to register up to 8 MFA devices per root and IAM user.Improve your security posture using Amazon threat intelligence on AWS Network Firewall This new Network Firewall managed rule group offers protection against active threats relevant to workloads in AWS. The feature uses the Amazon threat intelligence system MadPot to continuously track attack infrastructure, including malware hosting URLs, botnet command and control servers, and crypto mining pools, identifying indicators of compromise (IOCs) for active threats.AWS WAF simplified console experience The new AWS WAF console experience reduces security configuration steps by up to 80% through pre-configured protection packs. Security teams can quickly implement comprehensive protection for specific application types, with consolidated security metrics and customizable controls through an intuitive interface.Amazon GuardDuty expands Extended Threat Detection coverage to Amazon EKS clusters Amazon GuardDuty Extended Threat Detection now supports Amazon EKS clusters, helping you detect sophisticated multistage attacks by correlating security signals across Kubernetes audit logs, runtime behaviors, and AWS API activities. This enhancement automatically identifies critical attack sequences that might otherwise go unnoticed, enabling faster response to threats.New categories for the AWS MSSP Competency The AWS MSSP Competency (previously AWS Level 1 MSSP Competency) now includes new categories covering infrastructure security, workload security, application security, data protection, identity and access management, incident response, and cyber recovery. Partners provide 24/7 monitoring and incident response through dedicated Security Operations Centers.]]></content:encoded></item><item><title>Amazon GuardDuty expands Extended Threat Detection coverage to Amazon EKS clusters</title><link>https://aws.amazon.com/blogs/aws/amazon-guardduty-expands-extended-threat-detection-coverage-to-amazon-eks-clusters/</link><author>Esra Kayabali</author><category>devops</category><pubDate>Tue, 17 Jun 2025 16:26:04 +0000</pubDate><source url="https://aws.amazon.com/blogs/aws/">AWS blog</source><content:encoded><![CDATA[Security teams managing Kubernetes workloads often struggle to detect sophisticated multistage attacks that target containerized applications. These attacks can involve container exploitation, privilege escalation, and unauthorized movement within Amazon EKS clusters. Traditional monitoring approaches might detect individual suspicious events, but often miss the broader attack pattern that spans across these different data sources and time periods.GuardDuty Extended Threat Detection introduces a new critical severity finding type, which automatically correlates security signals across Amazon EKS audit logs, runtime behaviors of processes associated with EKS clusters, malware execution in EKS clusters, and AWS API activity to identify sophisticated attack patterns that might otherwise go unnoticed. For example, GuardDuty can now detect attack sequences in which a threat actor exploits a container application, obtains privileged service account tokens, and then uses these elevated privileges to access sensitive Kubernetes secrets or AWS resources.This new capability uses GuardDuty correlation algorithms to observe and identify sequences of actions that indicate potential compromise. It evaluates findings across protection plans and other signal sources to identify common and emerging attack patterns. For each attack sequence detected, GuardDuty provides comprehensive details, including potentially impacted resources, timeline of events, actors involved, and indicators used to detect the sequence. The findings also map observed activities to MITRE ATT&CK® tactics and techniques and remediation recommendations based on AWS best practices, helping security teams understand the nature of the threat.To enable Extended Threat Detection for EKS, you need at least one of these features enabled: EKS Protection or Runtime Monitoring. For maximum detection coverage, we recommend enabling both to enhance detection capabilities. EKS Protection monitors control plane activities through audit logs, and Runtime Monitoring observes behaviors within containers. Together, they create a complete view of your EKS clusters, enabling GuardDuty to detect complex attack patterns.To use the new Amazon GuardDuty Extended Threat Detection for EKS clusters, go to the GuardDuty console to enable EKS Protection in your account. From the Region selector in the upper-right corner, select the Region where you want to enable EKS Protection. In the navigation pane, choose . On the  page, review the current status and choose . Select  to save your selection.After it’s enabled, GuardDuty immediately starts monitoring EKS audit logs from your EKS clusters without requiring any additional configuration. GuardDuty consumes these audit logs directly from the EKS control plane through an independent stream, which doesn’t affect any existing logging configurations. For multi-account environments, only the delegated GuardDuty administrator account can enable or disable EKS Protection for member accounts and configure auto-enable settings for new accounts joining the organization.To enable , choose  in the navigation pane. Under the  tab, choose  to enable Runtime Monitoring for your account.Now, you can view from the  dashboard the attack sequences and critical findings specifically related to Kubernetes cluster compromise. You can observe that GuardDuty identifies complex attack patterns in Kubernetes environments, such as credential compromise events and suspicious activities within EKS clusters. The visual representation of findings by severity, resource impact, and attack types gives you a holistic view of your Amazon EKS security posture. This means you can prioritize the most critical threats to your containerized workloads.The  page provides visibility into complex attack sequences targeting EKS clusters, helping you understand the full scope of potential compromises. GuardDuty correlates signals into a timeline, mapping observed behaviors to MITRE ATT&CK® tactics and techniques such as account manipulation, resource hijacking, and privilege escalation. This granular level of insight reveals exactly how attackers progress through your Amazon EKS environment. It identifies affected resources like EKS workloads and service accounts. The detailed breakdown of indicators, actors, and endpoints provides you with actionable context to understand attack patterns, determine impact, and prioritize remediation efforts. By consolidating these security insights into a cohesive view, you can quickly assess the severity of Amazon EKS security incidents, reduce investigation time, and implement targeted countermeasures to protect your containerized applications.The  section of the  page shows context about the specific assets affected during an attack sequence. This unified resource list provides you with visibility into the exact scope of the compromise—from the initial access to the targeted Kubernetes components. Because GuardDuty includes detailed attributes such as resource types, identifiers, creation dates, and namespace information, you can rapidly assess which components of your containerized infrastructure require immediate attention. This focused approach eliminates guesswork during incident response, so you can prioritize remediation efforts on the most critical affected resources and minimize the potential blast radius of Amazon EKS targeted attacks.Amazon GuardDuty Extended Threat Detection with expanded coverage for Amazon EKS clusters provides comprehensive security monitoring across your Kubernetes environment. You can use this capability to detect sophisticated multistage attacks by correlating events across different data sources, identifying attack sequences that traditional monitoring might miss.For more information about this new capability, refer to the Amazon GuardDuty Documentation.— Esra]]></content:encoded></item><item><title>Unify your security with the new AWS Security Hub for risk prioritization and response at scale (Preview)</title><link>https://aws.amazon.com/blogs/aws/unify-your-security-with-the-new-aws-security-hub-for-risk-prioritization-and-response-at-scale-preview/</link><author>Donnie Prakoso</author><category>devops</category><pubDate>Tue, 17 Jun 2025 15:57:57 +0000</pubDate><source url="https://aws.amazon.com/blogs/aws/">AWS blog</source><content:encoded><![CDATA[AWS Security Hub has been a central place for you to view and aggregate security alerts and compliance status across Amazon Web Services (AWS) accounts. Today, we are announcing the preview release of the new AWS Security Hub which offers additional correlation, contextualization, and visualization capabilities. This helps you prioritize critical security issues, respond at scale to reduce risks, improve team productivity, and better protect your cloud environment.Here’s a quick look at the new AWS Security Hub.Let me walk you through how to get started with AWS Security Hub.If you’re a new customer to AWS Security Hub, you need to navigate to the AWS Security Hub console to enable AWS security capabilities and capabilities and start assessing risk across your organization. You can learn more on the Documentation page.After you have AWS Security Hub enabled, it will automatically consume data from supporting security capabilities you’ve enabled, such as Amazon GuardDuty, Amazon Inspector, Amazon Macie, and AWS Security Hub CSPM. You can navigate to the AWS Security Hub console to view these findings and benefit from insights created through correlation of findings across these capabilities.As security risks are uncovered, they’re presented in a redesigned Security Hub summary dashboard. The new Security Hub summary dashboard provides a comprehensive, unified view of your AWS security posture. The dashboard organizes security findings into distinct categories, making it easier to identify and prioritize risks.The new  widget helps you identify and prioritize security exposures by analyzing resource relationships and signals from Amazon Inspector, AWS Security Hub CSPM, and Amazon Macie. These exposure findings are automatically generated and are a key part of the new solution, highlighting where your critical security exposures are located. You can learn more about exposure on the Documentation page.AWS Security Hub now provides a  widget designed to help you identify potential coverage gaps. You can use this widget to identify where you’re missing coverage by the security capabilities that power Security Hub. This visibility helps you identify which capabilities, accounts, and features you need to address to improve your security coverage.As you can see on the navigation menu, AWS Security Hub is organized into five key areas to streamline security management:: Provides visibility into all exposure findings, a security vulnerability or misconfiguration that could potentially expose an AWS resource or system to unauthorized access or compromise, generated by Security Hub, helping you identify resources that might be accessible from outside your environment: Consolidates all threat findings generated by Amazon GuardDuty, showing potential malicious activities and intrusion attempts: Displays all vulnerabilities detected by Amazon Inspector, highlighting software flaws and configuration issues: Shows all posture management findings from AWS Security Hub Cloud Security Posture Management (CSPM), helping provide compliance with security best practices: Presents all sensitive data findings identified by Amazon Macie, helping you track and protect your sensitive informationWhen you navigate to the  page, you’ll see findings grouped by title, with severity levels clearly indicated to help you focus on critical issues first.To explore specific exposures, you can select any finding to see affected resources. The panel includes key information about the implicated resource, account, Region, and when the issue was detected.In this panel, you’ll also find an attack path visualization that is particularly useful for understanding complex security relationships. For network exposure paths, you can see all components involved in the path—including virtual private clouds (VPCs), subnets, security groups, network access control lists (ACLs), and load balancers—helping you identify exactly where to implement security controls. The visualization also highlights Identity and Access Management (IAM) relationships, showing how permission configurations might allow privilege escalation or data access. Resources with multiple contributing traits are clearly marked so you can quickly identify which components represent the greatest risk.The  dashboard provides actionable insights into potential malicious activities detected by Amazon GuardDuty, organizing findings by severity so you can quickly identify critical issues like unusual API calls, suspicious network traffic, or potential credential compromises. The dashboard includes GuardDuty Extended Threat Detection findings, with all “Critical” severity threats representing these Extended Threat Detections that require immediate attention.Similarly, the  dashboard from Amazon Inspector provides a comprehensive view of software vulnerabilities and network exposure risks. The dashboard highlights vulnerabilities with known exploits, packages requiring urgent updates, and resources with the highest numbers of vulnerabilities.Another valuable new feature is the  view, which provides an inventory of all resources deployed in your organization covered by AWS Security Hub. You can use this view to quickly identify which resources have findings against them and filter by resource type or finding severity. Selecting any resource provides detailed configuration information without needing to pivot to other consoles, streamlining your investigation workflow.The new Security Hub also offers integration capabilities to help you comprehensively monitor your cloud environments and connect with third-party security solutions. This gives you the flexibility to create a unified security solution tailored to your organization’s specific needs.For example, with integration capability, when viewing a security finding, you can select the  option and choose your preferred ticketing integration.Here are a couple of things to note: – During this preview period, the new AWS Security Hub is available in following AWS Regions: US East (N. Virginia, Ohio), US West (N. California, Oregon), Africa (Cape Town), Asia Pacific (Hong Kong, Jakarta, Mumbai, Osaka, Seoul, Singapore, Sydney, Tokyo), Canada (Central), Europe (Frankfurt, Ireland, London, Milan, Paris, Stockholm), Middle East (Bahrain), and South America (São Paulo). – The new AWS Security Hub is available at no additional charge during the preview period. However, you will still incur costs for the integrated capabilities including Amazon GuardDuty, Amazon Inspector, Amazon Macie, and AWS Security Hub CSPM.Integration with existing AWS security capabilities – Security Hub integrates with Amazon GuardDuty, Amazon Inspector, AWS Security Hub CSPM, and Amazon Macie, providing a comprehensive security posture without additional operational overhead.To learn more about the enhanced AWS Security Hub and join the preview, visit the AWS Security Hub product page.]]></content:encoded></item><item><title>AWS Backup adds new Multi-party approval for logically air-gapped vaults</title><link>https://aws.amazon.com/blogs/aws/aws-backup-adds-new-multi-party-approval-for-logically-air-gapped-vaults/</link><author>Veliswa Boya</author><category>devops</category><pubDate>Tue, 17 Jun 2025 15:50:14 +0000</pubDate><source url="https://aws.amazon.com/blogs/aws/">AWS blog</source><content:encoded><![CDATA[Today, we’re announcing the general availability of a new capability that integrates AWS Backup logically air-gapped vaults with Multi-party approval to provide access to your backups even when your AWS account is inaccessible due to inadvertent or malicious events. AWS Backup is a fully managed service that centralizes and automates data protection across AWS services and hybrid workloads. It provides core data protection features, ransomware recovery capabilities, and compliance insights and analytics for data protection policies and operations.As a backup administrator, you use AWS Backup logically air-gapped vaults to securely share backups across accounts and organizations, logically isolate your backup storage, and support direct restore to help reduce recovery time following an inadvertent or malicious event. However, if a bad or unintended actor gains root access to your backup account or the management account of your organization, your backups suddenly become inaccessible, even though they’re still safely stored in the logically air-gapped vault. While traditional account recovery involved working through support channels, AWS Backup with Multi-party approval delivers immediate access to recovery tools, empowering you with faster resolution times and greater control over your recovery timeline.Multi-party approval for AWS Backup logically air-gapped vaults adds an additional layer of protection for you to recover your application data even when your AWS account becomes completely inaccessible. Using Multi-party approval, you can create approval teams which consist of highly trusted individuals in your organization, then associate them with your logically air-gapped vault. If you get locked out of your AWS accounts due to inadvertent or malicious actions, you can request your own approval team to authorize sharing of your vault from any account, even those outside your AWS Organizations account. Once approved, you gain authorized access to your backups and can begin your recovery process. Multi-party approval for AWS Backup logically air-gapped vaults combines the security of logically air-gapped vaults with the governance of Multi-party approval to create a recovery mechanism that works even when your AWS account is compromised. Here’s how it works:1. Approval team creation First, you create an approval team in your AWS Organizations management account. If the management account is new, first create an AWS Identity and Access Management (IAM) Identity Center instance before creating the approval team. The approval team consists of trusted individuals (IAM Identity Center users) who will be authorized to approve vault sharing requests. Each approver receives an invitation to join the approval team through a new Approval portal. When your approval team is active, you share it with accounts that own logically air-gapped vaults using AWS Resource Access Manager (AWS RAM) to safeguard against requests for approval from arbitrary accounts. Backup administrators can then associate this approval team with new or existing logically air-gapped vaults.3. Protection against compromise If your AWS account becomes compromised or inaccessible, you can request access to your backups from a different account (a clean recovery account). This request includes the Amazon Resource Name (ARN) of the logically air-gapped vault in the format arn:aws:backup:<region>:<account>:backup-vault:<name> and an optional vault name and comment. The request is sent to the approval team, who review it through the approval portal. When the minimum required number of approvers authorize the request, the vault is automatically shared with the requesting account. All requests and approvals are comprehensively logged in AWS CloudTrail. With access granted, you can immediately start restoring or copying your data in the new recovery account without waiting for your compromised account to be remediated.This approach provides an entirely separate authentication path to access and recover your backups, completely independent of your AWS account credentials. Even if the bad actor has root access to your account, they can’t prevent the approval team-based recovery process.1. Create a new logically air-gapped vault To create a new logically air-gapped vault, provide a ,  (optional), and .2. Assign an approval team When the vault has been created, choose  to assign it with an existing approval team.Choose an existing approval team from the drop-down menu then select  to finalize the assignment.Now your approval team is assigned to your logically air-gapped vault. It’s essential to test your recovery process before an actual emergency:From a different AWS account, use the AWS Backup console or API to request sharing of your logically air-gapped vault by providing the vault ID and ARN.Request approval of your request from the approval team.Once approved, verify that you can access and restore backups from the vault in your testing account., monitor the health of your approval team regularly using AWS Backup Audit Manager to ensure they have sufficient active participants to meet your approval threshold. Today, we’re also announcing the general availability of a new capability that AWS account administrators can use to add Multi-party approval to their product offerings. As highlighted in this post, AWS Backup is the first service to integrate this capability. With Multi-party approval, administrators can enable application owners to guard sensitive service operations with a distributed review process. Multi-party approval provides several significant security advantages:Distributed decision-making, eliminating single points of failureFull auditability through AWS CloudTrail integrationProtection against compromised credentialsFormal governance for compliance-sensitive operationsConsistent approval experience across integrated servicesMulti-party approval is available today in all AWS Regions where AWS Organizations is available. Multi-party approval for AWS Backup logically air-gapped vaults is available in all AWS Regions where AWS Backup is available.]]></content:encoded></item><item><title>New AWS Shield feature discovers network security issues before they can be exploited (Preview)</title><link>https://aws.amazon.com/blogs/aws/new-aws-shield-feature-discovers-network-security-issues-before-they-can-be-exploited-preview/</link><author>Esra Kayabali</author><category>devops</category><pubDate>Tue, 17 Jun 2025 15:24:29 +0000</pubDate><source url="https://aws.amazon.com/blogs/aws/">AWS blog</source><content:encoded><![CDATA[Today, I’m happy to announce AWS Shield network security director (preview), a capability that simplifies identification of configuration issues related to threats such as SQL injections and distributed denial of service (DDoS) events, and proposes remediations. This feature identifies and analyzes network resources, connections, and configurations. It compares them against AWS best practices to create a network topology that highlights resources requiring protection.Organizations today face significant challenges in maintaining a robust network security posture. Security teams often struggle to efficiently discover all resources in their environments, understand how these resources are interconnected, and identify which security services are currently configured. Additionally, they find determining how well resources are configured relative to AWS best practices requires considerable expertise and effort. Many teams find it difficult to identify which network security services and rule sets would best protect their applications from common and emerging threats.AWS Shield network security director addresses these challenges through three key capabilities. First, it performs comprehensive analysis to discover resources across your AWS accounts, identify connectivity between resources, and determine which network security services and configurations are currently in place. Second, it prioritizes resources by severity level based on AWS network security best practices and threat intelligence. Finally, it provides specific remediation recommendations such as step-by-step instructions for implementing the right AWS security services, including AWS WAF, Amazon Virtual Private Cloud (Amazon VPC)security groups, and Amazon VPC network access control lists (ACLs) to protect your resources.The service supports critical network security use cases, including protecting applications against internet-born threats and controlling human access to resources based on port, protocol, or IP address range. It provides network analysis to discover assets and delivers analysis that eliminates time-consuming manual processes for identifying resources that need protection. The service offers resource prioritization by assigning security findings a severity level based on network context and adherence to AWS best practices, helping you focus on what matters most. Additionally, it supplies actionable recommendations with specific guidance on which services and configurations will address each security gap. You can also get answers, in natural language, from AWS Shield network security director from within Amazon Q Developer in the AWS Management Console and chat applications.To use AWS Shield network security director, I need to initiate a network analysis of my AWS resources. I go to the AWS WAF & Shield console and choose  under AWS Shield network security director in the navigation pane. I choose , which takes me to the configuration page. On this page, I can choose how to perform my first network analysis: I can assess findings from across all supported Regions or from my current Region only. I select .After the analysis is completed, the dashboard page shows a breakdown of resource types by severity level and the most common categories of network security findings associated with their resources. Resources are categorized by type and severity level (critical, high, medium, low, informational), making it easy to identify which areas need immediate attention.Next, I explore the  section to understand the distribution of my assets and filter by severity level in my environment. I can use  to review a specific severity level, which will redirect me to the  under Network security director with the associated severity level filter. I choose the resources that have  severity level.I choose a specific resource to view its network topology map showing how it connects to other resources and associated findings. This visualization helps me understand the potential impact of security configurations and identify exposed paths. I review detailed findings such as “Allows unrestricted inbound access (0.0.0.0/0) on all ports” with severity ratings.Next, I go to  under Network security director, which shows common configuration issues. For each finding, I receive detailed information and recommended remediation steps. The service rates the severity of findings (high, medium, low) to help me prioritize my response. Critical-severity findings such as “CloudFront origin is also internet accessible without CloudFront protections” or high-severity findings such as “Allows unrestricted inbound access (0.0.0.0/0) on all ports” are presented first, followed by medium- and low-severity issues.You can analyze your network security configurations, in natural language, with AWS Shield network security director within Amazon Q Developer in the AWS Management Console and chat applications. For example, you can say “Do I have any network security issues on my CloudFront distributions?” or “Are any of my resources vulnerable to bots and scrapers?” This integration helps security teams quickly understand their security posture and receive guidance on implementing best practices without having to navigate through extensive documentation.To explore this capability, I ask “What are my most critical network security issues?” in the section. Amazon Q analyzes my network security configuration and generates a response based on the security assessment of my AWS environment.With this comprehensive view of your network security, you can now make data-driven decisions to strengthen your defenses against emerging threats.AWS Shield network security director is available in the US East (N. Virginia) and Europe (Stockholm) Regions. The Amazon Q Developer capability to analyze network security configurations is available in preview in US East (N. Virginia). To begin strengthening your network security, visit the AWS Shield network security director console and initiate your first network security analysis.]]></content:encoded></item><item><title>Amazon CloudFront simplifies web application delivery and security with new user-friendly interface</title><link>https://aws.amazon.com/blogs/aws/amazon-cloudfront-simplifies-web-application-delivery-and-security-with-new-user-friendly-interface/</link><author>Micah Walter</author><category>devops</category><pubDate>Tue, 17 Jun 2025 14:52:15 +0000</pubDate><source url="https://aws.amazon.com/blogs/aws/">AWS blog</source><content:encoded><![CDATA[Today, we’re announcing a new simplified onboarding experience for Amazon CloudFront that developers can use to accelerate and secure their web applications in seconds. This new experience, along with improvements to the AWS WAF console experience, makes it easier than ever for developers to configure content delivery and security services without requiring deep technical expertise.Setting up content delivery and security for web applications traditionally required navigating multiple Amazon Web Services (AWS) services and making numerous configuration decisions. With this new CloudFront onboarding experience, developers can now create a fully configured distribution with DNS and a TLS certificate in just a few clicks.Amazon CloudFront offers compelling benefits for organizations of all sizes looking to deliver content and applications globally. As a content delivery network (CDN), CloudFront significantly improves application performance by serving content from edge locations closest to your users, reducing latency and improving user experience. Beyond performance, CloudFront provides built-in security features that protect your applications from distributed denial of service (DDoS) attacks and other threats at the edge, preventing malicious traffic from reaching your origin infrastructure. The service automatically scales with your traffic demands without requiring any manual intervention, handling both planned and unexpected traffic spikes with ease. Whether you’re running a small website or a large-scale application, the CloudFront integration with other AWS services and the new simplified console experience makes it easier than ever to implement these essential capabilities for your web applications.The new CloudFront console experience guides developers through a simplified workflow that starts with the domain name they want to use for their distribution. When using Amazon Route 53, the experience automatically handles TLS certificate provisioning and DNS record configuration, while incorporating security best practices by default. This unified approach eliminates the need to switch between multiple services like AWS Certificate Manager, Route 53, and AWS WAF, and offers developers a faster time to production without the need to dive deep on the nuanced configuration options of each service.For example, a developer can now create a secure CloudFront distribution for their applications fronted by a load balancer by entering their domain name and selecting their load balancer as the origin. The console automatically recommends optimal CDN and security configurations based on the application type and requirements, and developers can deploy with confidence knowing they’re following AWS best practices.For developers who wish to host a static website on Amazon Simple Storage Service (Amazon S3), CloudFront provides several important benefits. First, it improves your website’s performance by caching content at edge locations closer to your users, reducing latency and improving page load times. Second, it helps protect your S3 bucket by acting as a security layer—CloudFront can be configured to be the only way to access your content, preventing direct access to your S3 bucket. The new experience automatically configures these security best practices for you.Complementing the new CloudFront experience, we’re also introducing an improved AWS WAF console that features intelligent Rule Packs—curated sets of security rules based on application type and security requirements. These Rule Packs enable developers to implement comprehensive security controls without needing to be security experts.When creating a CloudFront distribution, developers can now enable AWS WAF protection through an integrated experience that uses these new Rule Packs. The console provides clear recommendations for security configurations that developers can use to preview and validate their settings before deployment.Web applications face numerous security threats today, including SQL injection attacks, cross-site scripting (XSS), and other OWASP Top 10 vulnerabilities. With the new AWS WAF integration, you automatically get protection against these common attack vectors. The recommended Rule Packs provide immediate protection against malicious bot traffic, common web exploits, and known bad actors while preventing direct-to-origin attacks that could overwhelm your infrastructure.If you’ve ever created an Amazon CloudFront distribution, you’ll immediately notice that things have changed. The new experience is straightforward to follow and understand. For my example, I chose to create a distribution for a static website using Amazon S3 as my origin.In , I give my distribution a name and select from  or the new Multi-tenant architecture option, which I can use to configure distributions that use multiple domains but share a common configuration. I choose  and enter an optional domain name. With the new experience, I can use the  button to verify I have my domain as a Route 53 zone file.Next, I select the origin for the distribution, which is where CloudFront will fetch the content to serve and cache. For my , I select Amazon S3. As the preceding screenshot shows, there are several additional options to choose from. Each of the options is designed to make configuration as straightforward as possible for the most popular use cases. Next, I select my S3 bucket, either by typing in the bucket name or using the  button.Next, I have several settings related to using Amazon S3 as my origin. The Grant CloudFront access to origin option is an important one. This option (selected by default) will update my S3 bucket policy to allow CloudFront to access my bucket and will configure my bucket for . This way, I can use a completely private bucket and know that assets in my bucket can only be accessed through CloudFront. This is a critical step to keeping my bucket and assets secure.In the next step, I’m presented with the option to configure AWS WAF. With AWS WAF enabled, my web servers are better protected because it inspects each incoming request for potential threats before allowing them to make their way to my web servers. There is a cost to enabling AWS WAF, and as you can see in the following screenshot, there is a calculator to help estimate additional charges.The new CloudFront onboarding experience and enhanced AWS WAF console are available today in all AWS Regions where these services are offered. You can start using these new features through the AWS Management Console. There are no additional charges for using these new experiences—you pay only for the CloudFront and AWS WAF resources you use, based on their respective pricing models.]]></content:encoded></item><item><title>AWS Certificate Manager introduces exportable public SSL/TLS certificates to use anywhere</title><link>https://aws.amazon.com/blogs/aws/aws-certificate-manager-introduces-exportable-public-ssl-tls-certificates-to-use-anywhere/</link><author>Channy Yun (윤석찬)</author><category>devops</category><pubDate>Tue, 17 Jun 2025 14:46:20 +0000</pubDate><source url="https://aws.amazon.com/blogs/aws/">AWS blog</source><content:encoded><![CDATA[Now you can export public certificates from ACM, get access to the private keys, and use them on any workloads running on Amazon Elastic Compute Cloud (Amazon EC2) instances, containers, or on-premises hosts. The exportable public certificate are valid for 395 days. There is a charge at time of issuance, and again at time of renewal. Public certificates exported from ACM are issued by Amazon Trust Services and are widely trusted by commonly used platforms such as Apple and Microsoft and popular web browsers such as Google Chrome and Mozilla Firefox.ACM exportable public certificates in action To export a public certificate, you first request a new exportable public certificate. You cannot export previously created public certificates.To get started, choose  in the ACM console and choose  in the  section. If you select , the private key for this certificate will be disallowed for exporting from ACM and this cannot be changed after certificate issuance.aws acm request-certificate \
--domain-name mydomain.com \
--key-algorithm EC_Prime256v1 \
--validation-method DNS \
--idempotency-token <token> \
--options \
CertificateTransparencyLoggingPreference=DISABLED \
Export=ENABLEDAfter you request the public certificate, you must validate your domain name to prove that you own or control the domain for which you are requesting the certificate. The certificate is typically issued within seconds after successful domain validation.When the certificate enters status , you can export your issued public certificate by choosing .Enter a passphrase for encrypting the private key. You will need the passphrase later to decrypt the private key. To get the public key, Choose .You can copy the PEM encoded certificate, certificate chain, and private key or download each to a separate file.You can use the  command to export a public certificate and private key. For added security, use a file editor to store your passphrase and output keys to a file to prevent being stored in the command history.aws acm export-certificate \
     --certificate-arn arn:aws:acm:us-east-1:<accountID>:certificate/<certificateID> \
     --passphrase fileb://path-to-passphrase-file \
     | jq -r '"\(.Certificate)\(.CertificateChain)\(.PrivateKey)"' \
     > /tmp/export.txtYou can now use the exported public certificates for any workload that requires SSL/TLS communication such as Amazon EC2 instances. To learn more, visit Configure SSL/TLS on Amazon Linux in your EC2 instances. Here are a couple of things to know about exportable public certificates: – An administrator of your organization can set AWS IAM policies to authorize roles and users who can request exportable public certificates. ACM users who have current rights to issue a certificate will automatically get rights to issue an exportable certificate. ACM admins can also manage the certificates and take actions such as revoking or deleting the certificates. You should protect exported private keys using secure storage and access controls. – You may need to revoke exportable public certificates to comply with your organization’s policies or mitigate key compromise. You can only revoke the certificates that were previously exported. The certificate revocation process is global and permanent. Once revoked, you can’t retrieve revoked certificates to reuse. To learn more, visit Revoke a public certificate in the AWS documentation. – You can configure automatic renewal events for exportable public certificates by Amazon EventBridge to monitor certificate renewals and create automation to handle certificate deployment when renewals occur. To learn more, visit Using Amazon EventBridge in the AWS documentation. You can also renew these certificates on-demand. When you renew the certificates, you’re charged for a new certificate issuance. To learn more, visit Force certificate renewal in the AWS documentation. You can now issue exportable public certificates from ACM and export the certificate with the private keys to use other compute workloads as well as ELB, Amazon CloudFront, and Amazon API Gateway.You are subject to additional charges for an exportable public certificate when you create it with ACM. It costs $15 per fully qualified domain name and $149 per wildcard domain name. You only pay once during the lifetime of the certificate and will be charged again only when the certificate renews. To learn more, visit the AWS Certificate Manager Service Pricing page.]]></content:encoded></item><item><title>Verify internal access to critical AWS resources with new IAM Access Analyzer capabilities</title><link>https://aws.amazon.com/blogs/aws/verify-internal-access-to-critical-aws-resources-with-new-iam-access-analyzer-capabilities/</link><author>Micah Walter</author><category>devops</category><pubDate>Tue, 17 Jun 2025 14:09:08 +0000</pubDate><source url="https://aws.amazon.com/blogs/aws/">AWS blog</source><content:encoded><![CDATA[Security teams in regulated industries, such as financial services and healthcare, need to verify access to sensitive data stores like Amazon Simple Storage Service (Amazon S3) buckets containing credit card information or healthcare records. Previously, teams had to invest considerable time and resources conducting manual reviews of AWS Identity and Access Management (IAM) policies or rely on pattern-matching tools to understand internal access patterns.The new IAM Access Analyzer internal access findings identify who within your AWS organization has access to your critical AWS resources. It uses automated reasoning to collectively evaluate multiple policies, including service control policies (SCPs), resource control policies (RCPs), and identity-based policies, and generates findings when a user or role has access to your S3 buckets, Amazon DynamoDB tables, or Amazon Relational Database Service (Amazon RDS) snapshots. The findings are aggregated in a unified dashboard, simplifying access review and management. You can use Amazon EventBridge to automatically notify development teams of new findings to remove unintended access. Internal access findings provide security teams with the visibility to strengthen access controls on their critical resources and help compliance teams demonstrate access control audit requirements.To begin using this new capability, you can enable IAM Access Analyzer to monitor specific resources using the AWS Management Console. Navigate to IAM and select  under the  section of the left-hand navigation menu. From here, select .From the  page, select the option of Resource analysis – Internal access. Under , you can customize your analyzer’s name to whatever you prefer or use the automatically generated name. Next, you need to select your . If your account is the management account for an AWS organization, you can choose to monitor resources across all accounts within your organization or the current account you’re logged in to. If your account is a member account of an AWS organization or a standalone account, then you can monitor resources within your account.The zone of trust also determines which IAM roles and users are considered in scope for analysis. An organization zone of trust analyzer evaluates all IAM roles and users in the organization for potential access to a resource, whereas an account zone of trust only evaluates the IAM roles and users in that account.For this first example, we assume our account is the management account and create an analyzer with the organization as the zone of trust.Next, we need to select the resources we wish to analyze. Selecting  gives us three options. Let’s first examine how we can select resources by identifying the account and resource type for analysis.You can use dialog to choose resource types through a new interface. Here, we select All supported resource types and select the accounts we wish to monitor. This will create an analyzer that monitors all supported resource types. You can either select accounts through the organization structure (shown in the following screenshot) or paste in account IDs using the  option.You can also choose to use the Define specific resource types dialog, which you can use to pick from a list of supported resource types (as shown in the following screenshot). By creating an analyzer with this configuration, IAM Access Analyzer will continually monitor both existing and new resources of the selected type within the account, checking for internal access.After you’ve completed your selections, choose .Alternatively, you can use the Add resources by resource ARN option.Or you can use the Add resources by uploading a CSV file option to configure monitoring a list of specific resources at scale.After you’ve completed the creation of your analyzer, IAM Access Analyzer will analyze policies daily and generate findings that show access granted to IAM roles and users within your organization. The updated IAM Access Analyzer dashboard now provides a resource-centric view. The  section summarizes access into three distinct categories: public access, external access outside of the organization (requires creation of a separate external access analyzer), and access within the organization. The  section highlights the top resources with active findings across the three categories. You can see a list of all analyzed resources by selecting  or  on the left-hand navigation menu.On the  page, you can filter the list of all analyzed resources for further analysis.When you select a specific resource, any available external access and internal access findings are listed on the  page. Use this feature to evaluate all possible access to your selected resource. For each finding, IAM Access Analyzer provides you with detailed information about allowed IAM actions and their conditions, including the impact of any applicable SCPs and RCPs. This means you can verify that access is appropriately restricted and meets least-privilege requirements.This new IAM Access Analyzer capability is available today in all commercial Regions. Pricing is based on the number of critical AWS resources monitored per month. External access analysis remains available at no additional charge. Pricing for EventBridge applies separately.]]></content:encoded></item><item><title>Merging Business Logic and DevOps</title><link>https://devops.com/merging-business-logic-and-devops/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=merging-business-logic-and-devops</link><author>Chris Brill</author><category>devops</category><pubDate>Tue, 17 Jun 2025 07:53:35 +0000</pubDate><source url="https://devops.com/">DevOps.com</source><content:encoded><![CDATA[]]></content:encoded></item><item><title>How to Embed Security Into Enterprise DevOps Pipelines</title><link>https://devops.com/how-to-embed-security-into-enterprise-devops-pipelines/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=how-to-embed-security-into-enterprise-devops-pipelines</link><author>Gaurav Belani</author><category>devops</category><pubDate>Tue, 17 Jun 2025 07:20:19 +0000</pubDate><source url="https://devops.com/">DevOps.com</source><content:encoded><![CDATA[]]></content:encoded></item><item><title>AWS Weekly Roundup: AWS re:Inforce 2025, AWS WAF, AWS Control Tower, and more (June 16, 2025)</title><link>https://aws.amazon.com/blogs/aws/aws-weekly-roundup-aws-reinforce-2025-aws-waf-aws-control-tower-and-more-june-16-2025/</link><author>Esra Kayabali</author><category>devops</category><pubDate>Mon, 16 Jun 2025 16:56:37 +0000</pubDate><source url="https://aws.amazon.com/blogs/aws/">AWS blog</source><content:encoded><![CDATA[Today marks the start of AWS re:Inforce 2025, where security professionals are gathering for three days of technical learning sessions, workshops, and demonstrations. This security-focused conference brings together AWS security specialists who build and maintain the services that organizations rely on for their cloud security needs.AWS Chief Information Security Officer (CISO) Amy Herzog will deliver the conference keynote along with guest speakers who will share new security capabilities and implementation insights. The event offers multiple learning paths with sessions designed for various technical roles and expertise levels. Many of my colleagues from across AWS are leading hands-on workshops, demonstrating new security features, and facilitating community discussions. For those unable to join us in Philadelphia, the keynote and innovation talks will be viewable by livestream during the event, and available to watch on demand after the event. Look out for the key announcements and technical insights from the conference in upcoming posts!Let’s look at last week’s new announcements. Here are the launches that got my attention. – Amazon Q Developer now supports Model Context Protocol (MCP) in its integrated development environment (IDE) plugins, helping developers integrate external tools for enhanced contextual development workflows. You can now augment the built-in tools with any MCP server that supports the stdio transport layer. These servers can be managed within the Amazon Q Developer user interface. This makes it easy to add, remove, and modify tool permissions. The integration enables more customized responses by orchestrating tasks across both native and MCP server-based tools. MCP support is available in Visual Studio Code and JetBrains IDE plugins, as well as in the Amazon Q Developer command line interface (CLI), with detailed documentation and implementation guides available in the Amazon Q Developer documentation.AWS WAF now supports automatic application layer DDoS protection – AWS has enhanced its application layer (L7) distributed denial of service (DDoS) protection capabilities with faster automatic detection and mitigation that responds to events within seconds. This AWS Managed Rules group automatically detects and mitigates DDoS attacks of any duration to keep applications running on Amazon CloudFront, Application Load Balancer, and other AWS WAF supported services available to users. The system establishes a baseline within minutes of activation using machine learning (ML) models to detect traffic anomalies, then automatically applies rules to address suspicious requests. Configuration options help you customize responses such as presenting challenges or blocking requests. The feature is available to all AWS WAF and AWS Shield Advanced subscribers in all supported AWS Regions, except Asia Pacific (Thailand), Mexico (Central), and China (Beijing and Ningxia). To learn more about AWS WAF application layer (L7) DDoS protection, visit the AWS WAF documentation or the AWS WAF console.AWS Control Tower now supports service-linked AWS Config managed AWS Config rules – AWS Control Tower now deploys service-linked AWS Config rules directly in managed accounts, replacing the previous CloudFormation StackSets deployment method. This change improves deployment speed when enabling service-linked AWS Config rules across multiple AWS Control Tower managed accounts and Regions. These service-linked rules are managed entirely by AWS services and can’t be edited or deleted by users. This helps maintain consistency and prevent configuration drift. AWS Control Tower Config rules detect resource noncompliance within accounts and provide alerts through the dashboard. You can deploy these controls using the AWS Control Tower console or AWS Control Tower control APIs.Powertools for AWS Lambda introduces Bedrock Agents Function utility – The new Amazon Bedrock Agents Function utility in Powertools for AWS Lambda simplifies building serverless applications integrated with Amazon Bedrock Agents. This utility helps developers create AWS Lambda functions that respond to Amazon Bedrock Agents action requests with built-in parameter injection and response formatting, eliminating boilerplate code. The utility seamlessly integrates with other Powertools features like Logger and Metrics, making it easier to build production-ready AI applications. This integration improves the developer experience when building agent-based solutions that use AWS Lambda functions to process actions requested by Amazon Bedrock Agents. The utility is available in Python, TypeScript, and .NET versions of Powertools.Announcing open sourcing pgactive: active-active replication extension for PostgreSQL – Pgactive is a PostgreSQL extension that enables asynchronous active-active replication for streaming data between database instances, and AWS has made it open source. This extension provides additional resiliency and flexibility for moving data between instances, including writers located in different Regions. It helps maintain availability during operations like switching write traffic. Building on PostgreSQL’s logical replication features, pgactive adds capabilities that simplify managing active-active replication scenarios. The open source approach encourages collaboration on developing PostgreSQL’s active-active capabilities while offering features that streamline using PostgreSQL in multi-active instance environments. For more information and implementation guidance, visit the GitHub repository.We launched existing services and instance types in additional Regions: Check your calendar and sign up for upcoming AWS events.AWS GenAI Lofts are collaborative spaces and immersive experiences that showcase AWS expertise in cloud computing and AI. They provide startups and developers with hands-on access to AI products and services, exclusive sessions with industry leaders, and valuable networking opportunities with investors and peers. Find a GenAI Loft location near you and don’t forget to register.AWS Summits are free online and in-person events that bring the cloud computing community together to connect, collaborate, and learn about AWS. Register in your nearest city: Milano (June 18), Shanghai (June 19 – 20), Mumbai (June 19) and Japan (June 25 – 26).That’s all for this week. Check back next Monday for another Weekly Roundup!This post is part of our Weekly Roundup series. Check back each week for a quick roundup of interesting news and announcements from AWS!]]></content:encoded></item><item><title>Five Great DevOps Job Opportunities</title><link>https://devops.com/five-great-devops-job-opportunities-143/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=five-great-devops-job-opportunities-143</link><author>Mike Vizard</author><category>devops</category><pubDate>Mon, 16 Jun 2025 07:53:19 +0000</pubDate><source url="https://devops.com/">DevOps.com</source><content:encoded><![CDATA[]]></content:encoded></item><item><title>Changes to Kubernetes Slack</title><link>https://kubernetes.io/blog/2025/06/16/changes-to-kubernetes-slack/</link><author></author><category>official</category><category>k8s</category><category>devops</category><pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate><source url="https://kubernetes.io/">Kubernetes Blog</source><content:encoded><![CDATA[: We’ve received notice from Salesforce that our Slack workspace  on June 20th. Stand by for more details, but for now, there is no urgency to back up private channels or direct messages.. Sometime later this year, our community may move to a new platform. If you are responsible for a channel or private channel, or a member of a User Group, you will need to take some actions as soon as you can.For the last decade, Slack has supported our project with a free customized enterprise account. They have let us know that they can no longer do so, particularly since our Slack is one of the largest and more active ones on the platform. As such, they will be downgrading it to a standard free Slack while we decide on, and implement, other options.On Friday, June 20, we will be subject to the feature limitations of free Slack. The primary ones which will affect us will be only retaining 90 days of history, and having to disable several apps and workflows which we are currently using. The Slack Admin team will do their best to manage these limitations.Responsible channel owners, members of private channels, and members of User Groups should take some actions to prepare for the upgrade and preserve information as soon as possible.The CNCF Projects Staff have proposed that our community look at migrating to Discord. Because of existing issues where we have been pushing the limits of Slack, they have already explored what a Kubernetes Discord would look like. Discord would allow us to implement new tools and integrations which would help the community, such as GitHub group membership synchronization. The Steering Committee will discuss and decide on our future platform.]]></content:encoded></item><item><title>Cloud Native Live: From cloud to code - managing growth with infrastructure as code</title><link>https://www.youtube.com/watch?v=E-c6QZXOjs4</link><author>CNCF [Cloud Native Computing Foundation]</author><category>k8s</category><category>devops</category><category>video</category><enclosure url="https://www.youtube.com/v/E-c6QZXOjs4?version=3" length="" type=""/><pubDate>Sun, 15 Jun 2025 23:53:53 +0000</pubDate><source url="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA">CNCF</source><content:encoded><![CDATA[]]></content:encoded></item></channel></rss>