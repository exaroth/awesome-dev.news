{"id":"KWcVEiwEzuiDsTqLn6LojC9X2yBX45N36DRtYHsFby6oiM4t597YhKBSdxr5wqMdj8kvSgDuiUuV6yvogw","title":"GitHub All Languages Daily Trending","displayTitle":"Github Trending","url":"https://mshibanami.github.io/GitHubTrendingRSS/daily/all.xml","feedLink":"http://mshibanami.github.io/GitHubTrendingRSS","isQuery":false,"isEmpty":false,"isHidden":false,"itemCount":11,"items":[{"title":"go-playground/validator","url":"https://github.com/go-playground/validator","date":1739636419,"author":"","guid":417,"unread":true,"content":"<p>💯Go Struct and Field validation, including Cross Field, Cross Struct, Map, Slice and Array diving</p><p>Package validator implements value validations for structs and individual fields based on tags.</p><p>It has the following  features:</p><ul><li>Cross Field and Cross Struct validations by using validation tags or custom validators.</li><li>Slice, Array and Map diving, which allows any or all levels of a multidimensional field to be validated.</li><li>Ability to dive into both map keys and values for validation</li><li>Handles type interface by determining it's underlying type prior to validation.</li><li>Handles custom field types such as sql driver Valuer see <a href=\"https://golang.org/src/database/sql/driver/types.go?s=1210:1293#L29\">Valuer</a></li><li>Alias validation tags, which allows for mapping of several validations to a single tag for easier defining of validations on structs</li><li>Extraction of custom defined Field Name e.g. can specify to extract the JSON name while validating and have it available in the resulting FieldError</li><li>Customizable i18n aware error messages.</li><li>Default validator for the <a href=\"https://github.com/gin-gonic/gin\">gin</a> web framework; upgrading from v8 to v9 in gin see <a href=\"https://github.com/go-playground/validator/tree/master/_examples/gin-upgrading-overriding\">here</a></li></ul><p>Please read the discussiong started <a href=\"https://github.com/go-playground/validator/discussions/1330\">here</a> if you are interested in contributing/helping maintain this package.</p><pre><code>go get github.com/go-playground/validator/v10\n</code></pre><p>Then import the validator package into your own code.</p><pre><code>import \"github.com/go-playground/validator/v10\"\n</code></pre><p>Validation functions return type error</p><p>They return type error to avoid the issue discussed in the following, where err is always != nil:</p><p>Validator returns only InvalidValidationError for bad validation input, nil or ValidationErrors as type error; so, in your code all you need to do is check if the error returned is not nil, and if it's not check if error is InvalidValidationError ( if necessary, most of the time it isn't ) type cast it to type ValidationErrors like so:</p><pre><code>err := validate.Struct(mystruct)\nvalidationErrors := err.(validator.ValidationErrors)\n</code></pre><ul><li>If new to using validator it is highly recommended to initialize it using the <code>WithRequiredStructEnabled</code> option which is opt-in to new behaviour that will become the default behaviour in v11+. See documentation for more details.</li></ul><pre><code>validate := validator.New(validator.WithRequiredStructEnabled())\n</code></pre><table><tbody><tr><td>Field Equals Another Field (relative)</td></tr><tr><td>Field Equals Another Field</td></tr><tr><td>Check the indicated characters are present in the Field</td></tr><tr><td>Check the indicated characters are not present in the field</td></tr><tr><td>Field Greater Than Another Relative Field</td></tr><tr><td>Field Greater Than or Equal To Another Relative Field</td></tr><tr><td>Field Greater Than or Equal To Another Field</td></tr><tr><td>Field Greater Than Another Field</td></tr><tr><td>Less Than Another Relative Field</td></tr><tr><td>Less Than or Equal To Another Relative Field</td></tr><tr><td>Less Than or Equal To Another Field</td></tr><tr></tr><tr><td>Field Does Not Equal Another Field (relative)</td></tr><tr><td>Field Does Not Equal Another Field</td></tr></tbody></table><table><tbody><tr><td>Classless Inter-Domain Routing CIDR</td></tr><tr><td>Classless Inter-Domain Routing CIDRv4</td></tr><tr><td>Classless Inter-Domain Routing CIDRv6</td></tr><tr><td>Full Qualified Domain Name (FQDN)</td></tr><tr></tr><tr><td>Internet Protocol Address IP</td></tr><tr><td>Internet Protocol Address IPv4</td></tr><tr><td>Internet Protocol Address IPv6</td></tr><tr><td>Internet Protocol Address IP</td></tr><tr><td>Internet Protocol Address IPv4</td></tr><tr><td>Internet Protocol Address IPv6</td></tr><tr><td>Media Access Control Address MAC</td></tr><tr><td>Transmission Control Protocol Address TCPv4</td></tr><tr><td>Transmission Control Protocol Address TCPv6</td></tr><tr><td>Transmission Control Protocol Address TCP</td></tr><tr><td>User Datagram Protocol Address UDPv4</td></tr><tr><td>User Datagram Protocol Address UDPv6</td></tr><tr><td>User Datagram Protocol Address UDP</td></tr><tr><td>Unix domain socket end point Address</td></tr><tr></tr></tbody></table><table><tbody><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr></tbody></table><table><tbody><tr></tr><tr></tr><tr><td>Business Identifier Code (ISO 9362)</td></tr><tr></tr><tr><td>Bitcoin Bech32 Address (segwit)</td></tr><tr></tr><tr><td>mongodb_connection_string</td><td>MongoDB Connection String</td></tr><tr><td>SpiceDb ObjectID/Permission/Type</td></tr><tr><td>e164 formatted phone number</td></tr><tr></tr><tr><td>International Standard Book Number</td></tr><tr><td>International Standard Book Number 10</td></tr><tr><td>International Standard Book Number 13</td></tr><tr><td>International Standard Serial Number</td></tr><tr><td>Two-letter country code (ISO 3166-1 alpha-2)</td></tr><tr><td>Three-letter country code (ISO 3166-1 alpha-3)</td></tr><tr><td>Numeric country code (ISO 3166-1 numeric)</td></tr><tr><td>Country subdivision code (ISO 3166-2)</td></tr><tr></tr><tr><td>Luhn Algorithm Checksum (for strings and (u)int)</td></tr><tr></tr><tr><td>postcode_iso3166_alpha2_field</td></tr><tr><td>Social Security Number SSN</td></tr><tr><td>Universally Unique Identifier UUID</td></tr><tr><td>Universally Unique Identifier UUID v3</td></tr><tr><td>Universally Unique Identifier UUID v3 RFC4122</td></tr><tr><td>Universally Unique Identifier UUID v4</td></tr><tr><td>Universally Unique Identifier UUID v4 RFC4122</td></tr><tr><td>Universally Unique Identifier UUID v5</td></tr><tr><td>Universally Unique Identifier UUID v5 RFC4122</td></tr><tr><td>Universally Unique Identifier UUID RFC4122</td></tr><tr><td>Semantic Versioning 2.0.0</td></tr><tr><td>Universally Unique Lexicographically Sortable Identifier ULID</td></tr><tr><td>Common Vulnerabilities and Exposures Identifier (CVE id)</td></tr></tbody></table><table><tbody><tr></tr><tr></tr></tbody></table><table><tbody><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr></tbody></table><table><tbody><tr><td>hexcolor|rgb|rgba|hsl|hsla</td></tr><tr><td>iso3166_1_alpha2|iso3166_1_alpha3|iso3166_1_alpha_numeric</td></tr></tbody></table><h6>Run on MacBook Pro Max M3</h6><pre><code>go version go1.23.3 darwin/arm64\ngoos: darwin\ngoarch: arm64\ncpu: Apple M3 Max\npkg: github.com/go-playground/validator/v10\nBenchmarkFieldSuccess-16                                                42461943                27.88 ns/op            0 B/op          0 allocs/op\nBenchmarkFieldSuccessParallel-16                                        486632887                2.289 ns/op           0 B/op          0 allocs/op\nBenchmarkFieldFailure-16                                                 9566167               121.3 ns/op           200 B/op          4 allocs/op\nBenchmarkFieldFailureParallel-16                                        17551471                83.68 ns/op          200 B/op          4 allocs/op\nBenchmarkFieldArrayDiveSuccess-16                                        7602306               155.6 ns/op            97 B/op          5 allocs/op\nBenchmarkFieldArrayDiveSuccessParallel-16                               20664610                59.80 ns/op           97 B/op          5 allocs/op\nBenchmarkFieldArrayDiveFailure-16                                        4659756               252.9 ns/op           301 B/op         10 allocs/op\nBenchmarkFieldArrayDiveFailureParallel-16                                8010116               152.9 ns/op           301 B/op         10 allocs/op\nBenchmarkFieldMapDiveSuccess-16                                          2834575               421.2 ns/op           288 B/op         14 allocs/op\nBenchmarkFieldMapDiveSuccessParallel-16                                  7179700               171.8 ns/op           288 B/op         14 allocs/op\nBenchmarkFieldMapDiveFailure-16                                          3081728               384.4 ns/op           376 B/op         13 allocs/op\nBenchmarkFieldMapDiveFailureParallel-16                                  6058137               204.0 ns/op           377 B/op         13 allocs/op\nBenchmarkFieldMapDiveWithKeysSuccess-16                                  2544975               464.8 ns/op           288 B/op         14 allocs/op\nBenchmarkFieldMapDiveWithKeysSuccessParallel-16                          6661954               181.4 ns/op           288 B/op         14 allocs/op\nBenchmarkFieldMapDiveWithKeysFailure-16                                  2435484               490.7 ns/op           553 B/op         16 allocs/op\nBenchmarkFieldMapDiveWithKeysFailureParallel-16                          4249617               282.0 ns/op           554 B/op         16 allocs/op\nBenchmarkFieldCustomTypeSuccess-16                                      14943525                77.35 ns/op           32 B/op          2 allocs/op\nBenchmarkFieldCustomTypeSuccessParallel-16                              64051954                20.61 ns/op           32 B/op          2 allocs/op\nBenchmarkFieldCustomTypeFailure-16                                      10721384               107.1 ns/op           184 B/op          3 allocs/op\nBenchmarkFieldCustomTypeFailureParallel-16                              18714495                69.77 ns/op          184 B/op          3 allocs/op\nBenchmarkFieldOrTagSuccess-16                                            4063124               294.3 ns/op            16 B/op          1 allocs/op\nBenchmarkFieldOrTagSuccessParallel-16                                   31903756                41.22 ns/op           18 B/op          1 allocs/op\nBenchmarkFieldOrTagFailure-16                                            7748558               146.8 ns/op           216 B/op          5 allocs/op\nBenchmarkFieldOrTagFailureParallel-16                                   13139854                92.05 ns/op          216 B/op          5 allocs/op\nBenchmarkStructLevelValidationSuccess-16                                16808389                70.25 ns/op           16 B/op          1 allocs/op\nBenchmarkStructLevelValidationSuccessParallel-16                        90686955                14.47 ns/op           16 B/op          1 allocs/op\nBenchmarkStructLevelValidationFailure-16                                 5818791               200.2 ns/op           264 B/op          7 allocs/op\nBenchmarkStructLevelValidationFailureParallel-16                        11115874               107.5 ns/op           264 B/op          7 allocs/op\nBenchmarkStructSimpleCustomTypeSuccess-16                                7764956               151.9 ns/op            32 B/op          2 allocs/op\nBenchmarkStructSimpleCustomTypeSuccessParallel-16                       52316265                30.37 ns/op           32 B/op          2 allocs/op\nBenchmarkStructSimpleCustomTypeFailure-16                                4195429               277.2 ns/op           416 B/op          9 allocs/op\nBenchmarkStructSimpleCustomTypeFailureParallel-16                        7305661               164.6 ns/op           432 B/op         10 allocs/op\nBenchmarkStructFilteredSuccess-16                                        6312625               186.1 ns/op           216 B/op          5 allocs/op\nBenchmarkStructFilteredSuccessParallel-16                               13684459                93.42 ns/op          216 B/op          5 allocs/op\nBenchmarkStructFilteredFailure-16                                        6751482               171.2 ns/op           216 B/op          5 allocs/op\nBenchmarkStructFilteredFailureParallel-16                               14146070                86.93 ns/op          216 B/op          5 allocs/op\nBenchmarkStructPartialSuccess-16                                         6544448               177.3 ns/op           224 B/op          4 allocs/op\nBenchmarkStructPartialSuccessParallel-16                                13951946                88.73 ns/op          224 B/op          4 allocs/op\nBenchmarkStructPartialFailure-16                                         4075833               287.5 ns/op           440 B/op          9 allocs/op\nBenchmarkStructPartialFailureParallel-16                                 7490805               161.3 ns/op           440 B/op          9 allocs/op\nBenchmarkStructExceptSuccess-16                                          4107187               281.4 ns/op           424 B/op          8 allocs/op\nBenchmarkStructExceptSuccessParallel-16                                 15979173                80.86 ns/op          208 B/op          3 allocs/op\nBenchmarkStructExceptFailure-16                                          4434372               264.3 ns/op           424 B/op          8 allocs/op\nBenchmarkStructExceptFailureParallel-16                                  8081367               154.1 ns/op           424 B/op          8 allocs/op\nBenchmarkStructSimpleCrossFieldSuccess-16                                6459542               183.4 ns/op            56 B/op          3 allocs/op\nBenchmarkStructSimpleCrossFieldSuccessParallel-16                       41013781                37.95 ns/op           56 B/op          3 allocs/op\nBenchmarkStructSimpleCrossFieldFailure-16                                4034998               292.1 ns/op           272 B/op          8 allocs/op\nBenchmarkStructSimpleCrossFieldFailureParallel-16                       11348446               115.3 ns/op           272 B/op          8 allocs/op\nBenchmarkStructSimpleCrossStructCrossFieldSuccess-16                     4448528               267.7 ns/op            64 B/op          4 allocs/op\nBenchmarkStructSimpleCrossStructCrossFieldSuccessParallel-16            26813619                48.33 ns/op           64 B/op          4 allocs/op\nBenchmarkStructSimpleCrossStructCrossFieldFailure-16                     3090646               384.5 ns/op           288 B/op          9 allocs/op\nBenchmarkStructSimpleCrossStructCrossFieldFailureParallel-16             9870906               129.5 ns/op           288 B/op          9 allocs/op\nBenchmarkStructSimpleSuccess-16                                         10675562               109.5 ns/op             0 B/op          0 allocs/op\nBenchmarkStructSimpleSuccessParallel-16                                 131159784                8.932 ns/op           0 B/op          0 allocs/op\nBenchmarkStructSimpleFailure-16                                          4094979               286.6 ns/op           416 B/op          9 allocs/op\nBenchmarkStructSimpleFailureParallel-16                                  7606663               157.9 ns/op           416 B/op          9 allocs/op\nBenchmarkStructComplexSuccess-16                                         2073470               576.0 ns/op           224 B/op          5 allocs/op\nBenchmarkStructComplexSuccessParallel-16                                 7821831               161.3 ns/op           224 B/op          5 allocs/op\nBenchmarkStructComplexFailure-16                                          576358              2001 ns/op            3042 B/op         48 allocs/op\nBenchmarkStructComplexFailureParallel-16                                 1000000              1171 ns/op            3041 B/op         48 allocs/op\nBenchmarkOneof-16                                                       22503973                52.82 ns/op            0 B/op          0 allocs/op\nBenchmarkOneofParallel-16                                                8538474               140.4 ns/op             0 B/op          0 allocs/op\n</code></pre><p>Here is a list of software that complements using this library either pre or post validation.</p><ul><li><a href=\"https://github.com/go-playground/form\">form</a> - Decodes url.Values into Go value(s) and Encodes Go value(s) into url.Values. Dual Array and Full map support.</li><li><a href=\"https://github.com/go-playground/mold\">mold</a> - A general library to help modify or set data within data structures and other objects</li></ul><h2>Maintenance and support for SDK major versions</h2><p>See prior discussion <a href=\"https://github.com/go-playground/validator/discussions/1342\">here</a> for more details.</p><p>This package is aligned with the <a href=\"https://go.dev/doc/devel/release\">Go release policy</a> in that support is guaranteed for the two most recent major versions.</p><p>This does not mean the package will not work with older versions of Go, only that we reserve the right to increase the MSGV(Minimum Supported Go Version) when the need arises to address Security issues/patches, OS issues &amp; support or newly introduced functionality that would greatly benefit the maintenance and/or usage of this package.</p><p>If and when the MSGV is increased it will be done so in a minimum of a  release bump.</p><p>Distributed under MIT License, please see license file within the code for more details.</p><p>This project has grown large enough that more than one person is required to properly support the community. If you are interested in becoming a maintainer please reach out to me <a href=\"https://github.com/deankarn\">https://github.com/deankarn</a></p>","contentLength":14908,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Oliveriver/5d-diplomacy-with-multiverse-time-travel","url":"https://github.com/Oliveriver/5d-diplomacy-with-multiverse-time-travel","date":1739636419,"author":"","guid":418,"unread":true,"content":"<p>5D Diplomacy With Multiverse Time Travel</p><p>A new standard in measuring how galaxy-brained you are, 5D Diplomacy With Multiverse Time Travel combines the classic game of pure negotiation with the modern classic game of pure disorientation. Can you convince your opponent to support an attack in the present while simultaneously backstabbing them five years ago and seven timelines over?</p><p>Inspired by and indebted to the board game <a href=\"https://instructions.hasbro.com/en-us/instruction/avalon-hill-diplomacy-cooperative-strategy-board-game\">Diplomacy</a> and the video game <a href=\"https://www.5dchesswithmultiversetimetravel.com/\">5D Chess With Multiverse Time Travel</a>. Both are excellent in their own right, so we recommend picking up a copy of each to understand the rules for 5D Diplomacy.</p><p> is a trademark of Avalon Hill. <em>5D Chess With Multiverse Time Travel</em> is a trademark of Thunkspace, LLC. <em>5D Diplomacy With Multiverse Time Travel</em> and its creators are not affiliated with either  or <em>5D Chess With Multiverse Time Travel</em>.</p><p>If you find a bug, please raise an <a href=\"https://github.com/Oliveriver/5d-diplomacy-with-multiverse-time-travel/issues\">issue</a>.</p><p>Note that official development of new features has come to an end. Issues requesting new or modified gameplay features will probably be rejected. Only bug fixes, performance improvements, and quality of life adjustments are likely to be accepted as suggestions.</p><p>Feel free to fork this repo and modify the code there if you wish to experiment with more radical changes to the rules or UI. Visit the <a href=\"https://discord.gg/g7TvjPfkVu\">5D Diplomacy Discord server</a> to discuss new rules and theory with others.</p><p>There are currently two options for installing 5D Diplomacy. Use quick installation if you just want to play the game. Use manual installation if you want to make code changes.</p><ul><li>The correct version of <a href=\"https://docker.com/\">Docker</a> for your operating system.</li></ul><ul><li>Open Docker and leave it running.</li><li>Open the CLI for your operating system and navigate inside the folder where you've downloaded this repository. If you don't know how to do this, <a href=\"https://www.freecodecamp.org/news/how-to-use-the-cli-beginner-guide/\">use this tutorial</a>.</li><li>Via the CLI, run the command <code>docker compose build frontend backend</code> and wait for it to complete.</li><li>Via the CLI, run the command  and wait for it to complete.</li><li>Wait an extra few seconds for the server to start up. If you experience errors creating a game in the next step, try waiting longer.</li></ul><p>If you ever update the code (manually or via a pull from this repository), you will need to run <code>docker compose down --rmi local</code>, then run through the steps above again. Note that this may result in the database being wiped.</p><p>To read server logs, run <code>docker compose logs -f backend</code>.</p><p>The game consists of two components, found in the  and  directories. You must set up and run both to play 5D Diplomacy, unless you're connecting to someone else's server or have implemented a custom client.</p><p>The  directory contains the original proof of concept from 2021. None of its contents are required for running the latest version of 5D Diplomacy.</p><ul><li>Navigate to the  directory.</li><li>(Optional) If you want to connect to a custom database, copy  to create a new file in the same directory called <code>appsettings.Development.json</code>. Add your database's connection string as the value for the appropriate provider under , then set the value for  to match the name of the connection string.</li><li>Run one of the following commands, depending on your configuration: \n  <ul><li>If you aren't using a custom database, i.e. if you didn't follow the optional step above, run <code>dotnet ef database update --context SqliteGameContext</code>.</li><li>If you're using a custom SQLite database, run <code>dotnet ef database update --context SqliteGameContext</code>.</li><li>If you're using a custom SQL Server database, run <code>dotnet ef database update --context SqlServerGameContext</code>.</li></ul></li><li>Run  to start the server.</li><li>The server will print its address to the console, likely <a href=\"http://localhost:5000\">http://localhost:5000</a> but it may be different. Note this down for later.</li></ul><p>Note that if you ever update the code with changes that affect the database schema (e.g. if you pull a change from this repository that includes a new migration), you will have to run the appropriate <code>dotnet ef database update</code> command again.</p><ul><li>Navigate to the  directory.</li><li>Copy  to create a new file in the same directory called .</li><li>Inside , replace  with the address of the server noted earlier.</li><li>Run  to start the client in the default browser.</li></ul><p>First see installation instructions above. 5D Diplomacy can be set to run normal games (where seven players join and enter orders individually) or sandbox games (where a single user enters all orders).</p><p>If you wish to play a normal game or let other people see one of your sandbox games, you'll need to expose the domains of your client and/or server (if everyone has set up the client themselves, only a server needs to be exposed). There are various ways to do this, although this guide does not cover them.</p><p>If you modify the code and host a game that others interact with, <strong>you must provide a link to your modified source code to comply with the terms of the AGPL license.</strong> We suggest updating the link to the source code in <code>client/src/components/pages/LandingPage.tsx</code>.</p><p>To create a normal game, one player must choose the new game option from the main menu. They must choose the adjacency setting (see game rules below). After a game has been created, the initiating player enters the game and sees the game ID in the top left corner, which they must copy and send to other players.</p><p>Other players can then use the join game option from the main menu to join with the supplied game ID.</p><p>Note that 5D Diplomacy has no in-built messaging system. Unless you want to play without press, you require a separate program to send and receive press, e.g. a messaging app or voice calls.</p><p>A possible exploit exists when playing multiplayer games. Since 5D Diplomacy has no user logins or verification, a player can join as someone else and enter their orders before them. The alternative - allowing each nation to join only once - would mean players can't rejoin after a break or connection issues. While Diplomacy is a game about breaking trust, you'll simply have to trust players not to be quite this devious.</p><p>To create a sandbox game, select new game from the main menu and choose the sandbox option. Also set the adjacency setting (see game rules below).</p><p>In sandbox mode, turns advance after submission whether all nations have orders or not.</p><p>The rules of 5D Diplomacy generally extend the rules of regular Diplomacy. This guide covers only deviations from the rules of the base game.</p><p>The game world consists of a grid of Diplomacy boards. Each row is a timeline, and each timeline progresses with boards following the standard Diplomacy turns (Spring 1901, then Fall 1901, then Winter 1901, then Spring 1902, etc.).</p><p>At a given time, only units on the active boards (those furthest to the right in each timeline) can have new orders assigned. Other units are locked into their pre-existing orders, which can't be changed, though their resolution can.</p><p>Units in spring or fall turns can be given hold, move, support or convoy orders. These are validated against standard Diplomacy adjacency rules, with extra possibilities for multiverse travel. The adjacency strictness setting (chosen when a new game is created) determines how units can move through the multiverse.</p><p>With strict adjacencies, a unit can move/support/convoy to:</p><ul><li>Any adjacent region on its own board.</li><li>The same region on a different board exactly one timeline up or down, e.g. moving from Paris in Timeline 2 to Paris in Timeline 1.</li><li>The same region on a different board exactly one board in the past, e.g. moving from Berlin in Fall 1901 to Berlin in Spring 1901. Note that moving to winter boards is forbidden and these are skipped when determining board adjacencies, so Spring 1902 is adjacent to Fall 1901.</li><li>Any region it is successfully convoyed to (see below).</li></ul><p>With loose adjacencies, a unit can move/support/convoy to:</p><ul><li>Any adjacent region on its own board.</li><li>The same region on a different board exactly one timeline up or down, or any region adjacent to that region within its board, e.g. moving from Paris in Timeline 2 to Gascony in Timeline 1.</li><li>The same region on a different board exactly one board in the past, or any region adjacent to that region within its board, e.g. moving from Berlin in Fall 1901 to Kiel in Spring 1901. Winter boards are still ignored.</li><li>Any region it is successfully convoyed to (see below).</li></ul><p>In either case, note in particular that movement one board diagonally is not permitted (without a convoy).</p><p>Convoys extend the quirk of standard Diplomacy that allows armies to move an arbitrary distance in a single turn if a chain of convoying fleets exists. Providing each fleet is adjacent to the next and all are ordered to perform the same convoy, an army could go almost anywhere.</p><p>Units are however forbidden from moving into boards that don't exist yet, even with convoys. Convoys and supports though can anticipate a future unit moving back in time, so the player can use the ghost board to enter supports/convoys via an arbitrary location in the multiverse.</p><p>Any units in (spring or fall) boards not assigned orders are given a hold order by default.</p><p>The rule of thumb for adjudication: each time all orders for a turn are submitted, all orders in the entire world are adjudicated together, as if in a single enormous Diplomacy board.</p><p>In particular, new orders could affect a prior resolution of existing orders, e.g. a unit that bounced now has support and so moves successfully. This extends to supports/convoys across time, e.g. convoys that were previously invalid may become valid if the future army appears and performs the expected move.</p><ul><li>If the new resolution matches an existing child board that spawned from this one, then no new timeline splits. So if two units bounced and both receive one new support from their relative future next turn, they still bounce and no new board is created (assuming no other changes elsewhere on this board).</li><li>If the new resolution does not match an existing child board that spawned from this one, a new timeline appears. New timelines always appear below all existing timelines, and are always created in a canonical order (earliest board first; if boards are of equal age, lowest timeline number first).</li></ul><p>Note that this is different to 5D Chess where boards can spawn above or below existing timelines, potentially changing the coordinates of existing boards. There's no concept of a turn belonging to a player in Diplomacy (instead, they belong to everyone simultaneously) and 5D Diplomacy extends this thinking, so timelines spawn in only one direction. Board coordinates also never change.</p><p>Main turns (spring and fall) and winter boards adjudicate simultaneously if all are at the end of their respective timelines. So a player may be creating builds on one board and creating moves on another in the same turn. Though of course these must be kept separate, so building is not permitted on movement boards and vice versa.</p><p>Build/disband counts are per board. If a player controls fewer centres than they have units in one timeline but more in another, the difference does not cancel out: they must disband in the former and may build only in the latter. If they fail to enter enough disbands on a given board, units are removed from that board at random.</p><p>If any board requires retreats, adjudication pauses for all boards without retreats. Retreats may only move to an adjacent region on the same board.</p><p>A player achieves victory under one of the following conditions:</p><ul><li>They are the only player to control at least 18 unique supply centres across all active boards. Unique here means unique by region name, so controlling Serbia in Timeline 1 and Serbia in Timeline 2 counts as only one supply centre.</li><li>If more than one player controls more than 18 unique supply centres, they are the only one with a clear majority. It's possible for two players to reach 18 centres in the same turn, e.g. if they have targeted different timelines.</li></ul><p>As with regular Diplomacy, it's possible for 5D Diplomacy to feature variant maps with completely different region arrangements. Other variants, such as variants with new rules, are not supported.</p><p>Modifying the server to adjudicate custom variants in 5D is simple. First, edit the list of nations in . Then edit the JSON files in the folder  to match the intended board. Any subsequent run of the server will use those to create and adjudicate worlds.</p><ul><li>Modify  to change supply centres and starting/home centres.</li><li>Modify  to change connections between regions.</li><li>Modify  to change regions.</li><li>Modify  to change starting units.</li></ul><p>Modifying the client is tricker as it is much more tied to this particular Diplomacy board. While <code>client/src/data/regions.ts</code> contains the list of regions and associated data, you will also need to replace the SVG files in  and then reference them in <code>client/src/hooks/useRegionSvg.tsx</code>.</p>","contentLength":12562,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"juspay/hyperswitch","url":"https://github.com/juspay/hyperswitch","date":1739636419,"author":"","guid":419,"unread":true,"content":"<p>An open source payments switch written in Rust to make payments fast, reliable and affordable</p><div align=\"center\">\n  Single API to access the payments ecosystem and its features \n</div><a href=\"https://raw.githubusercontent.com/juspay/hyperswitch/main/#introduction\"></a> Juspay, founded in 2012, is a global leader in payment orchestration and checkout solutions, trusted by 400+ leading enterprises and brands worldwide. Hyperswitch is Juspay's new generation of composable, commercial open-source payments platform for merchant and brands. It is an enterprise-grade, transparent and modular payments platform designed to provide digital businesses access to the best payments infrastructure. \n<p>Here are the key components of Hyperswitch that deliver the whole solution:</p><ul><li><p><a href=\"https://github.com/juspay/hyperswitch\">Hyperswitch Backend</a>: Hyperswitch backend enables seamless payment processing with comprehensive support for various payment flows - authorization, authentication, void and capture workflows along with robust management of post-payment processes like refunds and chargeback handling. Additionally, Hyperswitch supports non-payment use cases by enabling connections with external FRM or authentication providers as part of the payment flow. The backend optimizes payment routing with customizable workflows, including success rate-based routing, rule-based routing, volume distribution, fallback handling, and intelligent retry mechanisms for failed payments based on specific error codes.</p></li><li><p><a href=\"https://github.com/juspay/hyperswitch-web\">SDK (Frontend)</a>: The SDK, available for web, <a href=\"https://github.com/juspay/hyperswitch-client-core\">Android, and iOS</a>, unifies the payment experience across various methods such as cards, wallets, BNPL, bank transfers, and more, while supporting the diverse payment flows of underlying PSPs. When paired with the locker, it surfaces the user's saved payment methods.</p></li><li><p><a href=\"https://github.com/juspay/hyperswitch-control-center\">Control Center</a>: The Control Center enables users to manage the entire payments stack without any coding. It allows the creation of workflows for routing, payment retries, and defining conditions to invoke 3DS, fraud risk management (FRM), and surcharge modules. The Control Center provides access to transaction, refund, and chargeback operations across all integrated PSPs, transaction-level logs for initial debugging, and detailed analytics and insights into payment performance.</p></li></ul><a href=\"https://raw.githubusercontent.com/juspay/hyperswitch/main/#architectural-overview\"></a><img src=\"https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/imgs/features.png\"><img src=\"https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/imgs/non-functional-features.png\"><img src=\"https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/imgs/hyperswitch-architecture-v1.png\"><a href=\"https://raw.githubusercontent.com/juspay/hyperswitch/main/#try-hyperswitch\"></a><p>You can run Hyperswitch on your system using Docker compose after cloning this repository.</p><pre><code>git clone --depth 1 --branch latest https://github.com/juspay/hyperswitch\ncd hyperswitch\ndocker compose up -d\n</code></pre><p>Check out the <a href=\"https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/try_local_system.md\">local setup guide</a> for a more details on setting up the entire stack or component wise. This takes 15-mins and gives the following output</p><pre><code>[+] Running 2/2\n✔ hyperswitch-control-center Pulled 2.9s\n✔ hyperswitch-server Pulled 3.0s\n[+] Running 6/0\n\n✔ Container hyperswitch-pg-1 Created 0.0s\n✔ Container hyperswitch-redis-standalone-1 Created 0.0s\n✔ Container hyperswitch-migration_runner-1 Created 0.0s\n✔ Container hyperswitch-hyperswitch-server-1 Created 0.0s\n✔ Container hyperswitch-hyperswitch-web-1 Created 0.0s\n✔ Container hyperswitch-hyperswitch-control-center-1 Created 0.0s\n\nAttaching to hyperswitch-control-center-1, hyperswitch-server-1, hyperswitch-web-1, migration_runner-1, pg-1, redis-standalone-1\n</code></pre><p>The fastest and easiest way to try Hyperswitch on AWS is via our CDK scripts</p><ol><li><p>Click on the following button for a quick standalone deployment on AWS, suitable for prototyping. No code or setup is required in your system and the deployment is covered within the AWS free-tier setup.</p></li><li><p>Sign-in to your AWS console.</p></li><li><p>Follow the instructions provided on the console to successfully deploy Hyperswitch. This takes 30-45mins and gives the following output</p></li></ol><table><tbody><tr><td><code>http://hyperswitch-&lt;host-id.region&gt;.elb.amazonaws.com</code></td></tr><tr><td><code>http://&lt;cloudfront.host-id&gt;/0.103.1/v0/HyperLoader.js</code></td></tr><tr><td>Control center server running on</td><td><code>http://hyperswitch-control-center-&lt;host-id.region&gt;.elb.amazonaws.com</code>, Login with Email: </td></tr><tr><td>Hyperswitch Demo Store running on</td><td><code>http://hyperswitch-sdk-demo-&lt;host-id.region&gt;.elb.amazonaws.com</code></td></tr><tr><td><code>http://hyperswitch-logs-&lt;host-id.region&gt;.elb.amazonaws.com</code>, Login with username: , password: </td></tr></tbody></table><p>We support deployment on GCP and Azure via Helm charts which takes 30-45mins. You can read more at <a href=\"https://docs.hyperswitch.io/hyperswitch-open-source/deploy-on-kubernetes-using-helm\">Hyperswitch docs</a>.</p><p>You can experience the product by signing up for our <a href=\"https://app.hyperswitch.io/\">hosted sandbox</a>. The signup process accepts any email ID and provides access to the entire Control Center. You can set up connectors, define workflows for routing and retries, and even try payments from the dashboard.</p><a href=\"https://raw.githubusercontent.com/juspay/hyperswitch/main/support-feature-requests\"><h2>Support, Feature requests &amp; Bugs</h2></a><p>For any support, join the conversation in <a href=\"https://join.slack.com/t/hyperswitch-io/shared_invite/zt-2jqxmpsbm-WXUENx022HjNEy~Ark7Orw\">Slack</a></p><p>For new product features, enhancements, roadmap discussions, or to share queries and ideas, visit our <a href=\"https://github.com/juspay/hyperswitch/discussions\">GitHub Discussions</a></p><a href=\"https://raw.githubusercontent.com/juspay/hyperswitch/main/our-vision\"></a><p>Payments are evolving rapidly worldwide, with hundreds of processors, fraud detection systems, authentication modules, and new payment methods and flows emerging. Businesses building or managing their own payment stacks often face similar challenges, struggle with comparable issues, and find it hard to innovate at the desired pace.</p><p>Hyperswitch serves as a well-architected designed reference platform, built on best-in-class design principles, empowering businesses to own and customize their payment stack. It provides a reusable core payments stack that can be tailored to specific requirements while relying on the Hyperswitch team for enhancements, support, and continuous innovation.</p><ol><li>Embrace Payments Diversity: It will drive innovation in the ecosystem in multiple ways.</li><li>Make it Open Source: Increases trust; Improves the quality and reusability of software.</li><li>Be community driven: It enables participatory design and development.</li><li>Build it like Systems Software: This sets a high bar for Reliability, Security and Performance SLAs.</li><li>Maximise Value Creation: For developers, customers &amp; partners.</li></ol><p>This project is being created and maintained by <a href=\"https://juspay.io\">Juspay</a></p><a href=\"https://raw.githubusercontent.com/juspay/hyperswitch/main/#versioning\"></a><a href=\"https://raw.githubusercontent.com/juspay/hyperswitch/main/#copyright-and-license\"></a><a href=\"https://raw.githubusercontent.com/juspay/hyperswitch/main/team-behind-hyperswitch\"></a><p>The core team of 150+ engineers building Hyperswitch. Keep up the great work! 🥂</p><a href=\"https://github.com/juspay/hyperswitch/graphs/contributors\"><img src=\"https://contributors-img.web.app/image?repo=juspay/hyperswitch\" alt=\"Contributors\"></a>","contentLength":5742,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"GitHubDaily/GitHubDaily","url":"https://github.com/GitHubDaily/GitHubDaily","date":1739636419,"author":"","guid":420,"unread":true,"content":"<p>坚持分享 GitHub 上高质量、有趣实用的开源技术教程、开发者工具、编程网站、技术资讯。A list cool, interesting projects of GitHub.</p><p>多年以前，我曾看到 GitHub 开源项目作者、全栈工程师 TJ Holowaychunk 说过这么一句话：</p><p>\"I don't read books, never went to school, I just read other people's code and always wonder how things work\"。</p><p>从那时起，我便认为，通过阅读源码，站在前辈的角度上，去思考代码架构与程序逻辑，乃是提升编程技巧最好的方式。</p><p>因此，GitHub 也自然而然的，成为我最喜爱的开发者平台。</p><p>秉着挖掘开源价值的初衷，GitHubDaily 自 2015 年 10 月 10 日正式成立。</p><p>我们希望能通过这一举措，帮助开发者们发现当下最火的开源项目，掌控最新技术动态, 扩大技术视野, 并从开源项目的学习中获得编程能力的提升。</p><p>目前，GitHubDaily 已累积分享超过 8000 个开源项目，内容包括但不限于 GitHub 上的开源技术资料、开发者工具、编程网站以及成熟应用。</p><p>除了 GitHub 之外，我们也开始在下面多个社交媒体平台，帮助开发者传播与分享优质开源项目，挖掘其未来的技术应用前景。</p><p>如果你想接收最新的 GitHub 开源项目资讯，可以关注一下👇</p><blockquote><p>有不错的开源项目，也欢迎到本仓库的 <a href=\"https://github.com/GitHubDaily/GitHubDaily/issues/new\">issues</a> 推荐或自荐项目，我们期待你的分享。</p></blockquote><p>下面是对 GitHubDaily 在 2024 年所推荐的项目进行分类整理，方便大家查找以往分享过的内容。</p>","contentLength":1556,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"cypress-io/cypress","url":"https://github.com/cypress-io/cypress","date":1739636419,"author":"","guid":421,"unread":true,"content":"<p>Fast, easy and reliable testing for anything that runs in a browser.</p><h3 align=\"center\"> The web has evolved. Finally, testing has too. </h3><p align=\"center\"> Fast, easy and reliable testing for anything that runs in a browser. </p><p>Install Cypress for Mac, Linux, or Windows, then <a href=\"https://on.cypress.io/install\">get started</a>.</p><pre><code>npm install cypress --save-dev\n</code></pre><pre><code>pnpm add cypress --save-dev\n</code></pre><p>This project is licensed under the terms of the <a href=\"https://raw.githubusercontent.com/cypress-io/cypress/develop/LICENSE\">MIT license</a>.</p><p>Configure a badge for your project's README to show your test status or test count in the <a href=\"https://www.cypress.io/cloud\">Cypress Cloud</a>.</p><p>Or let the world know your project is using Cypress with the badge below.</p><pre><code>[![Cypress.io](https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg)](https://www.cypress.io/)\n</code></pre>","contentLength":647,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"microsoft/markitdown","url":"https://github.com/microsoft/markitdown","date":1739636419,"author":"","guid":422,"unread":true,"content":"<p>Python tool for converting files and office documents to Markdown.</p><blockquote><p>[!IMPORTANT] MarkItDown 0.0.2 alpha 1 (0.0.2a1) introduces a plugin-based architecture. As much as was possible, command-line and Python interfaces have remained the same as 0.0.1a3 to support backward compatibility. Please report any issues you encounter. Some interface changes may yet occur as we continue to refine MarkItDown to a first non-alpha release.</p></blockquote><p>MarkItDown is a utility for converting various files to Markdown (e.g., for indexing, text analysis, etc). It supports:</p><ul><li>Images (EXIF metadata and OCR)</li><li>Audio (EXIF metadata and speech transcription)</li><li>Text-based formats (CSV, JSON, XML)</li><li>ZIP files (iterates over contents)</li></ul><p>To install MarkItDown, use pip: . Alternatively, you can install it from the source:</p><pre><code>git clone git@github.com:microsoft/markitdown.git\ncd markitdown\npip install -e packages/markitdown\n</code></pre><pre><code>markitdown path-to-file.pdf &gt; document.md\n</code></pre><p>Or use  to specify the output file:</p><pre><code>markitdown path-to-file.pdf -o document.md\n</code></pre><p>You can also pipe content:</p><pre><code>cat path-to-file.pdf | markitdown\n</code></pre><p>MarkItDown also supports 3rd-party plugins. Plugins are disabled by default. To list installed plugins:</p><pre><code>markitdown --list-plugins\n</code></pre><pre><code>markitdown --use-plugins path-to-file.pdf\n</code></pre><p>To find available plugins, search GitHub for the hashtag . To develop a plugin, see <code>packages/markitdown-sample-plugin</code>.</p><h3>Azure Document Intelligence</h3><p>To use Microsoft Document Intelligence for conversion:</p><pre><code>markitdown path-to-file.pdf -o document.md -d -e \"&lt;document_intelligence_endpoint&gt;\"\n</code></pre><p>More information about how to set up an Azure Document Intelligence Resource can be found <a href=\"https://learn.microsoft.com/en-us/azure/ai-services/document-intelligence/how-to-guides/create-document-intelligence-resource?view=doc-intel-4.0.0\">here</a></p><pre><code>from markitdown import MarkItDown\n\nmd = MarkItDown(enable_plugins=False) # Set to True to enable plugins\nresult = md.convert(\"test.xlsx\")\nprint(result.text_content)\n</code></pre><p>Document Intelligence conversion in Python:</p><pre><code>from markitdown import MarkItDown\n\nmd = MarkItDown(docintel_endpoint=\"&lt;document_intelligence_endpoint&gt;\")\nresult = md.convert(\"test.pdf\")\nprint(result.text_content)\n</code></pre><p>To use Large Language Models for image descriptions, provide  and :</p><pre><code>from markitdown import MarkItDown\nfrom openai import OpenAI\n\nclient = OpenAI()\nmd = MarkItDown(llm_client=client, llm_model=\"gpt-4o\")\nresult = md.convert(\"example.jpg\")\nprint(result.text_content)\n</code></pre><pre><code>docker build -t markitdown:latest .\ndocker run --rm -i markitdown:latest &lt; ~/your-file.pdf &gt; output.md\n</code></pre><p>This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit <a href=\"https://cla.opensource.microsoft.com\">https://cla.opensource.microsoft.com</a>.</p><p>When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.</p><p>You can help by looking at issues or helping review PRs. Any issue or PR is welcome, but we have also marked some as 'open for contribution' and 'open for reviewing' to help facilitate community contributions. These are ofcourse just suggestions and you are welcome to contribute in any way you like.</p><ul><li><p>Navigate to the MarkItDown package:</p></li><li><p>Install  in your environment and run tests:</p><pre><code>pip install hatch  # Other ways of installing hatch: https://hatch.pypa.io/dev/install/\nhatch shell\nhatch test\n</code></pre><p>(Alternative) Use the Devcontainer which has all the dependencies installed:</p><pre><code># Reopen the project in Devcontainer and run:\nhatch test\n</code></pre></li><li><p>Run pre-commit checks before submitting a PR: <code>pre-commit run --all-files</code></p></li></ul><h3>Contributing 3rd-party Plugins</h3><p>You can also contribute by creating and sharing 3rd party plugins. See <code>packages/markitdown-sample-plugin</code> for more details.</p><p>This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow <a href=\"https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general\">Microsoft's Trademark &amp; Brand Guidelines</a>. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies.</p>","contentLength":4183,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"codecrafters-io/build-your-own-x","url":"https://github.com/codecrafters-io/build-your-own-x","date":1739636419,"author":"","guid":423,"unread":true,"content":"<p><em>What I cannot create, I do not understand — Richard Feynman.</em></p>","contentLength":62,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"zaidmukaddam/scira","url":"https://github.com/zaidmukaddam/scira","date":1739636419,"author":"","guid":424,"unread":true,"content":"<p>Scira (Formerly MiniPerplx) is a minimalistic AI-powered search engine that helps you find information on the internet. Powered by Vercel AI SDK! Search with models like Grok 2.0.</p><p>A minimalistic AI-powered search engine that helps you find information on the internet.</p><ul><li><a href=\"https://tavily.com\">Tavily AI</a> - For search grounding and web search capabilities</li></ul><ul><li>: Get answers to your questions using Anthropic's Models.</li><li>: Search the web using Tavily's API.</li><li>: Get information from a specific URL.</li><li>: Get the current weather for any location using OpenWeather's API.</li><li>: Run code snippets in multiple languages using E2B's API.</li><li>: Get the location of any place using Google Maps API, Mapbox API, and TripAdvisor API.</li><li>: Track flights using AviationStack's API.</li><li><strong>Trending Movies and TV Shows</strong>: Get information about trending movies and TV shows.</li><li>: Get information about any movie or TV show.</li></ul><h2>Set Scira as your default search engine</h2><ol><li><p><strong>Open the Chrome browser settings</strong>:</p><ul><li>Click on the three vertical dots in the upper right corner of the browser.</li><li>Select \"Settings\" from the dropdown menu.</li></ul></li><li><p><strong>Go to the search engine settings</strong>:</p><ul><li>In the left sidebar, click on \"Search engine.\"</li><li>Then select \"Manage search engines and site search.\"</li></ul></li><li><ul><li>Click on \"Add\" next to \"Site search.\"</li></ul></li><li><p><strong>Set the search engine name</strong>:</p><ul><li>Enter  in the \"Search engine\" field.</li></ul></li><li><p><strong>Set the search engine URL</strong>:</p><ul><li>Enter  in the \"URL with %s in place of query\" field.</li></ul></li><li><p><strong>Set the search engine shortcut</strong>:</p><ul><li>Enter  in the \"Shortcut\" field.</li></ul></li><li><ul><li>Click on the three dots next to the search engine you just added.</li><li>Select \"Make default\" from the dropdown menu.</li></ul></li></ol><p>After completing these steps, you should be able to use Scira as your default search engine in Chrome.</p><p>To run the example locally you need to:</p><ol><li>Sign up for accounts with the AI providers you want to use. OpenAI and Anthropic are required, Tavily is required for the web search feature.</li><li>Obtain API keys for each provider.</li><li>Set the required environment variables as shown in the  file, but in a new file called .</li><li> to install the required dependencies.</li><li> to launch the development server.</li></ol><p>This project is licensed under the MIT License - see the <a href=\"https://raw.githubusercontent.com/zaidmukaddam/scira/main/LICENSE\">LICENSE</a> file for details.</p>","contentLength":2064,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"kuchin/awesome-cto","url":"https://github.com/kuchin/awesome-cto","date":1739636419,"author":"","guid":425,"unread":true,"content":"<p>— Hello, my name is Dima and I'm a CTO</p>","contentLength":40,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"golang/go","url":"https://github.com/golang/go","date":1739636419,"author":"","guid":426,"unread":true,"content":"<p>The Go programming language</p><p>Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.</p><p>Unless otherwise noted, the Go source files are distributed under the BSD-style license found in the LICENSE file.</p><p>If a binary distribution is not available for your combination of operating system and architecture, visit <a href=\"https://go.dev/doc/install/source\">https://go.dev/doc/install/source</a> for source installation instructions.</p><p>Go is the work of thousands of contributors. We appreciate your help!</p><p>Note that the Go project uses the issue tracker for bug reports and proposals only. See <a href=\"https://go.dev/wiki/Questions\">https://go.dev/wiki/Questions</a> for a list of places to ask questions about the Go language.</p>","contentLength":677,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Zipstack/unstract","url":"https://github.com/Zipstack/unstract","date":1739636419,"author":"","guid":427,"unread":true,"content":"<p>No-code LLM Platform to launch APIs and ETL Pipelines to structure unstructured documents</p><p>Prompt Studio's primary reason for existence is so you can develop the necessary prompts for document data extraction super efficiently. It is a purpose-built environment that makes this not just easy for you—but, lot of fun! The document sample, its variants, the prompts you're developing, outputs from different LLMs, the schema you're developing, costing details of the extraction and various tools that let you measure the effectiveness of your prompts are just a click away and easily accessible. Prompt Studio is designed for effective and high speed development and iteration of prompts for document data extraction. Welcome to IDP 2.0!</p><h2>🧘‍♀️ Three step nirvana with Workflow Studio</h2><p>Automate critical business processes that involve complex documents with a human in the loop. Go beyond RPA with the power of Large Language Models.</p><p>🌟 : Add documents to no-code Prompt Studio and do prompt engineering to extract required fields  🌟 : Configure Prompt Studio project as API deployment or configure input source and output destination for ETL Pipeline 🌟 : Deploy Workflows as unstructured data APIs or unstructured data ETL Pipelines!</p><ul><li>Linux or MacOS (Intel or M-series)</li><li>Docker Compose (if you need to install it separately)</li></ul><p>Next, either download a release or clone this repo and do the following:</p><p>That's all there is to it!</p><p>Follow <a href=\"https://raw.githubusercontent.com/Zipstack/unstract/main/backend/README.md#authentication\">these steps</a> to change the default username and password.</p><p>See <a href=\"https://docs.unstract.com/unstract/unstract_platform/user_guides/run_platform\">user guide</a> for more details on managing the platform. Another really quick way to experience Unstract is by signing up for our <a href=\"https://us-central.unstract.com/\">hosted version</a>. It comes with a 14 day free trial!</p><p>Unstract comes well documented. You can get introduced to the <a href=\"https://docs.unstract.com/unstract/\">basics of Unstract</a>, and <a href=\"https://docs.unstract.com/unstract/unstract_platform/setup_accounts/whats_needed\">learn how to connect</a> various systems like LLMs, Vector Databases, Embedding Models and Text Extractors to it. The easiest way to wet your feet is to go through our <a href=\"https://docs.unstract.com/unstract/unstract_platform/quick_start\">Quick Start Guide</a> where you actually get to do some prompt engineering in Prompt Studio and launch an API to structure varied credit card statements!</p><p>Contributions are welcome! Please see <a href=\"https://raw.githubusercontent.com/Zipstack/unstract/main/CONTRIBUTING.md\">CONTRIBUTING.md</a> for further details to get started easily.</p><h2>👋 Join the LLM-powered automation community</h2><p>Do copy the value of  config in either  or  file to a secure location.</p><p>Adapter credentials are encrypted by the platform using this key. Its loss or change will make all existing adapters inaccessible!</p><p>In full disclosure, Unstract integrates Posthog to track usage analytics. As you can inspect the relevant code here, we collect the minimum possible metrics. Posthog can be disabled if desired by setting  to  in the frontend's .env file.</p>","contentLength":2651,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null}],"tags":["trending"]}