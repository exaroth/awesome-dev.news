{"id":"5yA","title":"AI","displayTitle":"AI","url":"","feedLink":"","isQuery":true,"isEmpty":false,"isHidden":false,"itemCount":130,"items":[{"title":"Mixture of Experts Makes Text Models Smarter: New Research Shows Better Language Understanding","url":"https://dev.to/mikeyoung44/mixture-of-experts-makes-text-models-smarter-new-research-shows-better-language-understanding-2bji","date":1739782574,"author":"Mike Young","guid":1692,"unread":true,"content":"<ul><li>Research explores combining Mixture of Experts (MoE) with text embeddings</li><li>Focuses on improving multilingual capabilities in language models</li><li>Addresses efficiency and quality trade-offs in text representation</li><li>Examines specialized expert networks for different language tasks</li></ul><h2>\n  \n  \n  Plain English Explanation\n</h2><p>Text embedding models turn words and sentences into numbers that computers can understand. Think of it like translating languages - each word gets converted into a special code. But doing this well for many languages at once is hard.</p><p>This paper suggests using a [mixture of exp...</p>","contentLength":583,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"AI Models' Reasoning Skills Don't Easily Transfer to Finance, Study Shows","url":"https://dev.to/mikeyoung44/ai-models-reasoning-skills-dont-easily-transfer-to-finance-study-shows-4b9a","date":1739782537,"author":"Mike Young","guid":1691,"unread":true,"content":"<ul><li>Research evaluates transfer of reasoning capabilities from general-purpose Large Language Models (LLMs) to finance domain</li><li>Tests models fine-tuned on reasoning tasks in financial applications</li><li>Introduces Fino1 benchmark for financial reasoning assessment </li><li>Examines performance of models like GPT-4, Claude and PaLM</li><li>Shows limitations in direct transfer of reasoning skills to finance</li></ul><h2>\n  \n  \n  Plain English Explanation\n</h2><p><a href=\"https://aimodels.fyi/papers/arxiv/fine-tuning-smaller-language-models-question-answering\" rel=\"noopener noreferrer\">Fine-tuning language models</a> for reasoning doesn't automatically make them better at financial tasks. Think of it like teaching someone general problem-solving skills - just because they'...</p>","contentLength":600,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"AI vs. Detective: How Well Can Language Models Solve Murder Mysteries?","url":"https://dev.to/mikeyoung44/ai-vs-detective-how-well-can-language-models-solve-murder-mysteries-aif","date":1739782501,"author":"Mike Young","guid":1690,"unread":true,"content":"<ul><li>New benchmark dataset called  for testing AI systems on mystery story comprehension</li><li>Contains 200 carefully curated mystery stories with identified culprits </li><li>Tests language models' ability to identify perpetrators and follow complex narratives</li><li>Evaluates both direct culprit detection and reasoning about evidence</li><li>Performance tested across multiple large language models like GPT-4 and Claude</li></ul><h2>\n  \n  \n  Plain English Explanation\n</h2><p><a href=\"https://aimodels.fyi/papers/arxiv/whodunit-evaluation-benchmark-culprit-detection-mystery-stories\" rel=\"noopener noreferrer\">Mystery story analysis</a> presents a unique challenge for artificial intelligence. Much like how humans piece together clues to solve a mystery, AI systems need to track characters...</p>","contentLength":601,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"AI Breakthrough: Universal Translator Links Images and 100+ Languages with Record Accuracy","url":"https://dev.to/mikeyoung44/ai-breakthrough-universal-translator-links-images-and-100-languages-with-record-accuracy-31hk","date":1739782465,"author":"Mike Young","guid":1689,"unread":true,"content":"<ul><li>New  model improves multilingual and multimodal embeddings using synthetic data</li><li>Creates high-quality training pairs across 100+ languages and image-text combinations</li><li>Achieves state-of-the-art performance on cross-lingual and cross-modal retrieval tasks</li><li>Uses text-to-text and image-to-text generation to expand training data</li><li>Builds on previous E5 embedding models with enhanced multilingual capabilities</li></ul><h2>\n  \n  \n  Plain English Explanation\n</h2><p>The mmE5 system tackles a common challenge in AI - making computers understand connections between different languages and images. Think of it like teaching a computer to be a universal translator that can match pictures with descriptions in any language.</p>","contentLength":688,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"New AI Safety System Improves Language Model Safety by 25% Without Retraining","url":"https://dev.to/mikeyoung44/new-ai-safety-system-improves-language-model-safety-by-25-without-retraining-580d","date":1739782429,"author":"Mike Young","guid":1688,"unread":true,"content":"<ul><li>MetaSC optimizes AI safety specifications during runtime</li><li>Addresses challenge of making language models safer without retraining</li><li>Uses gradient-based optimization to improve safety constraints</li><li>Demonstrates effectiveness across multiple language models and safety benchmarks</li><li>Achieves 20-30% improvement in safety metrics while maintaining model performance</li></ul><h2>\n  \n  \n  Plain English Explanation\n</h2><p>Think of MetaSC like installing guardrails on a highway while cars are still driving. Traditional AI safety methods require rebuilding the entire road, but MetaSC adds safety features while the AI system runs.</p><p>The system works by continuously checking if the AI's responses mig...</p>","contentLength":663,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"New Audio Defense Blocks 98% of Voice Deepfakes While Maintaining Natural Speech Quality","url":"https://dev.to/mikeyoung44/new-audio-defense-blocks-98-of-voice-deepfakes-while-maintaining-natural-speech-quality-3oh4","date":1739782393,"author":"Mike Young","guid":1687,"unread":true,"content":"<ul><li>VocalCrypt protects voice recordings from deepfake manipulation</li><li>Uses acoustic masking to disrupt AI voice cloning</li><li>Maintains audio quality while preventing unauthorized copying</li><li>Achieves 98% success rate in blocking voice synthesis attacks</li><li>Preserves natural speech intelligibility for human listeners</li></ul><h2>\n  \n  \n  Plain English Explanation\n</h2><p><a href=\"https://aimodels.fyi/papers/arxiv/can-deepfake-speech-be-reliably-detected\" rel=\"noopener noreferrer\">Voice deepfakes</a> have become a serious security threat. Bad actors can clone someone's voice from just a few seconds of audio. VocalCrypt offers a solution by adding subtle acoustic masking to voice re...</p>","contentLength":532,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"AI Creates Cinematic Videos from Text with Advanced 3D Camera Control","url":"https://dev.to/mikeyoung44/ai-creates-cinematic-videos-from-text-with-advanced-3d-camera-control-onk","date":1739782356,"author":"Mike Young","guid":1686,"unread":true,"content":"<ul><li>Introduces , a new AI framework for creating cinematic videos from text descriptions</li><li>Combines 3D awareness with precise camera and motion control </li><li>Generates high-quality videos with consistent camera movements</li><li>Uses novel multi-stage architecture for better temporal consistency</li><li>Achieves state-of-the-art results in text-to-video generation</li></ul><h2>\n  \n  \n  Plain English Explanation\n</h2><p>CineMaster works like a virtual movie director. When given a text description, it first creates a mental picture of the 3D scene, then plans how the camera should move around it, and finally generates a smooth video that follows this plan.</p><p>Think of it like planning a movie sho...</p>","contentLength":649,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"AI Breakthrough Reduces Bias in Medical Survival Predictions by 40%","url":"https://dev.to/mikeyoung44/ai-breakthrough-reduces-bias-in-medical-survival-predictions-by-40-3lpe","date":1739782320,"author":"Mike Young","guid":1685,"unread":true,"content":"<ul><li>New method for handling censored data in survival analysis and medical research</li><li>Addresses bias in traditional statistical approaches when censoring depends on outcomes</li><li>Introduces <strong>Censor Dependent Variational Inference (CDVI)</strong> framework</li><li>Improves prediction accuracy for patient survival times and treatment outcomes</li><li>Combines deep learning with statistical theory for robust modeling</li></ul><h2>\n  \n  \n  Plain English Explanation\n</h2><p>Medical researchers often study how long patients survive after treatment. Sometimes they lose track of patients before knowing their final outcome - this is called censoring. Traditional methods assume this loss of follow-up happens randomly, but in reality, sicker patients mi...</p>","contentLength":692,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Hidden Image Generation Powers Found Inside AI Recognition Systems","url":"https://dev.to/mikeyoung44/hidden-image-generation-powers-found-inside-ai-recognition-systems-ojb","date":1739782284,"author":"Mike Young","guid":1684,"unread":true,"content":"<ul><li>Novel technique called Direct Ascent Synthesis (DAS) extracts generative capabilities from discriminative models</li><li>Transforms discriminative neural networks into image generators without additional training</li><li>Achieves high-quality image synthesis through gradient-based optimization</li><li>Works with pre-trained classification networks and vision transformers</li><li>Demonstrates competitive results compared to traditional generative models</li></ul><h2>\n  \n  \n  Plain English Explanation\n</h2><p><a href=\"https://aimodels.fyi/papers/arxiv/direct-ascent-synthesis-revealing-hidden-generative-capabilities\" rel=\"noopener noreferrer\">Direct Ascent Synthesis</a> is like discovering that your microscope can also work as a projector. The research shows that neural networks trained to recognize images can also crea...</p>","contentLength":634,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"AI Image Generation 30-50% Faster with New Adaptive Sampling Method","url":"https://dev.to/mikeyoung44/ai-image-generation-30-50-faster-with-new-adaptive-sampling-method-4kfj","date":1739782248,"author":"Mike Young","guid":1683,"unread":true,"content":"<ul><li>New adaptive sampling method for diffusion transformers </li><li><strong>Region-Adaptive Sampling (RAS)</strong> dynamically adjusts attention based on image regions</li><li>Reduces computation costs by 30-50% without quality loss</li><li>Works with various diffusion transformer architectures</li><li>Improves efficiency through selective attention allocation</li></ul><h2>\n  \n  \n  Plain English Explanation\n</h2><p>Imagine a painter who focuses more attention on detailed areas of a canvas while using broader strokes for simpler regions. <a href=\"https://aimodels.fyi/papers/arxiv/region-adaptive-sampling-diffusion-transformers\" rel=\"noopener noreferrer\">Region-Adaptive Sampling</a> works similarly for AI image generation. The...</p>","contentLength":538,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Guide on Healthcare e-Commerce: Features, Challenges & Opportunities","url":"https://dev.to/phyniks/guide-on-healthcare-e-commerce-features-challenges-opportunities-23em","date":1739782237,"author":"Phyniks","guid":1682,"unread":true,"content":"<p>The healthcare industry is at a crossroads. As consumer behavior shifts towards convenience and personalization, traditional healthcare providers are finding it harder to keep up with expectations. For startups eyeing a slice of this market, healthcare e-commerce offers a game-changing opportunity. But with great opportunities come challenges like compliance, trust, and logistics. How can startups navigate this complex yet rewarding landscape?</p><h2>\n  \n  \n  What is Healthcare E-Commerce?\n</h2><p>Healthcare e-commerce refers to the online marketplace where medical products, services, and healthcare solutions are transacted. From purchasing prescription medicines to booking telemedicine appointments, it covers a wide spectrum of services.</p><p>Unlike other sectors, e-commerce in healthcare doesn’t just prioritize convenience; it’s about accessibility, trust, and improving health outcomes. Examples of successful healthcare e-commerce platforms include:</p><ul><li>1mg and Medlife for medicine delivery.</li><li>Zocdoc and Practo for telemedicine consultations.</li><li>HealthKart for wellness and fitness products.</li></ul><p>The growth of <a href=\"https://phyniks.com/application-development-services-company\" rel=\"noopener noreferrer\">healthcare custom apps</a> has further propelled this sector, enabling startups to deliver personalized and efficient healthcare solutions.</p><h3>\n  \n  \n  Why Startups Should Care About Healthcare E-Commerce\n</h3><p>In many developed countries, healthcare systems are saturated but often outdated. In developing nations, access to quality healthcare remains a struggle. Healthcare e-commerce bridges these gaps by providing scalable, tech-driven solutions.</p><p>Today's patients are informed and prefer convenience. They expect to order medical products or consult doctors from their smartphones. This demand has fueled the rise of <a href=\"https://phyniks.com/application-development-services-company\" rel=\"noopener noreferrer\">healthcare custom apps</a> tailored for these needs.</p><p>The global healthcare e-commerce market is growing exponentially, driven by innovations in telemedicine and health product marketplaces. Startups that act now can ride this wave and establish themselves as industry leaders.</p><h3>\n  \n  \n  Key Categories of Healthcare E-Commerce Firms\n</h3><p><strong>1. Online Pharmacies: Transforming Medicine Distribution</strong></p><p>The rise of online pharmacies is perhaps one of the most significant transformations in e-commerce in healthcare. Startups can now offer prescription and over-the-counter medications to consumers directly through a digital platform. With examples like Medlife, 1mg, and PillPack, the demand for online medicine retail is soaring, driven by the convenience of home delivery and easy access.</p><p>For startups, establishing an online pharmacy platform can serve a dual purpose: meeting consumer demand for convenience while also addressing critical access gaps in underserved areas. This category offers ample room for healthcare custom apps that streamline prescriptions, medicine reminders, and even virtual consultations with licensed professionals.</p><p><strong>2. Telemedicine Platforms: Remote Healthcare Services</strong></p><p>Telemedicine is another booming category within healthcare e-commerce. Platforms like Practo and Zocdoc are connecting patients with doctors remotely, eliminating the need for in-person visits. For startups, telemedicine presents an attractive business model that capitalizes on the growing trend of virtual healthcare.</p><p>With the power of video conferencing and mobile apps, a startup could build a telemedicine platform tailored to specific niches—whether it’s mental health services, chronic care management, or general medical advice. Telemedicine not only ensures that patients have greater access to healthcare but also opens up new revenue streams for businesses in the healthcare e-commerce space.</p><p>For real estate startups, this could be an interesting opportunity to combine e-commerce in healthcare with physical spaces, offering consultation services in combination with virtual solutions.</p><p><strong>3. Health Product Marketplaces: A One-Stop Shop for Wellness</strong></p><p>A growing trend in healthcare e-commerce is the development of health product marketplaces. These platforms, like HealthKart and Amazon Healthcare, allow consumers to purchase a variety of health-related products, from medical equipment to fitness supplements.</p><p>Startups can create specialized health product marketplaces focused on specific sectors like fitness, wellness, or chronic disease management. The key to success in this space lies in offering high-quality products along with a seamless e-commerce experience. Building a healthcare custom app can be a great way to enable customers to browse, compare, and purchase products easily, while also offering features like subscription models or personalized recommendations based on health goals.</p><p>By focusing on niche markets within the broader health product category, startups can cater to specific customer needs, thus increasing customer loyalty and repeat business.</p><p><strong>4. Chronic Care Management: Subscription Models for Long-Term Health</strong></p><p>Chronic care management is a rapidly growing segment within healthcare e-commerce, especially for patients managing conditions like diabetes or hypertension. Subscription models allow patients to receive ongoing care, medications, and monitoring tools delivered to their doorsteps.</p><p>Startups offering chronic care management services can tap into this need by providing convenient, subscription-based healthcare solutions. These services can include access to medical devices, regular health check-ins, medication refills, and consultations, all via a <a href=\"https://phyniks.com/application-development-services-company\" rel=\"noopener noreferrer\">healthcare custom app</a>.</p><p>For healthcare startups, focusing on chronic conditions can yield long-term relationships with customers and steady revenue streams. This category also provides opportunities to integrate wearables and health monitoring devices, further enhancing patient care and engagement.</p><p><strong>5. Wellness and Preventive Healthcare: A Focus on Holistic Health</strong></p><p>Another exciting category within healthcare e-commerce is wellness and preventive healthcare. Startups can create platforms that offer products and services aimed at improving overall health, such as fitness equipment, dietary plans, and mental health tools.</p><p>As consumers increasingly prioritize their well-being, the demand for wellness products continues to grow. A startup could focus on creating a marketplace for fitness products, wellness supplements, or mental health resources. These platforms can also integrate healthcare custom apps that provide personalized recommendations and support for users seeking healthier lifestyles.</p><p>This category not only focuses on prevention but also emphasizes the need for startups to offer convenience and accessibility through e-commerce channels.</p><p><strong>6. B2B Medical Supplies: Supporting Healthcare Institutions</strong></p><p>Finally, B2B medical supplies is another growing category within healthcare e-commerce, especially for startups looking to cater to hospitals, clinics, and healthcare facilities. This market involves supplying medical equipment, pharmaceuticals, and other health-related products in bulk.</p><p>Startups can build platforms that connect healthcare institutions with trusted suppliers. By offering competitive prices, high-quality products, and reliable delivery systems, businesses can carve out a strong presence in the healthcare e-commerce industry. Additionally, B2B platforms can incorporate features like subscription models or automated inventory management, making the process smoother for both buyers and sellers.</p><h3>\n  \n  \n  Why should startups dive into healthcare e-commerce?\n</h3><p>*\nThe healthcare e-commerce industry is expanding rapidly, driven by the increasing adoption of digital platforms. Consumers are now looking for online pharmacies, telemedicine services, and wellness product marketplaces, making it a prime market for innovation.</p><p>\nStartups can scale quickly by tapping into online platforms that don’t require large physical infrastructure. Whether it's through offering telemedicine, wellness products, or prescription medications, businesses can start small and expand as demand grows.</p><p>\nThe integration of advanced technologies such as healthcare custom apps, telemedicine, and AI-driven solutions allows startups to bring innovative solutions to the market. With the right tech, startups can build platforms that meet the evolving needs of consumers, making the market ripe for disruption.</p><p><strong>Reduced Barriers to Entry:</strong>\nCompared to traditional healthcare businesses, starting an online healthcare platform requires lower upfront investments. E-commerce platforms are often easier and less expensive to set up, making healthcare more accessible to startups in both developed and developing markets.</p><h3>\n  \n  \n  Essential Features of a Healthcare E-Commerce Platform\n</h3><p>Building a successful healthcare e-commerce platform is not just about selling products or services; it’s about creating an experience that users trust and rely on. To build a platform that stands out in a competitive market, certain features are non-negotiable:</p><h3>\n  \n  \n  Challenges in Healthcare E-Commerce\n</h3><p>While the potential is high, e-commerce in healthcare comes with its own set of challenges that startups need to address:</p><p><strong>Legal &amp; Compliance Hurdles</strong>: One of the biggest challenges in the healthcare e-commerce industry is navigating the complex web of legal and compliance regulations. Different regions have varying rules regarding the sale of medical products, telemedicine, and data protection. Startups need to ensure their platform adheres to these regulations to avoid legal complications.</p><p><strong>Building Trust with Consumers:</strong> Trust is a major factor in healthcare e-commerce. Consumers must feel confident that the products they’re buying are genuine, that the telemedicine services are provided by licensed professionals, and that their personal data is protected. Building this trust takes time, but it can be done through transparency, strong customer support, and certifications from health authorities.</p><p> Healthcare products often need to be delivered quickly and securely, especially in rural areas where access to physical healthcare facilities may be limited. Logistics, therefore, becomes a significant challenge for startups. Ensuring timely and safe delivery of medications or medical equipment is essential to customer satisfaction.\nStrategies for Success in Healthcare E-Commerce</p><p>To stand out in the healthcare e-commerce space, startups need to focus on a few key strategies to ensure long-term success:</p><p><strong>Develop a Mobile-First Experience:</strong> A large portion of users now access healthcare services through their smartphones. As mobile usage continues to rise, startups must prioritize a mobile-first approach for their platforms. A mobile-friendly design ensures that users can easily access services like telemedicine consultations, prescription refills, or wellness product purchases on the go.</p><p><strong>Leverage AI &amp; Data Analytics:</strong> Startups can leverage AI and data analytics to offer personalized healthcare experiences. By tracking user behavior and preferences, startups can offer customized recommendations for medications, health plans, or fitness routines. Personalization can drive higher engagement, repeat business, and customer satisfaction.</p><p><strong>Build Strategic Partnerships</strong>: Collaborating with healthcare providers, pharmacies, or wellness experts can help expand the reach of your platform. These partnerships can help startups gain credibility, tap into new customer bases, and provide a broader range of services.</p><h3>\n  \n  \n  Future Trends in Healthcare E-commerce\n</h3><p>As the healthcare industry continues to evolve, healthcare e-commerce is experiencing rapid growth, driven by technological advancements and changing consumer expectations. Startups in both developed and developing markets have the opportunity to leverage these trends to build innovative platforms that offer better services and greater efficiency. Here’s a look at some of the most significant trends shaping the future of e-commerce in healthcare:</p><p><strong>1. Integration of AI, IoT, and Blockchain</strong></p><p>The integration of AI, the Internet of Things (IoT), and blockchain technology is set to revolutionize healthcare e-commerce. These technologies are enhancing the efficiency of healthcare delivery, improving patient outcomes, and simplifying transactions.</p><p>AI: <a href=\"https://phyniks.com/ai-software-development-services-company\" rel=\"noopener noreferrer\">Artificial Intelligence</a> is being used for personalized healthcare experiences, recommending the best treatments or medications based on patient data. AI can also optimize inventory management, ensuring that products are stocked according to demand, thus reducing waste and improving the customer experience.</p><p>IoT: The <a href=\"https://phyniks.com/emerging-technologies-solutions\" rel=\"noopener noreferrer\">IoT solution</a> is enabling real-time data collection from devices like wearables, providing insights into a patient’s health status. This data can be integrated into e-commerce platforms, creating a seamless connection between the patient’s physical health and their digital healthcare journey.\nBlockchain: Blockchain ensures the security and transparency of patient data, making e-commerce platforms more trustworthy. It can be used to verify the authenticity of health products, offering consumers peace of mind that they’re purchasing from reliable sources.</p><p><strong>2. Growth of Cross-Border E-commerce</strong></p><p>One of the most exciting trends in healthcare e-commerce is the growth of cross-border shopping. As more consumers demand access to healthcare products and services from around the world, cross-border e-commerce has become a key growth area. Startups in healthcare have the opportunity to tap into international markets, expanding their reach beyond local boundaries.</p><p>For example, consumers in developing countries are increasingly turning to online pharmacies or health product marketplaces in developed countries for access to quality products. E-commerce platforms are making it easier for these consumers to access medications and health products that may not be available locally. This global accessibility is creating new revenue streams and fostering innovation in how products are distributed worldwide.</p><p>To capitalize on this trend, startups should focus on ensuring their healthcare custom app is designed for seamless international transactions, including offering multi-currency and multi-language options. Additionally, partnerships with global logistics providers can ensure timely and reliable delivery of healthcare products across borders.</p><p><strong>3. The Shift Towards Holistic Healthcare Platforms</strong></p><p>Another key trend is the shift towards holistic healthcare platforms that combine physical and digital services. Consumers are increasingly looking for platforms that not only provide products but also integrate digital healthcare services like telemedicine, wellness consultations, and chronic disease management.</p><p>Telemedicine Platforms: These platforms allow patients to consult with healthcare providers remotely, making healthcare more accessible, especially in regions with limited access to in-person services.</p><p>Chronic Care Management: Subscription models for managing chronic conditions, such as diabetes and hypertension, are becoming more popular. These models provide ongoing support and medication, offering a more personalized approach to patient care.</p><p>By combining these services into a single platform, healthcare e-commerce providers can offer a comprehensive solution that meets the diverse needs of today’s healthcare consumers. The future of e-commerce in healthcare lies in creating these all-in-one solutions that bridge the gap between physical and digital healthcare services.</p><p>The future of healthcare e-commerce is filled with exciting opportunities, driven by technological advancements and changing consumer expectations. By staying on top of trends like AI integration, cross-border e-commerce, and the shift toward holistic platforms, startups can build innovative, scalable solutions that meet the needs of the modern healthcare consumer.</p><p>With the right approach, these technology will help healthcare startups establish themselves as leaders in the growing e-commerce space, creating new opportunities for growth and success in an increasingly digital world.</p><p>If you're ready to take advantage of the growing healthcare e-commerce trends and need a trusted partner to help you develop a tailored solution, our software development firm is here to bring your vision to life. Let's work together to create an innovative platform that meets the needs of today’s digital healthcare landscape. <a href=\"https://phyniks.com/contact-us\" rel=\"noopener noreferrer\">Contact us today to get started</a>!</p>","contentLength":16259,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Robot AI with Memory Makes Complex Tasks 45% More Successful","url":"https://dev.to/mikeyoung44/robot-ai-with-memory-makes-complex-tasks-45-more-successful-3ko6","date":1739782212,"author":"Mike Young","guid":1681,"unread":true,"content":"<ul><li>New AI agent called STMA that helps robots complete complex tasks by remembering spatial and temporal information</li><li>Combines memory storage with planning abilities for extended task sequences</li><li>Demonstrates improved performance on household tasks compared to existing methods</li><li>Uses neural networks to integrate memory with decision making</li><li>Tested successfully in simulated home environments</li></ul><h2>\n  \n  \n  Plain English Explanation\n</h2><p>STMA is like giving a robot both a good memory and the ability to plan ahead. Just as humans remember where objects are in their home and what steps they've already taken when cooking a meal, STMA helps robots keep track of important information while working on tasks.</p>","contentLength":684,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Deploy and use DeepSeek R1 with Azure and .NET","url":"https://dev.to/uveta/deploy-and-use-deepseek-r1-with-azure-and-net-1fh6","date":1739778157,"author":"Uroš Miletić","guid":1659,"unread":true,"content":"<ul><li>Deploy DeepSeek R1 on Azure AI Foundry</li><li>Consume from Semantic Kernel</li></ul><p>DeepSeek models have taken technological world by surprise, demonstrating that cutting-edge AI development is no longer confined to the certain valley made out of silicon, but has become a global phenomenon. Although Microsoft has traditionally partnered with OpenAI, the users of its technologies still have reasons to be optimistic. The Azure cloud platform recently announced support for the DeepSeek R1 model through its Azure AI Foundry service. Currently in public preview, the model may be run in serverless mode and is free of charge. This article will guide you through deploying the R1 model and integrating it with .NET applications.</p><h2>\n  \n  \n  Deploy DeepSeek R1 on Azure AI Foundry\n</h2><p>Deploying the DeepSeek model on Azure is straightforward, even for those new to Azure AI Foundry (formerly Azure AI Studio).</p><p>Start by creating a new hub, which serves as a container for your AI applications and models. This can be done via AI Foundry <a href=\"https://ai.azure.com/managementCenter/allResources\" rel=\"noopener noreferrer\">Management Center</a>. Note that the region you select for your hub will impact model availability. As of February 2025, the DeepSeek R1 model is available in East US, East US 2, West US, West US 3, South Central US, and North Central US regions only.</p><p>Next, you need to create a new project. In the <a href=\"https://ai.azure.com/managementCenter/allResources\" rel=\"noopener noreferrer\">Management Center</a> select the hub you created, and click on \"New project\" button. Provide a name for your project and click \"Create.\" Your project will be ready in a few seconds.</p><p>Once you have your hub and project ready, you can deploy DeepSeek R1 model. Navigate to the <a href=\"https://ai.azure.com/explore/models\" rel=\"noopener noreferrer\">Model catalog</a> tab within your project. Search for the \"DeepSeek R1\" model, and click \"Deploy\". Provide a region unique name for your model and optionally apply content filters. Click \"Deploy\" (again) to start provisioning the model, which may take a few minutes.</p><p>After deployment finishes, you will find the model in the <a href=\"https://ai.azure.com/build/deployments/model\" rel=\"noopener noreferrer\">Models + endpoints</a> tab of your project. Select the deployment name to access detailed information, including the endpoint URL and API key, which are necessary for programmatic consumption.</p><p>Use the chat playground available in the <a href=\"https://ai.azure.com/playgrounds\" rel=\"noopener noreferrer\">Playgrounds</a> tab of your project to ensure the deployment is functioning correctly. Make sure to select DeepSeek R1 deployment before starting the conversation. This step helps verify that the model will work seamlessly when integrated programmatically.</p><p>Models deployed via Azure AI Foundry can be accessed from any programming language that supports HTTP requests. For .NET, Azure provides an SDK through the <a href=\"https://www.nuget.org/packages/Azure.AI.Inference\" rel=\"noopener noreferrer\">Azure AI Inference</a> library. To consume the model, create a chat client using the deployment endpoint URL and API key, and then run chat completion.</p><h2>\n  \n  \n  Consume from SemanticKernel\n</h2><p>For more complex applications using Semantic Kernel, consuming models deployed in Azure AI Foundry is straightforward. Utilize the <a href=\"https://www.nuget.org/packages/Microsoft.SemanticKernel.Connectors.AzureAIInference\" rel=\"noopener noreferrer\">Microsoft.SemanticKernel.Connectors.AzureAIInference</a> connector library. Register the AI Inference connector using the deployment name, endpoint URL, and API key while building the kernel. Once configured, provision the kernel and use the  service to run chat completion.</p><p>Complete .NET and Semantic Kernel chat samples are available on <a href=\"https://github.com/uveta/demo-azure-deepseek\" rel=\"noopener noreferrer\">GitHub</a>. Make sure you add the deployment name, endpoint URL, and API key where indicated in the code to run the applications without issues.</p><p>Keep in mind that the DeepSeek R1 model on Azure is still in preview and is subject to throttling and rate limiting. While it may take from couple of seconds up to few minutes to receive a meaningful response, the service is currently free, allowing for extensive experimentation.</p>","contentLength":3597,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"🚀 Effortless RChilli PeopleSoft Integration for Smarter Hiring 🤖📄","url":"https://dev.to/rchilli_resumeparser/effortless-rchilli-peoplesoft-integration-for-smarter-hiring-40ep","date":1739776318,"author":"Rchilli Inc","guid":1658,"unread":true,"content":"<p>Elevate your hiring process with <a href=\"https://www.rchilli.com/our-partners/rchilli-peoplesoft-integration\" rel=\"noopener noreferrer\">RChilli PeopleSoft Integration</a> 🔗. This AI-powered resume parsing solution seamlessly automates candidate data extraction 📊, eliminating manual entry and enhancing recruitment efficiency ⚡. Oracle PeopleSoft users benefit from faster screening ⏳, structured resume data 📂, and improved decision-making 🎯. Streamline talent acquisition and hire smarter with intelligent automation 🤝.<a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fc8e0xydogmuvg8a2i048.jpg\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fc8e0xydogmuvg8a2i048.jpg\" alt=\"Image description\" width=\"800\" height=\"430\"></a></p>","contentLength":433,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Why DeepSeek-R1 Is so Much Better Than o3-Mini & Qwen 2.5 MAX — Here The Results","url":"https://dev.to/gaodalie_ai/why-deepseek-r1-is-so-much-better-than-o3-mini-qwen-25-max-here-the-results-37m9","date":1739776276,"author":"Gao Dalie (高達烈)","guid":1657,"unread":true,"content":"<p>As the title says, I tried using Deepseek-r1, o3-Mini and Qwen 2.5 MAX, which is getting a lot of attention. There are a lot of things being said about it,</p><p>I get the impression that by entering the market at a time when research and development were progressing and methods were being established through companies like OpenAI, DeepSeek, and Qwen, they were able to save on the huge costs of trial and error and complete the project at a low cost.</p><p>OpenAI is eager to defend its market position with the release of the O3 Mini on Friday, a direct response to Chinese startup DeepSeek’s R1 model.</p><p>Finally couldn’t sit still and launched a new inference model series o3-mini. Not only is the inference model open to free users for the first time, but the cost is also reduced by 15 times compared to the previous o1 series.</p><p>Unlike the GPT-4O and GPT model families, the “O” family of AI models focuses on reasoning tasks. They are less creative but have embedded chains of thought reasoning, making them more capable of solving complex problems, tracing back wrong analyses, and building better-structured codes.</p><p>Not to mention, Alibaba released a new version of its Qwen 2.5 artificial intelligence model, Meanwhile, Qwen is also developing an ultra-large MoE model, Qwen2.5-Max, which is trained using pre-training data of over 20 trillion tokens and a carefully designed post-processing training method.</p><p>Compared to the previous generation model, the Qwen 2.5 model has significantly improved computing power, processing speed, and versatility, and is expected to be particularly useful for business and research purposes.</p><p>However, it is rumoured that  will outperform DeepSeek-R1. In this article, we will explore the true value and future potential of  through its features and mechanisms and compare them with competing models.</p><p>By the time you finish reading, you will be excited and hopeful about the future of AI, and you will want to pick up some “information” that will help you improve business efficiency and innovation. Please stay with us until the end.</p><ul><li><p>If you like this topic and you want to support me:</p></li><li><p>like my article; that will really help me out.👏</p></li><li><p>Follow me on my YouTube channel</p></li><li><p>Subscribe to me to get the latest article.</p></li></ul><p>o3-mini is OpenAI’s first small inference model that supports developer-required functions. It inherits the low-cost and low-latency advantages of o1-mini and supports functions such as function calls, streaming, and structured output.</p><p>Developers can choose the strength of inference according to their needs, balancing the depth of thinking and response speed, but it does not support visual tasks, and visual reasoning still requires the use of o1.</p><p>Outstanding reasoning ability: Compared to its predecessor, the o1-mini, it produces more accurate and clearer answers, providing stronger reasoning ability, and allowing for deeper understanding and logical thinking, which is essential in solving complex problems.</p><p>: Response time is 24% faster than the o1-mini, at an average of 7.7 seconds. You can use it without stress even in situations where real-time response is required.</p><p>: Excels in science, math, coding, and a variety of engineering specialities.</p><p><strong>Developer-oriented features</strong>: Equipped with long-awaited features, such as function calls, structured output, and developer messages, enhancing usability as an engineering tool.</p><p><strong>Flexible inference options</strong>: Three inference effort options are available: low, medium, and high. You can choose the best performance for your situation.</p><p>: It maintains the low cost and low latency of the o1-mini while providing more advanced features, making it cost-effective and accessible to a wide range of users.</p><p>By the way, what is the performance difference between this and the O1 Pro? Of course, this is just a matter of usage, so a strict comparison cannot be made.</p><p>But the O1 Pro is slow to begin with. No matter what code you’re working on, even if you give detailed instructions for each function, it usually takes about 3 minutes.</p><p>It requires a lot of writing code, so it’s not very practical on the O1 Pro.</p><p>That’s why the o3-mini is by far the easiest to use.</p><p>If there was a situation where the o3-mini-high would give an error, I thought I would try using the o1 pro, but so far I haven’t gotten any errors so I can’t compare them</p><p>Qwen 2.5 Max is a particularly high-performance version of the series and has attracted attention for demonstrating benchmark scores that surpass DeepSeek V3. Its main features are its inference speed and ability to handle a variety of tasks, as well as enhanced integration with external services and plugins.</p><p>Qwen 2.5 Max integrates not only language understanding but also image and video generation functions. This gives it the flexibility to handle not only text-based dialogue but also multimodal input</p><p>So, what exactly is the Qwen2.5-Max? Below are its main features.</p><p>Mixture-of-Expert (MoE) ArchitectureUnlike typical transformer-based language models, this architecture uses a combination of multiple “expert” sub-models, making it easier to optimize for specific tasks and improving processing efficiency and accuracy.</p><p>: Pre-training is performed on more than 20 trillion tokens, giving it the ability to understand and generate language across a wide range of domains. It has the advantage of being able to handle a wide range of fields because it greedily learns from all kinds of text data, including news articles, academic papers, and social media posts.</p><p>Advanced fine-tuning (SFT and RLHF)By combining SFT (supervised fine-tuning) and RLHF (reinforcement learning based on human feedback), we have created a mechanism to generate responses that users expect more accurately and naturally. This makes it possible to respond in a way that takes into account the user’s “preferences” and “intentions,” rather than simply reproducing training data.</p><p>: Access is possible via API using Alibaba Cloud’s Model Studio service. It also supports OpenAI-compatible APIs, so it is highly compatible with existing development environments and tools, and you can expect quick implementation and expansion.</p><p>I couldn’t hold myself to compare it with the domestic large model DeepSeek R1 that has swept the entire large model circle.</p><p>This time, we will verify the following items.</p><div><pre><code>\nwriting a p5.js script to simulate 100 colored balls bouncing inside a sphere.\nEach ball should leave a fading trail showing its most recent path. \nThe container sphere should rotate slowly. \nMake sure to implement proper collision detection to keep the ball \ninside the sphere.\n</code></pre></div><div><pre><code>let balls = [];\nlet numBalls = 100;\nlet sphereRadius = 300;\nlet rotationAngle = 0;\n\nfunction setup() {\n  createCanvas(800, 800, WEBGL);\n  for (let i = 0; i &lt; numBalls; i++) {\n    balls.push(new Ball());\n  }\n  noStroke();\n}\n\nfunction draw() {\n  background(0);\n  rotateX(rotationAngle);\n  rotateY(rotationAngle * 0.5);\n\n  // Draw the container sphere (transparent)\n  push();\n  fill(0, 0, 0, 0);\n  stroke(255);\n  sphere(sphereRadius);\n  pop();\n\n  // Update and display balls\n  for (let ball of balls) {\n    ball.update();\n    ball.display();\n  }\n\n  // Slowly rotate the sphere\n  rotationAngle += 0.005;\n}\n\nclass Ball {\n  constructor() {\n    this.pos = p5.Vector.random3D().mult(sphereRadius * 0.8);\n    this.vel = p5.Vector.random3D().mult(2);\n    this.color = color(random(255), random(255), random(255), 200);\n    this.trail = [];\n    this.trailLength = 20;\n  }\n\n  update() {\n    // Update position\n    this.pos.add(this.vel);\n\n    // Collision detection with the sphere\n    let distance = this.pos.mag();\n    if (distance &gt; sphereRadius) {\n      let normal = this.pos.copy().normalize();\n      this.vel = p5.Vector.reflect(this.vel, normal);\n      this.pos = normal.mult(sphereRadius * 0.99); // Slightly inside the sphere\n    }\n\n    // Add current position to the trail\n    this.trail.push(this.pos.copy());\n    if (this.trail.length &gt; this.trailLength) {\n      this.trail.shift();\n    }\n  }\n\n  display() {\n    // Draw the trail\n    for (let i = 0; i &lt; this.trail.length; i++) {\n      let alpha = map(i, 0, this.trail.length, 50, 255);\n      fill(this.color.levels[0], this.color.levels[1], this.color.levels[2], alpha);\n      noStroke();\n      push();\n      translate(this.trail[i].x, this.trail[i].y, this.trail[i].z);\n      sphere(5);\n      pop();\n    }\n\n    // Draw the ball\n    fill(this.color);\n    noStroke();\n    push();\n    translate(this.pos.x, this.pos.y, this.pos.z);\n    sphere(10);\n    pop();\n  }\n}\n</code></pre></div><div><pre><code>// Global parameters\nlet balls = [];\nconst numBalls = 100;\nlet containerRadius;\nconst ballRadius = 5;      // radius for each ball\nconst maxTrailLength = 30; // number of positions to store for the fading trail\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight, WEBGL);\n  // Set the container sphere radius relative to the canvas size.\n  containerRadius = min(width, height) * 0.4;\n\n  // Create the balls with random positions (inside the sphere) and random velocities.\n  for (let i = 0; i &lt; numBalls; i++) {\n    // Get a random point that is guaranteed to be inside the container\n    let pos = randomPointInSphere(containerRadius - ballRadius);\n    // Give a random 3D direction with a random speed between 1 and 3.\n    let vel = p5.Vector.random3D().mult(random(1, 3));\n    // Random color for the ball.\n    let col = color(random(255), random(255), random(255));\n    balls.push(new Ball(pos, vel, col));\n  }\n\n  // Optional: set a stroke weight for trails\n  strokeWeight(2);\n}\n\nfunction draw() {\n  // Draw a semi-transparent black background so that previous frames slowly fade.\n  // (Adjust the second parameter to change how quickly the trails fade.)\n  background(0, 20);\n\n  // Apply a slow rotation to the entire scene.\n  rotateY(frameCount * 0.005);\n  rotateX(frameCount * 0.003);\n\n  // Update and display each ball.\n  for (let ball of balls) {\n    ball.update();\n    ball.display();\n  }\n\n  // Draw the container sphere (as a semi-transparent wireframe)\n  noFill();\n  stroke(255, 50);\n  sphere(containerRadius);\n}\n\n// Returns a random point uniformly distributed within a sphere of given max radius.\nfunction randomPointInSphere(maxRadius) {\n  let v = p5.Vector.random3D();\n  // Multiply by a random number between 0 and maxRadius to get a point inside the sphere.\n  v.mult(random(0, maxRadius));\n  return v;\n}\n\n// Ball class definition\nclass Ball {\n  constructor(pos, vel, col) {\n    this.pos = pos;\n    this.vel = vel;\n    this.col = col;\n    this.trail = []; // to store previous positions\n  }\n\n  update() {\n    // Move the ball.\n    this.pos.add(this.vel);\n\n    // Collision detection: If the ball goes outside the container sphere,\n    // reflect its velocity. (We use the ball's radius so that the entire sphere stays in.)\n    let d = this.pos.mag();\n    if (d + ballRadius &gt; containerRadius) {\n      // Get the outward normal from the sphere's center.\n      let normal = this.pos.copy().normalize();\n      // Reflect the velocity using the reflection formula:\n      //    v = v - 2*(v dot normal)*normal\n      let dot = this.vel.dot(normal);\n      this.vel.sub(p5.Vector.mult(normal, 2 * dot));\n\n      // Optionally reposition the ball to exactly be inside the container.\n      this.pos = normal.mult(containerRadius - ballRadius);\n    }\n\n    // Add the current position to the trail.\n    this.trail.push(this.pos.copy());\n    // Limit the length of the trail.\n    if (this.trail.length &gt; maxTrailLength) {\n      this.trail.shift();\n    }\n  }\n\n  display() {\n    // Draw the fading trail.\n    noFill();\n    beginShape();\n    // Draw a vertex at each point in the trail.\n    // Older positions are drawn with lower opacity.\n    for (let i = 0; i &lt; this.trail.length; i++) {\n      let pos = this.trail[i];\n      // Map the opacity so that the oldest point is more transparent.\n      let alpha = map(i, 0, this.trail.length - 1, 50, 255);\n      stroke(red(this.col), green(this.col), blue(this.col), alpha);\n      vertex(pos.x, pos.y, pos.z);\n    }\n    endShape();\n\n    // Draw the ball.\n    push();\n    translate(this.pos.x, this.pos.y, this.pos.z);\n    noStroke();\n    fill(this.col);\n    sphere(ballRadius);\n    pop();\n  }\n}\n</code></pre></div><div><pre><code>let balls = [];\nlet numBalls = 100;\nlet sphereRadius = 200;\nlet angleX = 0;\nlet angleY = 0;\n\nfunction setup() {\n  createCanvas(600, 600, WEBGL);\n  colorMode(HSB, 360, 100, 100, 100);\n\n  // Create balls\n  for (let i = 0; i &lt; numBalls; i++) {\n    balls.push(new Ball());\n  }\n}\n\nfunction draw() {\n  background(0);\n\n  // Rotate the container sphere\n  rotateX(angleX);\n  rotateY(angleY);\n  angleX += 0.005;\n  angleY += 0.01;\n\n  // Draw the container sphere\n  noFill();\n  stroke(255, 50);\n  sphere(sphereRadius * 2);\n\n  // Update and display balls\n  for (let ball of balls) {\n    ball.update();\n    ball.display();\n    ball.checkCollision();\n  }\n}\n\nclass Ball {\n  constructor() {\n    this.position = createVector(\n      random(-sphereRadius, sphereRadius),\n      random(-sphereRadius, sphereRadius),\n      random(-sphereRadius, sphereRadius)\n    );\n    this.velocity = p5.Vector.random3D().mult(random(1, 3));\n    this.color = color(random(360), 80, 100, 100);\n    this.history = [];\n    this.maxHistory = 20;\n  }\n\n  update() {\n    this.position.add(this.velocity);\n\n    // Store position history for the trail\n    this.history.push(this.position.copy());\n    if (this.history.length &gt; this.maxHistory) {\n      this.history.shift();\n    }\n  }\n\n  display() {\n    // Draw the trail\n    noFill();\n    stroke(this.color);\n    beginShape();\n    for (let i = 0; i &lt; this.history.length; i++) {\n      let pos = this.history[i];\n      vertex(pos.x, pos.y, pos.z);\n    }\n    endShape();\n\n    // Draw the ball\n    noStroke();\n    fill(this.color);\n    push();\n    translate(this.position.x, this.position.y, this.position.z);\n    sphere(5);\n    pop();\n  }\n\n  checkCollision() {\n    // Check if the ball is outside the sphere\n    if (this.position.mag() &gt; sphereRadius) {\n      // Reflect the velocity vector\n      this.velocity.reflect(this.position.normalize());\n    }\n  }\n}\n</code></pre></div><p>All the code is incorrect. For example, DeepSeek-R1 has a problem with the 100 balls — if you look at the GIF, you will see that DeepSeek-R1 misses the ball inside the circle. O3-Mini generates 100 balls, but the circle is unclear because it has a grey background. Qwen2.5-Max excels at generating the circle and 100 balls but has a size issue, making them look bigger than expected.</p><p>In conclusion, I would say that all these models require human intervention, as they cannot generate correct code with a single prompt.</p><p>Factorize the number 1757051 and explain why it is a good example \nto test a human's ability to factorize this.</p><p>Deepseek-r1 and o3-mini generate correct answers, but o3-mini is not as good at reasoning as Deepseek-r1. Even when the question is correct, the o3-mini lacks some formulas and misses important details. Qwen2.5-Max fails to generate the correct question. Personally, if I have a complex math question, I would prefer to use Deepseek-r1.</p><p>o3-mini is still far behind Deepseek, Deepseek-R1 is better at deep reasoning and complex task processing, especially in deep thinking, R1 not only has powerful performance but also has a lower price.</p><p>The Chat version of r1 is free and unlimited, while the Chat version of o3-mini is available to free members, but it is severely limited. It is just a trial version.</p><p>The API price of o3-mini is $1.1 for input and $4.4 for output, while r1 is 0.55 and $2.19. o3-mini is exactly twice that of r1</p><p>Even o3-mini is better at coding, but I will not use it for coding</p><p>Personally, I think Deepseek-r1 (math) &amp; Claude (coding), who used ❤ to represent life, is the winner.</p><p>🧙‍♂️ I am an ! If you want to collaborate on a project, drop an inquiry here or Book a  Call With Me.</p><p><strong>I would highly appreciate it if you</strong></p>","contentLength":15788,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"🚀 AI-Powered Stock Recommender 📈💡","url":"https://dev.to/buildandcodewithraman/ai-powered-stock-recommender-15om","date":1739775379,"author":"Ramandeep Singh","guid":1638,"unread":true,"content":"<p>\nInvest smarter with our <strong>AI-Powered Stock Recommender</strong>! This basic version helps you analyze market trends, track real-time stock data, and get AI-driven insights. 📊🤖</p><p>🔹 \n✅ AI-based stock recommendations\n✅ News sentiment analysis<p>\n✅ Easy-to-use Streamlit UI</p></p><p>🚀 <strong>More features coming soon!</strong> Portfolio tracking, advanced AI models, and multi-exchange support are on the way! Stay tuned. 🔥</p><p>⚠️ Disclaimer: This tool is for informational and analytical purposes only. It does not provide financial advice. Please do your own research before making any investment decisions. 📢</p>","contentLength":589,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Why AI is the Future of Software Testing","url":"https://dev.to/testifytech/why-ai-is-the-future-of-software-testing-2bb0","date":1739774722,"author":"Steve Wortham","guid":1637,"unread":true,"content":"<p>In the fast-paced world of software development, ensuring high-quality products is no longer just an option — it’s a necessity. As software systems grow more complex, traditional testing methods struggle to keep up with the demand for speed, accuracy, and scalability. Enter Artificial Intelligence (AI) in software testing, a game-changing innovation that’s revolutionizing how quality assurance (QA) teams operate. From generative AI in software testing to sophisticated AI testing tools, the future of QA lies in the intelligent capabilities of these technologies.</p><h2>\n  \n  \n  The Role of AI in Software Testing\n</h2><p>Artificial Intelligence has revolutionized software testing by automating routine tasks, improving test precision, and identifying potential defects before they occur. Rather than replacing human testers, AI enhances their abilities by allowing them to concentrate on more valuable tasks. With AI-powered tools, QA teams are able to optimize workflows, reduce mistakes, and accelerate release times without sacrificing quality.</p><p>Generative AI in software testing takes it a step further by not only automating tasks but also generating test scripts, crafting realistic test data, and recognizing intricate patterns that traditional tools may overlook. These AI systems are designed to learn from past testing cycles, adjust to evolving requirements, and progressively refine testing outcomes.</p><h2>\n  \n  \n  How to Use AI in Software Testing\n</h2><p>Leveraging AI in software testing involves integrating intelligent tools and frameworks into existing QA processes. Some of the key areas where AI can make a significant impact include:</p><ul><li>: AI can automate regression, performance, and functional testing, freeing up testers to focus on exploratory and creative tasks.</li><li>: Machine learning algorithms analyze historical data to predict where bugs are likely to occur.</li><li>Intelligent Test Case Generation: AI tools can create optimized test cases, reducing redundancy and improving coverage.</li><li>: AI-powered tools can automatically detect and fix broken test scripts, minimizing manual intervention.</li><li>: AI continuously monitors software behavior, flagging anomalies and potential performance bottlenecks.</li></ul><h2>\n  \n  \n  AI and Software Testing: A Perfect Match\n</h2><p>AI and software testing work hand in hand, overcoming the limitations of conventional testing techniques. Human testers bring creativity and problem-solving skills, while AI offers speed, scalability, and data-driven accuracy. This powerful combination results in stronger software products and shorter time-to-market.</p><p>For instance, generative AI tools can quickly produce intricate test cases in mere seconds, a task that would typically require hours from human testers. Additionally, AI’s predictive analytics can pinpoint areas with a high likelihood of defects, allowing teams to tackle potential issues before they become major problems.</p><h2>\n  \n  \n  AI Testing Tools: Enhancing Modern QA Practices\n</h2><p>Modern AI testing tools are transforming QA workflows by offering advanced capabilities for automation, defect detection, and test execution. These tools are designed to seamlessly integrate with development pipelines, improving efficiency and reducing errors.</p><p>One such tool designed to address the challenges of AI in software testing is <a href=\"https://testgrid.io/cotester\" rel=\"noopener noreferrer\">CoTester</a>. Built with advanced AI capabilities, it integrates into QA workflows, adapts to team structures, and simplifies complex testing tasks. Its capabilities include analyzing test scenarios, generating test cases, executing tests across real devices, and offering actionable insights through detailed test summaries.</p><h2>\n  \n  \n  Generative AI in Software Testing: The Next Frontier\n</h2><p>Generative AI is reshaping software testing by autonomously generating test scripts, simulating real-world scenarios, and even predicting edge cases that might escape manual testing. Unlike traditional automation tools, generative AI adapts and evolves with each testing cycle, continuously improving its output.</p><p>With AI software testing tools powered by generative AI, QA teams no longer need to spend hours writing and maintaining test scripts. Instead, they can focus on refining strategies, addressing critical bugs, and ensuring the software aligns with business goals.</p><h2>\n  \n  \n  Benefits of AI in Software Testing\n</h2><p>The adoption of AI in software testing brings a multitude of benefits, including:</p><ul><li>: Automating repetitive tasks accelerates testing cycles.</li><li>: AI minimizes human errors, ensuring precise and reliable results.</li><li>: AI can handle massive datasets and complex testing environments effortlessly.</li><li>: AI tools provide insights into potential risks and areas of concern.</li><li>: Automation reduces the overall cost of testing while improving ROI.</li></ul><h2>\n  \n  \n  The Future of AI in Software Testing\n</h2><p>The integration of AI in software testing is not just a passing trend — it’s the future. As AI technologies continue to advance, we can expect even smarter tools capable of autonomously managing end-to-end testing processes.</p><p>In the coming years, AI-powered tools will become essential for organizations aiming to stay competitive in the software development landscape. From enhancing productivity to improving product quality, the benefits of AI in software testing are undeniable.</p><p>AI in software testing is paving the way for smarter, faster, and more reliable software delivery. Intelligent tools equipped with AI capabilities are transforming QA teams’ ability to predict, prevent, and resolve software issues efficiently.</p><p>In a world where software is the backbone of businesses, AI isn’t just an advantage — it’s a necessity. Adopting AI-driven tools is not just about keeping up with trends but about staying ahead in an increasingly competitive market. The future of software testing is here, and it’s powered by Artificial Intelligence.</p><p><em>: This blog was originally published at <a href=\"https://medium.com/@reedjace28/why-ai-is-the-future-of-software-testing-925a7eb4c2f2\" rel=\"noopener noreferrer\">medium.com</a></em></p>","contentLength":5848,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Understanding Credit Proposal Generation: How SimplAI’s Credit Analyst AI Agent Solves Key Challenges","url":"https://dev.to/simplai/understanding-credit-proposal-generation-how-simplais-credit-analyst-ai-agent-solves-key-4glj","date":1739773920,"author":"SimplAI","guid":1636,"unread":true,"content":"<p>In the dynamic landscape of banking and finance, navigating the intricacies of credit proposal generation is critical. Financial institutions face an ever-increasing demand for speed and accuracy in assessing creditworthiness. Amidst this backdrop, SimplAI's Credit Analyst AI Agent shines as a beacon of efficiency and emerges as a game-changer, addressing key challenges within credit management.</p><p>The Challenges in <a href=\"https://simplai.ai/blogs/understanding-credit-proposal-generation-how-simplais-credit-analyst-ai-agent-solves-key-challenges/\" rel=\"noopener noreferrer\">Credit Proposal Automation</a>\nAs banking institutions grapple with traditional methods of credit proposal generation, they encounter significant hurdles:</p><p>Inefficiencies in Data Handling: Manual credit assessments can be slow, requiring extensive data collection and processing, leading to delays in decision-making.\nHuman Error Risks: Traditional methods are often fraught with human error, impacting the accuracy of credit decisions.<p>\nBias in Decision-Making: There's an ever-present concern regarding inherent biases that may affect the fairness of credit evaluations.</p>\nComplex Regulatory Compliance: Financial institutions must adhere to stringent regulatory standards, adding layers of complexity to credit assessments.</p>","contentLength":1133,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"One-Minute Daily AI News 2/16/2025","url":"https://www.reddit.com/r/artificial/comments/1ircvd9/oneminute_daily_ai_news_2162025/","date":1739771165,"author":"/u/Excellent-Target-847","guid":1675,"unread":true,"content":"   submitted by   <a href=\"https://www.reddit.com/user/Excellent-Target-847\"> /u/Excellent-Target-847 </a>","contentLength":43,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"[Boost]","url":"https://dev.to/dhruvjoshi9/-5d00","date":1739770696,"author":"Dhruv Joshi","guid":1620,"unread":true,"content":"<h2>ChatGPT, Gemini, Copilot, or DeepSeek R1—Which One Should You Use?</h2>","contentLength":68,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Testing Aider: Practical Experience with Different Models","url":"https://dev.to/sikamikanikobg/testing-aider-practical-experience-with-different-models-58f2","date":1739769253,"author":"Arsen Apostolov","guid":1619,"unread":true,"content":"<p>I like coding agents and all kind of supportive plug-ins to make my day easier. From Continue to Copilot. I must say that the most complete solution so far for me was Cursor, yet it is not free (see the plans).</p><p>So i found this super cool alternative - Aider chat.</p><p>I tested Aider with multiple AI backends: OpenAI, Claude, and local Ollama server.</p><p>First 30 minutes were spent learning the tool - understanding commands and workflow. After this initial setup phase, development speed increased significantly.\nModel comparison from practical use:</p><p><strong>Claude: Best performance when working remotely</strong><strong>Local setup: Ollama with deepseek r1 7b and qwen coder 2.5 7b</strong>\nHome setup preference: Architect mode with Ollama models</p><p>Key observation: Local models provide good performance without cloud dependencies. The initial learning curve is worth the productivity gain.</p><p>What's your experience with Aider? Particularly interested in local model configurations and performance comparisons.</p>","contentLength":962,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Build AI Agents That Speak","url":"https://dev.to/hammad_ahmad_89181/build-ai-agents-that-speak-29el","date":1739767366,"author":"Hammad Ahmad","guid":1608,"unread":true,"content":"<p>Alright Lets Talk About Eleven Lab’s Latest Release, Meet Conversational AI.</p><p>They’ve Build A Platform That Lets You Deploy Voice Agents. That’s A Massive Productivity Unlock. It’s Not Just About Having A Voice Agent; It’s About Having A Agents That Can Actually Hold A Conversation With Low Latency, Interruption Handling &amp; Advance Turn Taking.</p><p>This Isn’t Your Basic Chatbot. It Integrates With Any LLM Like GPT, Gemeni, Claude &amp; More Also If You’ve Got A Custom Model, You Can Plug That In Too. This Flexibility Is Critical Because The Conversational AI Space Is Evolving Fast. You Don’t Want To Be Locked Into One Ecosystem.</p><p>Here’s Is Why This Is The Game Changer: You Can Scale Customer Support, Automate Sales Calls, &amp; Provide Personalized Education All While Maintaining A Consistent, High Quality Voice &amp; Enhance Listening Experience.</p><p>It’s Not Just For English. This Thing Support 31 Languages. You Can Build Multilingual Agents That Sounds Natural.</p>","contentLength":971,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Streamlining Incident Response: How AI can reduce on call engineer's burden","url":"https://dev.to/aarthirocks/streamlining-incident-response-how-ai-can-reduce-on-call-engineers-burden-145p","date":1739767331,"author":"Aarthi Anbalagan","guid":1607,"unread":true,"content":"<p>With around 15 years of experience in software engineering, primarily in the data and AI space, I have worked extensively on large-scale systems, monitoring solutions, and AI-driven automation. At Microsoft, I have been deeply involved in big data, telemetry and observability, leading efforts to improve system reliability and operational efficiency. My expertise spans data engineering, AI, machine learning, and open telemetry, and I am passionate about leveraging emerging technologies to optimize workflows. Having witnessed firsthand the challenges of incident management and the strain it places on on-call engineers, I see AI as a game-changer in streamlining incident response. You can learn more about me <a href=\"https://www.linkedin.com/in/aarthian/\" rel=\"noopener noreferrer\">here</a>.</p><p>In this blog, I’ll explore how agentic AI can reduce the on-call burden by automating critical steps in issue diagnosis and resolution. While I have implemented some of this at my current company, I'm sharing generic information on all the possibilities using Agentic AI, without sharing anything proprietary. </p><h2>\n  \n  \n  Incidents or Support tickets\n</h2><p>In today's fast-paced digital landscape, on-call engineers play a pivotal role in maintaining system reliability and swiftly addressing incidents. However, the traditional workflow—from customer support identifying an issue to engineers diagnosing and resolving it—often involves multiple back-and-forth communications, leading to delays and increased workloads. Enter AI: autonomous systems capable of making decisions and performing tasks without human intervention. By integrating AI into incident response processes, organizations can streamline operations, reduce on-call burdens, and enhance overall efficiency.</p><h2>\n  \n  \n  The Traditional Incident Response Workflow\n</h2><p>Typically, when a field issue arises, the process follows these steps:</p><ol><li> A customer encounters a problem and contacts the support team.</li><li> Customer support collects details about the issue.</li><li> If unresolved, the issue escalates to an on-call engineer.</li><li> The engineer seeks critical information:\n\n<ul><li>When did the issue occur?</li><li>Are all necessary information available to query logs or debug further?</li></ul></li><li> Missing details require reverting to customer support, who then contact the customer again.</li><li> With complete information, the engineer analyzes logs to identify and rectify the root cause.</li></ol><p>This iterative process can cause significant delays, increased workloads, and frustration for both customers and support teams.</p><h2>\n  \n  \n  Introducing Agentic AI into Incident Response\n</h2><p>Agentic AI systems autonomously perform tasks, make decisions, and adapt to changing environments without human input. In the context of incident response, agentic AI can revolutionize the traditional workflow by:</p><ol><li><p><strong>Automated Issue Detection and Classification:</strong></p><ul><li> AI-driven tools continuously monitor systems, identifying anomalies before they escalate into significant issues. By analyzing patterns and deviations, these tools can detect potential problems early, reducing the frequency of critical incidents. </li><li> Upon detecting an issue, AI systems can classify its severity and potential impact, ensuring that critical problems receive immediate attention while filtering out false positives.</li></ul></li><li><p><strong>Enhanced Data Collection and Analysis:</strong></p><ul><li><strong>Contextual Data Gathering:</strong> Agentic AI can automatically collect relevant data—such as timestamps, system logs, and user actions—at the moment an issue is detected, ensuring that on-call engineers have all necessary information upfront.</li><li> By analyzing aggregated data, AI can identify patterns and pinpoint the underlying causes of issues, providing engineers with actionable insights.</li></ul></li><li><p><strong>Automated Communication and Resolution:</strong></p><ul><li> AI-powered virtual assistants can engage with customers in real-time, gathering essential details about the issue through natural language processing, reducing the need for multiple back-and-forth communications.</li><li> For known issues, agentic AI can execute predefined solutions, resolving problems without human intervention and only escalating to on-call engineers when necessary. </li></ul></li></ol><h2>\n  \n  \n  Benefits of Agentic AI in Reducing On-Call Burden\n</h2><p>Integrating agentic AI into incident response workflows offers several advantages:</p><ul><li> Automated detection and data collection expedite the initial phases of incident management, allowing for quicker resolutions.</li><li> By handling routine tasks and minor issues autonomously, AI frees up engineers to focus on more complex problems, reducing burnout and improving job satisfaction.</li><li> AI systems can analyze vast amounts of data without fatigue, leading to more accurate diagnoses and reducing the likelihood of recurring issues.</li><li><strong>Enhanced Customer Satisfaction:</strong> Faster response times and proactive issue resolution lead to a better customer experience, fostering trust and loyalty.</li></ul><h2>\n  \n  \n  Implementing Agentic AI in Your Organization\n</h2><p>To effectively integrate agentic AI into your incident response processes, consider the following steps:</p><ol><li><strong>Assess Current Workflows:</strong> Identify repetitive tasks and common pain points in your existing incident response procedures that could benefit from automation.</li><li><strong>Select Appropriate AI Tools:</strong> Choose AI solutions that align with your organization's specific needs. For instance, platforms like Merlinn offer open-source AI assistants designed to handle system alerts and incidents autonomously. </li><li><strong>Integrate with Existing Systems:</strong> Ensure that the chosen AI tools can seamlessly interface with your current infrastructure, including monitoring systems, communication platforms, and databases.</li><li> Utilize historical incident data to train AI models, enabling them to recognize patterns and make informed decisions.</li><li> Continuously monitor the performance of AI systems, gathering feedback from on-call engineers and support staff to refine and improve AI-driven processes.</li></ol><h2>\n  \n  \n  Challenges and Considerations\n</h2><p>While agentic AI offers numerous benefits, it's essential to be mindful of potential challenges:</p><ul><li><strong>Data Privacy and Security:</strong> Automated systems must handle sensitive information responsibly, adhering to data protection regulations and ensuring that customer data remains secure.</li><li> Maintaining transparency in AI decision-making processes is crucial to build trust among employees and customers. Clear documentation and explainable AI models can aid in this effort.</li><li> AI systems require regular updates and training to adapt to evolving threats and system changes, necessitating ongoing investment in AI development and maintenance.</li></ul><h2>\n  \n  \n  Conclusion: Key Metrics to track - Building Sustainable Incident Management\n</h2><p>Streamlining customer incident response requires a holistic approach combining technical innovation, process optimization, and cultural evolution. By implementing the strategies outlined – from AI-powered triage systems organizations can achieve:</p><ul><li>63-75% Reduction in on-call engineer workload</li><li>55% Faster mean time to resolution (MTTR)</li><li>89% Improvement in engineer job satisfaction</li></ul><p>The path forward demands continuous investment in both technology and people. Organizations that master this balance will not only improve operational reliability but also create engineering environments where talent thrives amidst increasing system complexity. </p><p>Images used in this blog are generated by Microsoft copilot.</p><p>In my next post, I plan to cover some of these topics in detail!\nStay tuned! Feel free to leave a comment! Get in touch on Linkedin for any collaboration!</p>","contentLength":7362,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Your AI Agent isn't an Engineer","url":"https://dev.to/blackgirlbytes/your-ai-agent-isnt-an-engineer-5egf","date":1739765688,"author":"Rizèl Scarlett","guid":1606,"unread":true,"content":"<ol><li>Why This Conversation Matters</li><li>How AI Marketing Shaped This Perception</li><li>The Problem with Marketing AI as a Human</li><li>Framework for Effectively Marketing AI Agents to Developers</li></ol><p>Raise your hand if you've been personally victimized by the question: 'Will AI replace software engineers?' It's a common debate that drives developers to extremes—either avoiding AI entirely or frantically signing up for every AI course available.</p><h2>\n  \n  \n  Why This Conversation Matters\n</h2><p>However, it's not a hypothetical or frivolous concern. Companies  making hiring decisions based on AI productivity. <a href=\"https://www.salesforceben.com/salesforce-will-hire-no-more-software-engineers-in-2025-says-marc-benioff/\" rel=\"noopener noreferrer\">Salesforce's CEO recently announced</a> plans to reduce hiring software and support engineers after seeing a 30% productivity boost from AI.</p><p>As a Developer Advocate in AI, my public response has always been to upskill and adapt to the changing economy. After all, you wouldn't want to be the person insisting on driving a horse and buggy while everyone else has moved on to cars.</p><p>I believe that AI  a helpful tool. I've used it to understand new technologies and quickly prototype ideas. </p><p>But internally, I've wrestled with a different question: Why do we keep framing AI primarily as a replacement for human beings?</p><h2>\n  \n  \n  How AI Marketing Shaped This Perception\n</h2><p>My spicy take is that our industry helped shape this narrative. We inadvertently leaned into a lazy marketing strategy prioritizing quick wins over sustainable adoption. It's easier to tell VCs and executives that your AI tool replaces developers than to demonstrate how it augments developer capabilities.</p><h3>\n  \n  \n  Anthropomorphism Is Not All Bad\n</h3><p>Anthropomorphism is the practice of assigning human traits to non-human entities. It isn't inherently problematic. In fact, it's a common practice in tech. Thoughtful anthropomorphism makes digital experiences more intuitive and helps users embrace new interfaces. For example: </p><ul><li>E-books mirror traditional reading experiences by simulating page-turning animations, even though there's no physical page to turn.</li><li>Electric cars (as <a href=\"https://bsky.app/profile/threepointone.bsky.social/post/3lbepxmdwek23\" rel=\"noopener noreferrer\">Sunil Pai pointed out to me</a>) play pre-recorded engine sounds when they start, providing a familiar affordance for drivers.</li></ul><p>In these cases, users don't actually believe their e-book contains paper or that their electric car has a combustion engine. </p><p>But, AI presents a unique challenge. Its complexity and \"black box\" nature make it harder for users to grasp its true capabilities and limitations. To bridge this knowledge gap, companies lean heavily into human-like descriptions:</p><h4>\n  \n  \n  Devin is an \"AI Software Engineer.\"\n</h4><p>While these descriptions make AI feel more familiar, the drawback is that they can also mislead users to believe that AI can think, reason, and work independently like humans.</p><h2>\n  \n  \n  The Problem with Marketing AI as a Human\n</h2><p>Anthropomorphic AI marketing is sometimes a form of self-sabotage because:</p><ul><li>When AI is marketed as an \"engineer\" or \"developer, \" decision-makers view it as a one-to-one substitute for human talent.</li><li>This is counterproductive because developers are some of the most valuable users of AI tools. They are the users who know how to use AI and contribute to the ecosystem effectively. According to the <a href=\"https://survey.stackoverflow.co/2024/ai#1-ai-tools-in-the-development-process\" rel=\"noopener noreferrer\">2024 Stack Overflow Developer Survey</a>, 76% of developers currently use or plan to incorporate AI into their workflows. However, our industry's marketing suggests that using AI and contributing to the ecosystem will eventually put AI in a place to take their jobs. So why would they want to further the movement?</li></ul><h3>\n  \n  \n  It Sets Unrealistic Expectations\n</h3><ul><li>If an AI tool is marketed as \"just like a human,\" users will expect it to perform at human levels.</li><li>AI is a non-sentient tool that processes historical data patterns, is prone to hallucinating, misses important context, and provides non-deterministic output.</li><li>When developers realize it's not as good as the marketing implied, the company and product risk losing credibility. Developers are notorious for valuing authenticity. Over-exaggeration or misrepresentation in marketing only drives developers away.</li></ul><p>One survey participant shared their reflections: \"I have a PhD in AI, worked to develop some of the algorithms used by generative AI. I deeply regret how naively I offered up my contributions.\"</p><p>Another participant stated, \"We should use generative AI to help people be faster at their jobs, not lose them.\"</p><h3>\n  \n  \n  It Misses the Real Value Proposition\n</h3><p>The real value of AI developer tools includes automating boring tasks, faster prototyping, and quicker debugging, which leaves more time for creative problem-solving.</p><p>And now, AI enthusiasts have dubbed 2025 as the Year of the Agent. In short, <a href=\"https://aws.amazon.com/what-is/ai-agents/\" rel=\"noopener noreferrer\">AI agents</a> are tools that can autonomously take action on our behalf, like executing shell commands, creating calendar events, and building applications. But as we move from LLMs that suggestion code to us to more autonomous agents, anthropomorphic marketing is only increasing.</p><h2>\n  \n  \n  Framework for Effectively Marketing AI Agents to Developers\n</h2><p>Here's how to market AI developer tools in a way that both builds trust and differentiates your Agent in an oversaturated market:</p><p>If you work in Developer Relations, Sales, Marketing, or as an executive promoting an AI agent, you're probably representing a product you didn't build. This means you may not fully understand how the tool works, its true capabilities, or its limitations. Developers have a knack for spotting misrepresentation or inauthentic marketing.</p><p>You can mitigate this challenge by:</p><ul><li>Becoming customer zero \n\n<ul><li>Use the product extensively before it reaches the public</li></ul></li><li>Investing time in learning the following fundamentals:\n\n<ul><li>LLMs and their capabilities</li><li>Key differences between Copilots and Agents</li><li>Core AI Agent operations and your product's unique approach</li><li>Token handling and context management</li><li>Points requiring human intervention</li><li>Your product's agentic loop. For example, some agents use the following loop: \n\n<ul><li>Share requests and available tools with an LLM</li><li>Receive LLM's execution plan</li><li>Execute the plan and tool calls</li><li>Verify results with the LLM</li><li>Revise and re-execute if needed</li><li>Deliver final results to the user and wait for the user's request</li></ul></li></ul></li></ul><p>I used these two resources to help me understand AI agents:</p><p>It might be difficult to eliminate anthropomorphism entirely, especially since it is useful. My advice is to use it sparingly. Skip titles like \"AI Engineer\" or \"AI Teammate.\" Choose names that set clear expectations, like Copilot, Agent, or Assistant. GitHub's use of \"Copilot\" and \"AI Pair Programming Assistant\" exemplifies this balance because it suggests collaboration while keeping humans in control. </p><h3>\n  \n  \n  Augmentation &gt; Replacement\n</h3><p>Let's understand who developers are. They're not rockstar/ninja/10x developers. Those stereotypes are so 2014.  </p><p>Developers juggle multiple roles – they're parents, open source maintainers, bootcamp instructors, and more. AI agents shine brightest when they complement these diverse responsibilities, taking on parallel tasks while developers focus on high-impact work. Instead of marketing your tools as whole substitutes for developers, position them as tools part of a developer's toolkit.</p><p>If possible, go open source. If not, find ways to explain the architecture through whitepapers and conference talks. This approach will help your users understand that it's not magic so they can determine how to use the product and get the best performance from it. </p><p>Many times, when there's a lack of transparency, developers will theorize how they think it works and create their own narrative, which can backfire on your product. I remember this happened in the early days of GitHub Copilot. I would hop into Twitter Spaces, where people would share how they thought it worked, but they were wrong and spreading misinformation.</p><p>You can build trust with developers by putting them in control of their workflow. Here are some of my suggestions:</p><ul><li>Similar to how developers choose IDE settings, allow developers to choose their preferred LLM models and customize the Agent's behavior and verbosity.</li><li>Show what actions the Agent will take before executing them and provide detailed logs for debugging.</li><li>Provide APIs and hooks so the Agent fits into existing workflows. </li></ul><p><a href=\"http://block.github.io/goose\" rel=\"noopener noreferrer\">codename goose</a> is my favorite example of this, although I'm biased because it's an agent my company made. It's open source. Goose, as it's fondly called, lets developers choose their LLM model and extensions via <a href=\"https://www.anthropic.com/news/model-context-protocol\" rel=\"noopener noreferrer\">Model Context Protocol</a>. Developers can also choose to interact with the Agent via the CLI or GUI.</p><p>Instead of making false promises, demonstrate your AI agent's value through concrete examples. Create short, engaging video demos, GIFs, or blog posts showing the Agent in action:</p><ul><li>Creating and running test suites</li><li>Converting code between languages</li><li>Transforming wireframes into interactive UIs</li><li>Generating API documentation from code comments</li><li>Automating environment setup</li></ul><p>Don't be afraid to demo live and make it fun so it can be memorable! When I worked at GitHub, I used to demo GitHub Copilot at conferences. I would prompt GitHub Copilot to post a tweet that said, \"I wrote this tweet with Copilot.\" It was a short and simple demo that was memorable for attendees and sparked curiosity from those who weren't there.</p><p>: Demoing generative AI tools live is scary because the output is non-deterministic. If your live demo fails, that's even better because you can use it as a teaching moment. Show how you work around issues and where human expertise adds value. This authenticity builds more trust than a perfectly polished demo ever could.</p><p>Documentation often determines whether developers adopt your tool. Strong documentation for your Agent could include:</p><ul><li>Accurate technical specifications of model training and limitations</li><li>Comprehensive feature guides</li><li>Clear explanations of data usage and privacy</li></ul><p>Build product credibility by fostering an ecosystem where developers can learn from each other, and you can learn from them. You can do this by:</p><ul><li>Using platforms like GitHub Discussions and Discord to create spaces for feedback and support</li><li>Encouraging knowledge sharing by letting developers exchange prompts, best practices, and integrations</li><li>Recognizing community contributions</li><li>Maintaining a transparent feedback loop to show that you value developer input</li></ul><p>A great example is <a href=\"https://cursor.directory\" rel=\"noopener noreferrer\">Cursor.directory</a> - a platform by and for the community where developers share  prompts.</p><p>Our presentation of AI shapes how the world perceives and uses it. Let's move beyond the tired question of whether AI will replace developers and focus on how it can augment developer capabilities.</p><p>Share your thoughts below!</p>","contentLength":10518,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"The Magic of Embeddings: How AI Understands Language Like Humans","url":"https://dev.to/kumarprateek18/the-magic-of-embeddings-how-ai-understands-language-like-humans-741","date":1739761804,"author":"Prateek kumar","guid":881,"unread":true,"content":"<p>Ever wondered how AI chatbots generate relevant, intelligent responses in real-time? The secret lies in —the technology that enables AI to understand and process language, images, and data like humans. These powerful numerical representations allow AI to  meaningful content, forming the backbone of <strong>Retrieval-Augmented Generation (RAG)</strong>.</p><p>In this blog, we’ll explore what embeddings are, how they work, and why they are crucial for AI-driven applications like chatbots, search engines, and recommendation systems.</p><p>Embeddings are numerical representations of words, sentences, images, or documents in a high-dimensional space. They allow AI models to capture semantic relationships between different pieces of data. Instead of using plain text, AI converts these elements into vectors (arrays of numbers), enabling efficient comparison and retrieval.</p><h3><strong>Why Are Embeddings Important?</strong></h3><p>Traditional keyword-based search methods rely on exact word matches, which have major limitations:</p><ul><li>They fail to understand synonyms (e.g., \"car\" and \"automobile\" are considered different words).</li><li>They do not capture contextual meaning (e.g., \"bank\" as a financial institution vs. \"bank\" as a riverbank).</li><li>They struggle with large datasets, making searches inefficient.</li></ul><p>Embeddings solve these problems by representing words, phrases, and documents as vectors in a mathematical space, allowing AI systems to <strong>find similarities based on meaning rather than exact wording</strong>.</p><h2><strong>How Are Embeddings Used in Retrieval-Augmented Generation (RAG)?</strong></h2><p>One of the most powerful applications of embeddings is in <strong>Retrieval-Augmented Generation (RAG)</strong>. RAG combines <strong>retrieval (finding relevant data)</strong> with <strong>generation (creating responses using an LLM)</strong> to produce intelligent, context-aware answers.</p><ol><li> Documents are split into smaller chunks and transformed into embeddings.</li><li> When a user asks a question, the system converts the query into an embedding and finds the most relevant chunks.</li><li> The retrieved chunks are provided as context to an LLM (like GPT-4), which generates a response based on the retrieved knowledge.</li></ol><p>RAG ensures that AI models can access <strong>up-to-date, domain-specific knowledge</strong> while maintaining  in responses, making it ideal for chatbots, search engines, and enterprise AI applications.</p><h2><strong>How Are Embeddings Created?</strong></h2><p>Embeddings are generated using machine learning models trained on vast amounts of text or image data. Some popular models include:</p><ul><li> (for fast similarity search)</li></ul><h3><strong>Mathematical Representation</strong></h3><p>Each word or sentence is represented as a point in an N-dimensional space. The closer two vectors are in this space, the more similar they are in meaning. For example:</p><div><table><thead><tr></tr></thead><tbody></tbody></table></div><p>Here, \"king\" and \"queen\" have similar embeddings, while \"apple\" is farther apart, indicating that it belongs to a different concept.</p><h2><strong>How Are Embeddings Used in AI Applications?</strong></h2><h3><strong>1. AI Chatbots and Custom Data Search</strong></h3><p>When building an AI chatbot that understands company-specific documents, embeddings help by:</p><ul><li>Splitting documents into .</li><li>Converting chunks into .</li><li>Storing embeddings in a  (e.g., ChromaDB, Pinecone, FAISS).</li><li>Converting user queries into  and retrieving relevant document chunks.</li><li>Passing the retrieved data to an LLM (Large Language Model) for response generation.</li></ul><h3><strong>2. Similarity Search &amp; Information Retrieval</strong></h3><p>Instead of searching by keywords, AI can retrieve documents or images by . When a user queries a system, the system:</p><ol><li>Converts the query into an embedding.</li><li>Searches for similar embeddings in the vector database.</li><li>Returns the most relevant documents, even if they use different words.</li></ol><h3><strong>3. Recommendation Systems</strong></h3><p>Spotify, Netflix, and YouTube use embeddings to recommend content:</p><ul><li>If you watch sci-fi movies, the system retrieves other movies with similar embeddings.</li><li>Music streaming services recommend songs based on user-listened embeddings.</li></ul><h3><strong>4. Search Engine Optimization (SEO)</strong></h3><p>Google’s search algorithm heavily relies on embeddings to rank pages by  rather than exact keyword matches.</p><h2><strong>Mathematical Explanation of Similarity Search</strong></h2><p>To find similar embeddings, AI systems use , which measures the angle between two vectors.</p><h3><strong>Formula for Cosine Similarity:</strong></h3><p>cos(θ) = (A · B) / (||A|| * ||B||).</p><ul><li>(||A||) and (||B||) are the  of the vectors.</li></ul><p>If , the vectors are identical (perfect match). If , the vectors are unrelated.</p><p>This allows AI to find the <strong>most relevant text, images, or documents efficiently</strong>.</p><h2><strong>Building a Simple AI Chatbot with Embeddings</strong></h2><h3><strong>Using OpenAI’s Embeddings API</strong></h3><div><pre><code></code></pre></div><h3><strong>Using LangChain and ChromaDB for Vector Search</strong></h3><div><pre><code></code></pre></div><h2><strong>Conclusion: Why Embeddings Are a Game-Changer</strong></h2><p>✅ <strong>Embeddings allow AI to \"understand\" language mathematically.</strong>\n✅ <strong>They make similarity search fast and scalable.</strong>\n✅ <strong>They enable AI to retrieve and use relevant information dynamically.</strong>\n✅ <strong>They power many AI applications, from chatbots to recommendation systems.</strong></p><p>By leveraging embeddings and vector databases, businesses can <strong>enhance AI applications with custom knowledge</strong> and <strong>deliver smarter, context-aware responses</strong>.</p>","contentLength":4900,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Unlocking Your Brand's True Potential: How AI Search Grading Reveals the Path to Digital Dominance","url":"https://dev.to/seosiri/unlocking-your-brands-true-potential-how-ai-search-grading-reveals-the-path-to-digital-dominance-52nh","date":1739760552,"author":"Momenul Ahmad","guid":880,"unread":true,"content":"<p>Decoding the Language of Your Brand's Online Presence</p><p>In today's hyper-competitive digital landscape, your brand's success hinges on more than just keywords. It's about understanding the intricate tapestry of conversations woven around your brand online. </p><p>Imagine having a powerful AI-driven lens that not only reveals what people are saying about your brand but also deciphers the emotions and motivations behind their words. That's the transformative power of AI search grading. </p><p>Tools like HubSpot's AI Search Grader, fueled by OpenAI's cutting-edge sentiment analysis, act as digital detectives. They meticulously dissect online conversations to uncover invaluable insights about your brand, your competitors, and the ever-evolving trends shaping your industry. </p><p>Beyond Keywords: Decoding the Language of Your Brand's Digital DNAAI search grading transcends the limitations of traditional keyword analysis. It delves into the nuanced world of online discourse, analyzing a multitude of factors to paint a comprehensive portrait of your brand's digital presence.</p><p>Think of it as a sophisticated sentiment analysis engine that gauges the overall feeling and tone surrounding your Brand.</p><p>Let's be bold through AI Search Grading Valuation, Analysis, and Implementation Stage 1.2.3, which will unveil the answer to how AI Search Grading Reveals the Path to Digital Dominance.</p><p>Are you booming in <a href=\"https://www.seosiri.com/2024/12/ai-overview-search-results.html\" rel=\"noopener noreferrer\">AI SERPs</a>, Or Grave Yearded your Brand on AI SERPs Ground?</p><p>Raise voice, share voice for either get help or the communities.</p>","contentLength":1507,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"How to Connect with Someone on Qatar Airways?(((Quick-Guide)))","url":"https://dev.to/shruti_e0d48bf281e1dee18b/how-to-connect-with-someone-on-qatar-airwaysquick-guide-55kl","date":1739752790,"author":"Shruti","guid":849,"unread":true,"content":"<p>Are you looking to get in touch with Qatar Airways? Whether you need to inquire about booking, change your flight,((+44-800-066-3343)) or need assistance with a specific request, ((+1-888-690-5358)) connecting with the airline’s customer service is straightforward.+44-800-066-3343 Here’s a quick guide on how to reach out.</p>","contentLength":327,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Enhancing Web Development with JavaScript Voice UI Technology","url":"https://dev.to/sista-ai/enhancing-web-development-with-javascript-voice-ui-technology-a0g","date":1739751363,"author":"Sista AI","guid":848,"unread":true,"content":"<p>In today's digital landscape, the integration of Voice User Interfaces (VUIs) in web development is reshaping user experiences and interactions, spurred by the rapid advancements in voice technology and AI. Harnessing the power of JavaScript voice UI technology opens new avenues for immersive, hands-free engagement on the web. As users gravitate towards seamless and intuitive interfaces, developers are exploring innovative ways to integrate VUIs seamlessly into web applications.</p><h2>Advancing User Experiences</h2><p>With the rise of voice technology, more than 50% of searches are projected to be voice-based by 2025, signifying a profound shift in user preferences towards voice interfaces. Incorporating VUIs in web development offers hands-free navigation and intuitive interactions, enhancing accessibility and usability. For instance, a recipe platform can provide recipes through voice commands, streamlining user engagement and convenience.</p><h2>Revolutionizing Development With JavaScript</h2><p>Developers are leveraging technologies like the Web Speech API to implement speech recognition seamlessly in browsers, enabling users to interact with web content through voice commands. This simplifies the integration of voice features without the need for specialized infrastructure, enhancing the overall user experience. Node.js backend integration further enhances dynamic application responsiveness to voice commands, creating more interactive and engaging applications.</p><h2>Empowering Frontend Capabilities</h2><p>Frontend considerations play a critical role in building voice-enabled applications, ensuring seamless UI updates based on voice interactions. React applications, for example, can dynamically respond to voice commands, providing a customized user experience. By incorporating components that handle voice commands, developers can enhance user engagement and accessibility through intuitive voice interactions.</p><h2>Testing and Iterative Enhancement</h2><p>Testing VUI applications across various devices and user inputs is essential to ensure robust performance and user satisfaction. Through unit testing and user feedback analysis, developers can refine interaction models and enhance user experiences. Iterative design based on real user feedback ensures continuous improvement, optimizing VUI applications for diverse user needs and preferences.</p><h2>Seamless Integration With Sista AI</h2><p>Integrating Sista AI's Voicebot technology offers a seamless way to enhance VUI capabilities in web development. By leveraging Sista AI's AI Voice Assistant, businesses can elevate user engagement, accessibility, and efficiency. Discover the power of JavaScript voice UI technology with Sista AI's innovative solutions.</p><a href=\"https://smart.sista.ai?utm_source=sista_blog_devto&amp;utm_medium=blog_post&amp;utm_campaign=big_logo\" rel=\"noopener noreferrer\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fvuic-assets.s3.us-west-1.amazonaws.com%2Fsista-make-auto-gen-blog-assets%2Fsista_ai.png\" alt=\"Sista AI Logo\" width=\"640\" height=\"170\"></a><a href=\"https://smart.sista.ai?utm_source=sista_blog_devto&amp;utm_medium=blog_post&amp;utm_campaign=product_btn_screenshot\" rel=\"noopener noreferrer\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fsmart.sista.ai%2Fimages%2Fsista%2Fsista-button.png\" alt=\"AI ChatBot\" width=\"800\" height=\"360\"></a><a href=\"https://smart.sista.ai?utm_source=sista_blog_devto&amp;utm_medium=blog_post&amp;utm_campaign=product_admin_screenshot\" rel=\"noopener noreferrer\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fsmart.sista.ai%2Fimages%2Fsista%2Fsista-admin-dark.png\" alt=\"AI Integration Platform\" width=\"800\" height=\"507\"></a>","contentLength":2679,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Building Powerful AI Systems that Solve Real-World Problems with The Power of Model Context Protocol (MCP)","url":"https://dev.to/michelle_sebek_/building-powerful-ai-systems-that-solve-real-world-problems-with-the-power-of-model-context-mha","date":1739748692,"author":"michelle sebek","guid":831,"unread":true,"content":"<p>Artificial Intelligence (AI) continues to evolve, one area that's seeing tremendous growth is the integration of Large Language Models (LLMs) with a variety of data sources, tools, and services. However, achieving smooth and consistent integration across various platforms and environments has always been a challenge for developers. This is where the Model Context Protocol (MCP) comes in.</p><p>Launched and steadily advancing through the spring-ai-mcp experimental project, MCP has become a game changer for developers who are looking to build intelligent systems, agents, and workflows powered by LLMs. By providing a unified way to connect AI models to multiple data sources and tools, MCP simplifies what could otherwise be a complicated and fragmented integration process. Let's dive into why this is so important and how the Model Context Protocol is shaping the future of AI development.</p><h2>\n  \n  \n  What Is the Model Context Protocol (MCP)?\n</h2><p>The Model Context Protocol (MCP) is a powerful and flexible protocol that serves as the foundation for connecting Large Language Models (LLMs) to different external systems, APIs, and tools. MCP provides a standardized framework that ensures smooth communication between LLMs and external resources, enabling developers to build intelligent agents and complex workflows without worrying about the underlying complexities of data integration.</p><p>MCP offers a set of protocols and interfaces that abstract away the difficulties involved in linking your AI models to various services. Instead of worrying about how to interface with different data sources and tools, developers can rely on MCP to ensure that everything works seamlessly.</p><h2>\n  \n  \n  Key Benefits of MCP for LLMs\n</h2><p><strong>1. Pre-built integrations for Easy Connectivity</strong>\nMCP simplifies the integration process by offering a growing list of pre-built integrations. These integrations allow your LLM to easily connect to external tools, data sources, and services. Whether it’s a database, API, or a specialized service, MCP ensures that the LLM can access and interact with it without friction.</p><p><strong>2. Flexibility to Switch Between Providers</strong>\nThe ability to switch between different LLM providers and vendors is critical. MCP empowers developers to change providers with minimal hassle, ensuring that your application remains flexible and adaptable to future advancements in AI technology.</p><p><strong>3. Standardized Interfaces for Tool Discovery and Execution</strong>\nMCP provides standardized interfaces for tool discovery and execution, streamlining the process of finding and interacting with external systems. This allows developers to quickly build and modify workflows incorporating various tools and services, without worrying about proprietary integration methods.</p><p><strong>4. Seamless Model-to-Data Communication</strong>\nSince LLMs often need to work with external data sources to enhance their capabilities, MCP acts as the bridge that connects them seamlessly. Whether you're pulling in data for training or providing real-time input during model execution, MCP ensures smooth communication between the model and external systems.</p><h2>\n  \n  \n  The Evolution of MCP in Spring AI\n</h2><p>The spring-ai-mcp project began as an experimental initiative last November and has evolved into a core part of the MCP Java SDK. This SDK is the result of collaboration between the Spring AI team and David Soria Parra and colleagues at Anthropic,aiming to make #MCP an official standard within the Java ecosystem.</p><p>The MCP Java SDK comes with a variety of features that make it incredibly powerful and adaptable for developers:</p><h2>\n  \n  \n  Core Capabilities of the MCP Java SDK:\n</h2><p><strong>Synchronous and Asynchronous MCP Client/Server Implementations:</strong> This gives developers flexibility in how they handle communication between their AI models and external systems, ensuring that both time-sensitive and long-running tasks are properly managed.<strong>Protocol Version Compatibility Negotiation:</strong> Ensures backward and forward compatibility, so your application can evolve over time without breaking existing integrations.<strong>Tool Discovery and Execution with Change Notifications:</strong> Keeps you informed about changes in your toolset, ensuring that your workflows stay up to date.<strong>Resource Management with URI Templates:</strong> Simplifies resource management by allowing dynamic handling of resources and their associated URIs.<strong>Roots List Management and Notifications:</strong> Manages resources and provides updates to keep developers informed of changes to the environment.<strong>Prompt Handling and Management:</strong> Allows for sophisticated handling of model inputs and outputs, ensuring that your interactions with the model are as efficient as possible. Facilitates AI model interactions with support for various sampling strategies, enabling more control over model behavior and output.</p><h2>\n  \n  \n  Multiple Transport Options for Flexibility\n</h2><p>The MCP Java SDK supports several transport mechanisms, allowing developers to choose the method that best fits their application architecture:</p><p> Ideal for process-based communication, this transport method is simple and efficient.<strong>Java HttpClient-Based SSE Client Transport:</strong> Great for handling server-sent events (SSE) in web applications.<strong>Servlet-Based SSE Server Transport:</strong> Supports servlet-based applications with SSE for real-time communication.<strong>Spring-Specific Transports</strong>: For Spring developers, there are two options:\n Designed for reactive HTTP streaming in applications built with Spring <strong>- WebFlux.WebMVC SSE Transport:</strong>\nBest suited for traditional servlet-based applications using Spring MVC.</p><h2>\n  \n  \n  Why MCP Matters for the Future of AI\n</h2><p>MCP is more than just a tool for LLM integration—it’s a framework that enables developers to build smarter, more powerful AI-driven applications with ease. The protocol provides scalability, flexibility, and extensibility, all while promoting consistency and standardization in the way AI models interact with external resources.</p><p>As AI technology continues to grow and become more integrated into our daily lives, tools like MCP will be essential for ensuring that these powerful models can work effectively with real-world data and tools. Whether you're working on AI-powered chatbots, recommendation systems, or autonomous agents, MCP is the glue that can tie it all together, enabling seamless, consistent, and efficient AI solutions. <a href=\"https://youtu.be/cE1h-rC2o2U?si=Tczv_W9evmH9u1sG\" rel=\"noopener noreferrer\">Check out the video by Josh Long</a></p><p>With <a href=\"https://spring.io/blog/2025/02/14/spring-ai-1-0-0-m6-released\" rel=\"noopener noreferrer\">Spring AI and the Model Context Protocol</a> (MCP), developers have the tools they need to create intelligent, interconnected applications powered by Large Language Models. By simplifying integration and offering flexibility, MCP allows developers to focus on what really matters—building powerful AI systems that solve real-world problems.</p><p>The future of<a href=\"https://spring.io/projects/spring-ai\" rel=\"noopener noreferrer\"> AI development</a> is here, and it's more connected than ever.</p><p>Feel free to leave a comment or reach out if you have any questions about how you leverage MCP in your projects! Let’s connect and discuss the future of AI integration. 🚀</p>","contentLength":6914,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"فكرة استخدام الذكاء الاصطناعي لإنشاء ألعاب أو تطبيقات بناءً على قصة تكتبها هي فكرة مبتكرة ومثيرة","url":"https://dev.to/mohamed_gafaar_a83dae3bcb/fkr-stkhdm-ldhk-lstny-lnsh-lb-w-ttbyqt-bnan-l-qs-tktbh-hy-fkr-mbtkr-wmthyr-1o7d","date":1739748259,"author":"Mohamed Gafaar","guid":830,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"فكرة استخدام الذكاء الاصطناعي لإنشاء ألعاب أو تطبيقات بناءً على قصة تكتبها هي فكرة مبتكرة ومثيرة!","url":"https://dev.to/mohamed_gafaar_a83dae3bcb/fkr-stkhdm-ldhk-lstny-lnsh-lb-w-ttbyqt-bnan-l-qs-tktbh-hy-fkr-mbtkr-wmthyr-22he","date":1739747411,"author":"Mohamed Gafaar","guid":829,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Create Realtime ChatApp Website Without Coding by Create.xyz 🔥 🚀","url":"https://dev.to/hanzla-baig/create-realtime-chatapp-website-without-coding-by-createxyz-1ec2","date":1739742786,"author":"Hanzla Baig","guid":784,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"[D]How to handle highly imbalanced dataset?","url":"https://www.reddit.com/r/MachineLearning/comments/1ir2zm3/dhow_to_handle_highly_imbalanced_dataset/","date":1739740969,"author":"/u/ThickDoctor007","guid":879,"unread":true,"content":"<p>I’m working on an insurance claims prediction model, and I’d love to get insights from the community on tackling a highly imbalanced dataset. In the past, I built churn prediction models, and now I’m focusing on predicting insurance claims, where the percentage of claims is quite low.</p><p>My dataset spans 15 years and contains ~800,000 records with features such as sex, age, horsepower, car brand &amp; type </p>","contentLength":408,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Unlocking the Power of Language Models: A Deep Dive into LangChain 🤖💻","url":"https://dev.to/nilavya2000/unlocking-the-power-of-language-models-a-deep-dive-into-langchain-23fb","date":1739737663,"author":"Nilavya Das","guid":769,"unread":true,"content":"<p>In recent years, language models have revolutionized the way we interact with technology. From conversational AI to text generation, these models have shown incredible promise in a variety of applications. But what's behind their power? In this blog, we'll be exploring the world of LangChain, an open-source framework that's pushing the boundaries of what's possible with language models.</p><p>LangChain is an open-source framework built on top of the Hugging Face Transformers library. It provides a flexible and modular way to work with language models, allowing developers to easily integrate them into their applications. With LangChain, you can create custom workflows that combine multiple language models to achieve complex tasks.</p><p><strong>The Power of Language Models 💪</strong></p><p>Language models are trained on vast amounts of text data, learning patterns and relationships between words. This allows them to generate text, answer questions, and even engage in conversation. But what makes language models so powerful?</p><ul><li>: Language models can understand the context in which a piece of text is being used.</li><li>: Models can make connections between words and ideas.</li><li>: With LangChain, you can scale your language model to meet the needs of your application.</li></ul><p><strong>How Does LangChain Work? 🤔</strong></p><p>LangChain uses a modular architecture to combine multiple language models. This allows developers to create custom workflows that take advantage of different strengths in each model.</p><ul><li>: The core component of LangChain, which links together multiple models.</li><li>: A self-contained unit that can be used to build your workflow.</li><li>: A set of parameters that define how the chain and modules interact with each other.</li></ul><p><strong>Real-World Applications 🌎</strong></p><p>LangChain has a wide range of applications, from chatbots and text generation to content creation and even education. Here are just a few examples:</p><ul><li>: Use LangChain to create conversational interfaces that can understand user intent.</li><li>: Generate high-quality text with the help of LangChain's language models.</li><li>: Automate content generation with the power of LangChain.</li></ul><p>Ready to start exploring LangChain? Here are some next steps:</p><ul><li>: Install LangChain using pip: </li><li>: Start building your own workflow with LangChain.</li></ul><p>LangChain is an exciting new framework that's pushing the boundaries of what's possible with language models. With its modular architecture and flexible design, LangChain makes it easy to create custom workflows that take advantage of multiple language models. Whether you're a developer or researcher, LangChain is definitely worth checking out.</p>","contentLength":2542,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"[Boost]","url":"https://dev.to/proxyos/-3jp6","date":1739737488,"author":"Ifedamola Adefisoye","guid":768,"unread":true,"content":"<h2>Affordable AI Models and Opportunities for Emerging Markets: Race to the top</h2><h3>Ifedamola Adefisoye ・ Jan 28</h3>","contentLength":106,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Ingesting documents using .NET to build a simple Retrieval Augmented Generation (RAG) system","url":"https://dev.to/syamaner/a-simple-approach-for-ingesting-documents-using-net-for-a-simple-retrieval-augmented-generation-47e1","date":1739732112,"author":"sy","guid":728,"unread":true,"content":"<p>Here is a quick post summarising how to use .NET Semantic Kernel, Qdrant and .Net to ingest markdown documents. One of the comments <a href=\"https://dev.to/syamaner/building-a-simple-retrieval-augmented-generation-system-using-net-aspire-4pdp\">a recent post</a> related to the topic was about why using Python for ingestion instead of .NET. That was a personal preference at the time but also using .NET with Semantic Kernel to ingest documents for a simple pipeline is not necessarily any more work. </p><p>In this post, we will go through the ingestion process utilising high level libraries available to us in .NET ecosystem.</p><ul><li>.NET Semantic Kernel and related connectors for managing vector store</li><li>LangChain .NET for chunking</li><li>.NET Aspire to bring it all together using one of the Inference APIs. (Ollama on host, Ollama as container managed by ASPIRE or OpenAI)</li></ul><p>In the Python version, we can either pull the documents from a GitHub Repository or use a file generated by <a href=\"https://gitingest.com/\" rel=\"noopener noreferrer\">GitIngest UI</a>. HitIngest is an open source library allowing consumers to integrate ability to scrape public repositories from GitHub or manually downloading a file using the Web UI linked earlier.</p><p>The ingestion process in this example is straightforward and we follow the steps illustrated below. </p><p>As we are using a single file containing multiple .md and .yml files as described above, first step is to split them into filename, file content pairs. </p><p>The files are separated by headers as following:</p><div><pre><code>... content\n================================================\nFile: README.md\n================================================\n... content\n</code></pre></div><p>Given this is a throw away example, code below is just enough to demonstrate the process without much distractions.</p><div><pre><code></code></pre></div><p>Now that we have a Dictionary of file names and file content, we now need to get chinks for the file contents.</p><div><pre><code></code></pre></div><h3>\n  \n  \n  Getting embedding for the chunks\n</h3><p>We are using Semantic Kernel so this part is straightforward and will work with whichever API we chose to use. Given we have so far split the file, and got the chunks for each document, we can use the registered ITextEmbeddingGenerationService (this is driven by app and aspire configuration) to compute the embeddings using the inference approach we have configured.</p><p>We also have some custom metrics we are tracking that are visible on Aspire Dashboard as we perform ingestion.</p><div><pre><code></code></pre></div><p>Now that we have the embeddings, we need to insert them. This process involves a few steps:</p><ul><li>Mapping a .NET class to a vector store document</li><li>Ensuring the Collection exists (optionally recreated)</li><li>Using correct dimensions for the collection which depends on what embedding model we use.</li></ul><p>We can use attributes for mapping but in this demo we can use multiple embedding models and they have different dimensions for embedding vectors so using attributes would mean hardcoding these. </p><p>We can however define our  VectorStoreRecordDefinition in code so that we can at runtime chose the correct dimensions for our collection. </p><div><pre><code></code></pre></div><p>When bootstrapping we can then use our factory and register it with .NET Semantic Kernel so whenever we inject and  we will have our mappers integrated in the pipeline.</p><div><pre><code>        var options = new QdrantVectorStoreOptions\n        {\n            HasNamedVectors = true,\n            VectorStoreCollectionFactory = new QdrantCollectionFactory(embeddingModelName)\n        };\n        kernelBuilder.AddQdrantVectorStore(options: options);\n    }\n</code></pre></div><h4>\n  \n  \n  Inserting vectors to our collection\n</h4><p>Once we handle the registration and configuration, we are ready to consume  in our code and make use of it. So in our <a href=\"https://github.com/syamaner/moonbeans/blob/performance_evaluation/src/AspireRagDemo.API/Ingestion/IngestionPipeline.cs\" rel=\"noopener noreferrer\">IngestionPipeline.cs</a> we need to perform the following:</p><ul><li>Ensure collection exits:\n\n<ul><li>Create if it does not or recreate if required.</li></ul></li><li>Insert the vectors as below:\n</li></ul><div><pre><code></code></pre></div><p>In this quick post we have covered using TextSplitters from LangChain .NET, Vector Stores and Embedding models via .NET Semantic Kernel and some custom metrics captured during ingestion.</p><p>Without much code, we can get impressive results using what is available to us in .NET world and if you would like to see the results here is how to:</p><ul><li>Use  configuration in the AppHost Project.</li><li>Wait for models to one downloaded and started</li><li>Then use the <a href=\"https://github.com/syamaner/moonbeans/blob/performance_evaluation/src/AspireRagDemo.API/AspireRagDemo.API.http\" rel=\"noopener noreferrer\">src/AspireRagDemo.API/AspireRagDemo.API.http</a> and execute <code>http://localhost:5026/ingest?fileName=dotnet-docs-aspire.txt</code> call. Depending on model size and CPU, tis can take somewhere between 30 seconds to 15 minutes.</li><li>Once ingestion completed, access the UI from Aspire Dashboard and run some Aspire Related queries.</li></ul><p>In addition, feel free to explore the metrics as below:</p>","contentLength":4387,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Novel Optimization Algorithms: From Entertainment to Military Applications","url":"https://dev.to/_hm/novel-optimization-algorithms-from-entertainment-to-military-applications-22h5","date":1739730131,"author":"Hussein Mahdi","guid":727,"unread":true,"content":"<p>My passion lies in developing military applications, driven by the field's cutting-edge technological advancements and strategic importance. The complexity and innovation inherent in defense technology continually motivate my professional growth and contributions.</p><p>In my recent research on swarm algorithms and which ones are best for the research I am seeking, recent developments in Swarm Intelligence have introduced two intriguing approaches: <strong>the Squid Game Optimizer (SGO) and Special Forces Algorithm (SFA)</strong>. These algorithms represent an evolution beyond traditional nature-inspired optimization methods, drawing inspiration from strategic competition and military operations.</p><p>The Squid Game Optimizer (SGO), inspired by the Netflix series, implements principles of strategy, competition, and cooperation in optimization problems. Its primary applications include multi-agent systems and complex decision-making scenarios, particularly in drone swarm coordination and defense system optimization.</p><p>Similarly, the Special Forces Algorithm (SFA) adapts military tactical operations and precision planning methodologies to address optimization challenges. This approach emphasizes stealth, adaptability, and coordinated operations under high-pressure conditions. SFA shows particular promise in military AI applications, real-time decision-making, and high-risk environments.</p><p>These algorithms have demonstrated significant potential in multi-agent systems, particularly in defense technology applications such as radar optimization and compression sensing. Their implementation represents a shift toward more specialized optimization approaches that combine strategic decision-making with tactical precision.</p><p>For detailed technical specifications and implementation guidelines, refer to:</p><p>Squid Game Optimizer (SGO): </p><p>What are your thoughts on applying these novel optimization approaches to current technological challenges?</p>","contentLength":1919,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Crafting natural, engaging content is now simpler than ever. With humanizer ai https://humaniser.ai/ , you can enhance your writing and turn AI-generated drafts into smooth, human-like text.","url":"https://dev.to/11january11/crafting-natural-engaging-content-is-now-simpler-than-ever-with-humanizer-ai-5039","date":1739729919,"author":"11january11","guid":726,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"R.I.P. RAG? Gemini Flash 2.0 Might Just Have Revolutionized AI (Again) - Is Retrieval Augmented Generation Obsolete?","url":"https://dev.to/shaman_shetty/rip-rag-gemini-flash-20-might-just-have-revolutionized-ai-again-is-retrieval-augmented-e5k","date":1739729254,"author":"Shaman Shetty","guid":725,"unread":true,"content":"<p><strong>You clicked because you're in the AI trenches, right?</strong> You're wrestling with Large Language Models (LLMs), trying to make them actually useful for real-world applications. And chances are, you've heard the buzz around <strong>Retrieval Augmented Generation (RAG)</strong>. It was supposed to be the holy grail, the key to unlocking truly knowledgeable and reliable AI.</p><p>Well, buckle up, because the ground is shifting. Faster than you can say \"context window,\"  has arrived, and it's throwing a serious wrench into the RAG machine. Dare I say, it might even be… </p><p>Okay, maybe \"killing\" is dramatic. But as a writer and AI enthusiast, I’m seeing a seismic shift. And if you’re building AI applications, you need to pay attention.</p><p><strong>First, a Quick RAG Refresher (For the Uninitiated):</strong></p><p>Imagine an LLM as a brilliant but slightly forgetful savant. It knows language inside and out, but its knowledge of the world is limited to what it was trained on. **RAG **is like giving that savant a constantly updated encyclopedia.</p><ul><li><p>: When you ask a question, RAG first searches a vast external knowledge base (think documents, databases, websites).</p></li><li><p>: It then injects the relevant information it finds into the prompt it sends to the LLM.</p></li><li><p>: The LLM, now armed with fresh, context-specific knowledge, generates a more informed and accurate answer.</p></li></ul><p><strong>RAG was brilliant in theory and often effective in practice. It allowed us to:</strong></p><ul><li><strong>Overcome LLM knowledge cut-offs:</strong> Access information beyond the training data.</li><li><strong>Improve accuracy and reduce hallucinations:</strong> Ground answers in verifiable facts.</li><li><strong>Customize knowledge for specific domains:</strong> Tailor AI to niche industries and datasets.</li></ul><p><strong>So, what's the problem? Why is Gemini Flash 2.0 potentially turning RAG into yesterday's news?</strong></p><p><strong>Enter Gemini Flash 2.0: The Context King</strong></p><p>The core issue with RAG, despite its ingenuity, is its inherent complexity and overhead. It's like adding a complex plumbing system to your AI application. It works, but it’s… well, complex.</p><p>, on the other hand, takes a drastically different approach. Its game-changing feature? A MASSIVE context window.</p><p>We're talking about . Let that sink in. That's enough to feed entire books, research papers, and vast swathes of data directly into the model's prompt.</p><p>Suddenly, the need for external retrieval shrinks dramatically. Gemini Flash 2.0 can effectively become its own RAG system, internally digesting and processing huge amounts of information within a single prompt.</p><p>Here's why this is a potential  from a practical perspective:</p><ul><li><strong>Simplicity and Efficiency:</strong> Forget building complex retrieval pipelines, indexing knowledge bases, and managing data flow between systems. Gemini Flash 2.0 streamlines everything. You feed it the data, and it just… knows. This means faster development, simpler deployment, and less maintenance.</li><li> RAG solutions often require significant infrastructure to manage the knowledge base, retrieval mechanisms, and data processing. Gemini Flash 2.0, with its massive context window, potentially reduces this overhead significantly. You're paying for a powerful model, not a complex ecosystem around it.</li><li><strong>Speed and Real-time Access:</strong> RAG introduces latency. There's a delay for retrieval, processing, and augmentation before the LLM even generates the answer. Gemini Flash 2.0, with its internalized knowledge, can potentially provide faster, near real-time responses, as the relevant information is already within its processing scope.</li><li><strong>Reduced Complexity for Developers:</strong> Let's be honest, implementing and fine-tuning RAG can be a developer headache. Gemini Flash 2.0 promises to simplify AI development, allowing developers to focus on the core application logic rather than the intricate data plumbing.</li></ul><ul><li><strong>Customer Service Chatbots:</strong> Instead of RAG searching FAQs and knowledge articles, you could feed a vast, updated knowledge base directly into Gemini Flash 2.0's context window. Instant, accurate answers, no external retrieval needed.</li><li><strong>Research and Analysis Tools:</strong> Researchers could feed entire libraries of documents into Gemini Flash 2.0 and have it analyze and synthesize information in ways previously unimaginable without complex RAG setups.</li><li><strong>Content Creation and Summarization:</strong> Feed massive datasets, reports, or even books into Gemini Flash 2.0 and have it generate summaries, extract key insights, or create derivative content, all without the overhead of external retrieval.</li></ul><p><strong>Is RAG Completely Dead? Probably Not (Yet).</strong></p><p>Let's be realistic. RAG might still have a niche in specific scenarios:</p><ul><li><strong>Extremely Dynamic and Volatile Data:</strong> If your knowledge base changes constantly in real-time (think stock prices or live social media feeds), a RAG system might still be beneficial for grabbing the absolute latest information. However, even here, Gemini Flash 2.0's speed might surprise us.</li><li><strong>Highly Specialized and Segmented Knowledge:</strong> In scenarios where you need to access very specific, siloed knowledge bases with strict access controls, RAG might offer more granular control.</li><li><strong>Cost Considerations (Potentially):</strong> While Gemini Flash 2.0 promises efficiency, the cost of processing massive context windows could be a factor. For extremely low-budget, basic applications, simpler RAG implementations might still be considered.</li></ul><p><strong>But the writing is on the wall</strong>. The trend in LLMs is towards larger context windows. Gemini Flash 2.0 is just the first major player to truly unleash this potential. As context windows grow even larger, the argument for complex, external RAG systems becomes increasingly weak.</p><p>. And Gemini Flash 2.0 is leading the charge.</p><p><strong>What does this mean for you?</strong></p><ul><li>If you're currently building RAG systems, it's time to seriously evaluate Gemini Flash 2.0. Explore its capabilities and see if it can simplify your architecture and improve performance.</li><li><p>If you're just starting to explore AI applications, consider Gemini Flash 2.0 as a powerful and potentially simpler alternative to RAG-heavy approaches.</p><p>Keep an eye on the context window race. As other models follow suit, the entire AI landscape will be reshaped.</p></li></ul><p>This isn't just an incremental improvement. It feels like a paradigm shift. Gemini Flash 2.0 isn't just another LLM; it's potentially redefining how we build and deploy AI. And for RAG, it might just be the beginning of the end.</p><p><strong>What are your thoughts? Is RAG doomed? Is Gemini Flash 2.0 truly a game-changer? Let's discuss in the comments below!</strong></p><p>I hope you enjoyed reading.I definitely had a lot of fun writing this😎. </p>","contentLength":6410,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Hinton: \"I thought JD Vance's statement was ludicrous nonsense conveying a total lack of understanding of the dangers of AI ... this alliance between AI companies and the US government is very scary because this administration has no concern for AI safety.\"","url":"https://www.reddit.com/r/artificial/comments/1iqy8te/hinton_i_thought_jd_vances_statement_was/","date":1739729055,"author":"/u/MetaKnowing","guid":718,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Another LLM wrapper","url":"https://dev.to/alessiochiffi/another-llm-wrapper-44h5","date":1739728318,"author":"alessiochiffi","guid":703,"unread":true,"content":"<p>Like many of us, I have been fascinated by the capabilities of tools like ChatGPT, Google Gemini, Claude and so on. As someone who loves coding and trying new tools, I wanted to explore what these models can offer via their APIs.</p><p>I previously experimented with OpenAI so I wanted to try something different. I opted for Google Gemini AI mainly because of its generous free tier and low costs.</p><p>My aim was to create a simple proof-of-concept (POC) page to check grammatical errors by pasting or typing text into a text box and receiving feedback from the AI. I quickly set up the app with the following tech stack:</p><ul></ul><p>I then started by creating an API endpoint - using Nuxt’s server/api folder - to manage all LLM interactions server side.</p><h2>\n  \n  \n  🔌 11 lines of code to connect to the model\n</h2><div><pre><code></code></pre></div><p>After defining the model, I could send instructions to the model, along with the text provided by the user in the frontend app. </p><p>Below is a simplified version of the function that initiates a chat with the model.</p><div><pre><code></code></pre></div><p>The frontend is made by a simple form with a textbox and a 'Submit' button where the user can type or paste text.</p><p>We then send a request to the API endpoint created, which processes it with Gemini AI and returns the results back to the frontend.</p><p>On the dashboard’s right panel, the response provides a summary and suggested changes, when available</p><p>One standout feature of Google Gemini's API is its support for custom response schemas. </p><p>Using this feature, I could configure the model to indicate whether a sentence is grammatically correct and, if not, to provide a corrected version.</p><p>Here’s the schema I used:</p><div><pre><code></code></pre></div><p>For example, when evaluating the sentence: “Their going to be here soon.” the model returns:</p><div><pre><code></code></pre></div><p>This structured output makes it easy to process and display results in the frontend.</p><p>It's interesting that you can also describe each property and what you expect from the response using the description key within the schema object. </p><p>It certainly feels like writing this short post to share my journey took longer than implementing the LLM model itself.</p><p>Although my knowledge of AI is limited, I see immense potential in this technology. With much of the complexity abstracted away, we can focus on building products and exploring endless opportunities for innovation. Whether it’s a tool that simplifies our day-to-day tasks or a larger, more ambitious project, we can only embrace the possibilities this technology offers.</p><p>Cover image from Novoto Studio</p>","contentLength":2458,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Hugging Face Launches Free AI Agents Course with Certification!","url":"https://dev.to/fardinkai/hugging-face-launches-free-ai-agents-course-with-certification-g5a","date":1739727489,"author":"Mahmud Ahad Abedin Fardin","guid":702,"unread":true,"content":"<h2>Hugging Face Launches Free AI Agents Course with Certification!</h2>","contentLength":63,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Hugging Face Launches Free AI Agents Course with Certification!","url":"https://dev.to/riana-azad/hugging-face-launches-free-ai-agents-course-with-certification-2h7n","date":1739726531,"author":"Riana Azad","guid":701,"unread":true,"content":"<p>Hugging Face has introduced a free , complete with a certification to help you validate your skills. Whether you're just starting or looking to advance your expertise, this course covers everything you need to build AI-powered agents.</p><p><strong>What’s Inside the Course?</strong>\nThe course is structured into five comprehensive chapters, guiding learners from setup to building and benchmarking AI agents. Here's a breakdown:</p><p>🔹  – Get set up with the necessary tools and platforms.\n🔹 <strong>Agent Fundamentals (Chapter 1)</strong> – Learn core concepts like tools, thoughts, actions, observations, LLMs, special tokens, and chat templates. Includes a hands-on Python use case.\n🔹  – Explore popular AI agent frameworks, including SmolAgents, LangGraph, and LlamaIndex.\n🔹  – Build real-world AI applications and contribute to the community.\n🔹 <strong>Final Assignment (Chapter 4)</strong> – Develop an AI agent, benchmark it, and compete on a leaderboard!</p><p><strong>Who Can Take This Course?</strong>\nThis course is open to anyone with:<p>\n✔️ Basic Python knowledge</p>\n✔️ A fundamental understanding of LLMs (Unit 1 includes a refresher)<p>\n✔️ A free Hugging Face account</p></p><p>🏅 \nHugging Face offers two certification levels:<p>\n🏆 Fundamentals Certificate – Complete Unit 1 to demonstrate a solid grasp of AI agent basics.</p>\n🏆 Full Certificate of Completion – Finish Unit 1, complete a use-case assignment, and pass the final challenge to earn this advanced certification.</p>","contentLength":1429,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"AI-Powered Code Generation: The Future of Software Development","url":"https://dev.to/raajaryan/ai-powered-code-generation-the-future-of-software-development-2h3n","date":1739726112,"author":"Deepak Kumar","guid":700,"unread":true,"content":"<p>The software development landscape is undergoing a significant transformation with the rise of AI-powered code generation tools. Technologies like OpenAI’s Codex, GitHub Copilot, and Tabnine are reshaping how developers write, debug, and optimize code. But what does this mean for the future of programming?</p><h3>\n  \n  \n  What is AI-Powered Code Generation?\n</h3><p>AI-powered code generation refers to the use of machine learning models to assist developers in writing code. These models, trained on vast repositories of open-source code, can predict and generate code snippets, automate repetitive tasks, and even suggest complete functions based on natural language input.</p><p>AI-powered coding assistants use deep learning models, primarily transformer-based architectures like GPT (Generative Pre-trained Transformer), to understand programming contexts and generate relevant code. The process involves:</p><ul><li>: The AI analyzes the surrounding code and identifies patterns.</li><li>: It predicts and generates code snippets or full functions.</li><li>: Developers review and refine the generated code to ensure efficiency and accuracy.</li></ul><h3>\n  \n  \n  Benefits of AI in Software Development\n</h3><ol><li>: AI-powered tools automate repetitive tasks, allowing developers to focus on complex problem-solving.</li><li>: AI helps catch syntax and logic errors early, improving code quality.</li><li>: Developers can quickly generate and test code, speeding up the development cycle.</li><li>: New programmers can learn faster with AI-assisted suggestions and explanations.</li></ol><h3>\n  \n  \n  Challenges and Limitations\n</h3><p>Despite its advantages, AI-powered coding has some challenges:</p><ul><li>: AI-generated code may contain security vulnerabilities or inefficiencies.</li><li>: Developers might become too dependent on AI tools, affecting their problem-solving skills.</li><li><strong>Ethical and Copyright Issues</strong>: AI models are trained on open-source code, raising concerns about intellectual property rights.</li></ul><h3>\n  \n  \n  The Future of AI in Coding\n</h3><p>The future of AI-powered coding looks promising, with advancements expected in:</p><ul><li>: Future AI models will understand deeper project contexts and provide more intelligent suggestions.</li><li><strong>AI-Driven Debugging and Optimization</strong>: AI will not only generate code but also optimize and debug existing codebases.</li><li>: AI-driven automation will enhance CI/CD pipelines and software maintenance.</li></ul><p>AI-powered code generation is revolutionizing software development by enhancing productivity, reducing errors, and speeding up prototyping. While challenges exist, the future promises even more intelligent and efficient coding assistance. Developers should embrace AI as a tool to augment their capabilities rather than replace them.</p><p><strong>What’s your take on AI in coding? Let us know in the comments!</strong></p>","contentLength":2678,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"[Boost]","url":"https://dev.to/ndaza/-46mm","date":1739722193,"author":"Nestor Daza","guid":678,"unread":true,"content":"<h2>Build a RAG-Enabled Helpdesk Chatbot in 10 Minutes with MongoDB</h2>","contentLength":63,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"AI do have some points tho","url":"https://www.reddit.com/r/artificial/comments/1iqv26f/ai_do_have_some_points_tho/","date":1739720999,"author":"/u/JaydenPlayz2011","guid":1632,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Building GetFitter: The Ultimate Workout App with Jetpack Compose","url":"https://dev.to/himagaur2708/building-getfitter-the-ultimate-workout-app-with-jetpack-compose-57n0","date":1739720675,"author":"Himanshu Gaur","guid":655,"unread":true,"content":"<p>Welcome to the first installment of our development journey! Today, I kick off the creation of GetFitter, a workout app designed to cater to all your fitness needs. We're leveraging Jetpack Compose to build a sleek and user-friendly interface. In this post, we'll delve into the creation of the Home screen, the cornerstone of our app, which includes the TopAppBar, exercise categories, popular exercises, and time-specific workouts.<a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F283kejk95l9swb6stv1h.png\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F283kejk95l9swb6stv1h.png\" alt=\"Image description\" width=\"800\" height=\"474\"></a><strong>The Vision for the Home Screen</strong>\nThe Home screen is the heart of GetFitter, designed to inspire and guide users through their fitness journey. Here's a breakdown of the key components we're implementing:</p><p>TopAppBar: The TopAppBar will offer quick access to the Information and Settings. It sets the tone for a seamless and intuitive user experience.</p><p> A scrollable row of categories allows users to explore different types of exercises, ensuring they find what best suits their goals.</p><p><strong>Popular Exercises Section:</strong> This section highlights trending workouts, helping users stay motivated and try new routines.</p><p> Divided into Morning, Mid-Day, and Evening sections, this feature helps users plan their workouts based on the time of day, ensuring they get the most out of their training.</p><p><strong>Using Jetpack Compose for a Smooth Development Experience</strong>\nJetpack Compose, Google's modern toolkit for building native Android UIs, streamlines the development process and enables us to create a beautiful, performant, and responsive app. Here's a glimpse of the code structure for our Home screen:</p><p>&lt;\n@Composable\n    Scaffold(<p>\n        topBar = { TopAppBar(title = { Text(\"GetFitter\") }) }</p>\n    ) {\n            CategoryRow()<p>\n            PopularExercisesSection()</p>\n            TimeSpecificWorkoutsSection()\n    }</p><p>@Composable\nfun CategoryRow() {\n        items(categories) { category -&gt;\n        }\n}</p><p>@Composable\nfun PopularExercisesSection() {<p>\n    // Implementation of the Popular Exercises Section</p>\n}</p><p>@Composable\nfun TimeSpecificWorkoutsSection() {<p>\n    // Implementation of the Time-Specific Workouts Section</p>\n}</p><p><strong>Creating a User-Centric Experience</strong>\nMy goal is to ensure GetFitter is not only functional but also engaging and easy to navigate. By incorporating scrollable rows and cards, I provide users with a dynamic and interactive way to explore content. Each exercise category and workout card is designed with the user in mind, making it simple to discover new routines and stay motivated.</p><p>\nThis is just the beginning of our exciting journey. As I continue to <p>\nbuild and refine GetFitter, I'll share more updates and insights into our development process. Stay tuned for the next installment, where I'll dive deeper into the specifics of each section and how I am optimizing the app for the best user experience.</p></p><p>Stay fit, stay motivated, and join us on this journey to make fitness accessible and enjoyable for everyone with GetFitter!</p>","contentLength":2828,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Survivor's Edge The Hunger Games Experience","url":"https://dev.to/last_ride_a2626f5ed376637/survivors-edge-the-hunger-games-experience-1n9g","date":1739719821,"author":"Last Ride","guid":654,"unread":true,"content":"<p>Table of Contents\nIntroduction: The World of Hunger Game Simulators<p>\nWhat Makes a Great Hunger Game Simulator?</p>\nKey Features of Survivor's Edge: The Hunger Games Experience\nImmersive Arena Design<p>\nDynamic Survival Mechanics</p>\nCombat Systems and Strategies<p>\nReplayability and Endless Challenges</p>\nA Step-by-Step Guide to Playing Survivor's Edge: The Hunger Games Experience<p>\nMastering Survivor's Edge: Expert Strategies for Success</p>\nThe Hunger Game Simulator Community: Connecting with Players</p><ol><li>Introduction: The World of Hunger Game Simulators\nIn the world of gaming, battle royales and survival simulations have carved out their own unique space, offering players thrilling experiences in hostile environments. One such type of game that has captured the imagination of millions is the Hunger Game Simulator. These games, inspired by the intense and suspenseful nature of the popular Hunger Games franchise, challenge players to fight for survival, make strategic decisions, and outsmart their opponents.\nSurvivor's Edge: The Hunger Games Experience is one of the standout titles in this genre, delivering a refined and highly engaging Hunger Game Simulator experience. In this game, players are thrust into a deadly arena where only the strongest, smartest, and most adaptable can survive. The game offers immersive gameplay, dynamic arenas, and intricate survival mechanics that push players to their limits, making it a standout title for both new and experienced players alike.</li><li>What Makes a Great Hunger Game Simulator?\nA great Hunger Game Simulator goes beyond the basic premise of a fight to the death. While the fundamental goal remains to survive and outlast the competition, what truly sets the best games apart is their depth and complexity. A strong Hunger Game Simulator must include a variety of elements that challenge players' survival instincts, strategic thinking, and adaptability.\nKey Aspects of a Great Hunger Game Simulator\nRealistic survival elements: Managing hunger, health, stamina, and other survival factors adds realism and urgency to the game.\nDiverse environments: Multiple arenas with varying environmental conditions encourage diverse strategies and replayability.\nCharacter progression and customization: Players should have the ability to upgrade and personalize their characters, making each playthrough unique.\nDynamic gameplay: Random events, environmental hazards, and interactions with AI or other players create an ever-changing experience.\nSurvivor's Edge embodies all these characteristics, offering an exciting and multifaceted Hunger Game Simulator experience that stands out from the crowd.</li><li>Key Features of Survivor's Edge: The Hunger Games Experience\n3.1 Character Customization\nOne of the highlights of Survivor's Edge: The Hunger Games Experience is its in-depth character customization system. Players are given the opportunity to create and shape their character from the ground up, selecting not just appearance but also traits and abilities. Whether you want to play as a stealthy and nimble character or a powerhouse who excels in combat, the game allows for a wide variety of styles.\nCustomization goes beyond just visual aesthetics—it directly impacts how the character performs in the arena. For example, players can choose their character’s strength, endurance, agility, and intelligence, which affects how they interact with the environment and deal with challenges. This personalization allows for a unique Hunger Game Simulator experience each time, as players can experiment with different builds and strategies.\n3.2 Immersive Arena Design\nThe design of the arena in Survivor's Edge is a critical aspect that sets the game apart. Rather than offering a single, static arena, the game features multiple dynamic environments, each with its own challenges and opportunities. The arenas are beautifully crafted and designed to evoke a sense of urgency and danger, with different zones providing varying degrees of cover, obstacles, and hazards.\nFor instance, some arenas might be lush forests filled with resources and hiding spots, while others could be desolate wastelands where survival is more about scrounging for what little you can find. The changing weather, day-night cycles, and natural disasters like fires or floods make each arena feel alive and unpredictable, forcing players to adapt on the fly.\nThis level of immersion enhances the Hunger Game Simulator experience, making the environment an active participant in the battle for survival.\n3.3 Dynamic Survival Mechanics\nSurvival isn’t just about outlasting your opponents in Survivor’s Edge—it’s about thriving in the harsh conditions of the arena. The game introduces dynamic survival mechanics that require players to think strategically about their actions. Players need to manage essential resources like food, water, and medical supplies to keep their character alive and at their peak performance.\nThe mechanics are realistic: players must search for resources, hunt animals, gather plants, or scavenge abandoned buildings to find what they need. The stress of keeping track of your hunger, hydration, and stamina adds an extra layer of difficulty to the game, making each decision critical. Do you risk your life searching for more supplies or do you take a chance and confront another player? These tough decisions are what keep players on the edge of their seats.\n3.4 Combat Systems and Strategies\nCombat in Survivor’s Edge is fast-paced, intense, and highly strategic. The game features a wide array of weapons and tools, from melee items like knives and axes to ranged weapons such as bows and firearms. However, it’s not just about brute force. The game emphasizes smart combat—using the environment to your advantage, ambushing opponents, and managing your stamina during fights.\nPlayers can also craft makeshift weapons from available resources, creating even more opportunities for tactical gameplay. The combat system rewards strategy over mindless aggression, encouraging players to plan their attacks carefully. You’ll need to decide whether to engage in direct combat or use stealth to avoid detection and stay hidden. Every encounter is a chance to outsmart your opponent and claim victory.\n3.5 Replayability and Endless Challenges\nOne of the main draws of Survivor’s Edge is its replayability. No two matches are the same, thanks to the procedurally generated arenas, random events, and diverse character builds. The Hunger Game Simulator aspect of the game means that every match offers new challenges, forcing players to constantly evolve their strategies.\nWhether you’re trying out a new character with a different set of skills or tackling a new arena, the game’s depth ensures that you’ll never run out of challenges. Additionally, the game’s difficulty scales as you progress, ensuring that each victory feels earned and every defeat is a lesson.</li><li>A Step-by-Step Guide to Playing Survivor's Edge: The Hunger Games Experience\n4.1 Step 1: Create Your Character\nThe first step in Survivor’s Edge is creating your character. Choose your appearance, set your skills, and decide on the type of survivor you want to be. Make sure to think about how your character’s skills will impact your strategy in the arena. Will you focus on stealth, combat, or survival skills? Your choices here will set the stage for your entire gameplay experience.\n4.2 Step 2: Select an Arena\nAfter creating your character, it’s time to choose your arena. Each arena offers different strategic advantages, so carefully consider your strengths and weaknesses. Some arenas may be more suited to players who prefer ranged combat, while others might benefit stealthy, resourceful survivors. Select an arena that aligns with your chosen playstyle.\n4.3 Step 3: Enter the Arena\nOnce you’re in the arena, the game begins. Your primary goal is to gather resources, avoid dangers, and stay alive. Use the environment to your advantage—whether that means finding shelter, setting traps, or ambushing enemies. Keep an eye on your hunger, thirst, and stamina levels while preparing for combat when necessary.\n4.4 Step 4: Survive and Fight\nAs the game progresses, you’ll face other players or AI-controlled enemies. Use your weapons, skills, and the environment to engage in combat strategically. Always be mindful of your surroundings and adjust your tactics based on the changing conditions of the arena.\n4.5 Step 5: Claim Victory\nThe ultimate goal is to be the last one standing. If you can outlast all opponents, whether through combat or sheer survival, you’ll emerge as the victor. Every match is an opportunity to refine your strategies and become better at surviving in the Hunger Game Simulator environment.</li><li>Mastering Survivor's Edge: Expert Strategies for Success\n5.1 Understand Your Environment\nTake the time to learn the layout of each arena. Some areas may offer better cover for stealth, while others provide high ground for ranged attacks. Understanding the environment gives you a tactical advantage, helping you anticipate hazards and opportunities.\n5.2 Manage Resources Wisely\nEfficiently managing your resources is key to survival. Don’t waste food or water unnecessarily, and keep an eye on your stamina. Running low on resources can lead to dangerous situations, so always plan ahead.\n5.3 Combat with Precision\nRather than charging headfirst into combat, take time to observe your enemies. Look for openings, use the environment to your advantage, and strike when you’re sure you have the upper hand. Avoid unnecessary risks that might leave you vulnerable.\n5.4 Adapt to Changing Conditions\nBe ready for anything. The arena may change unexpectedly, with new hazards or events throwing off your strategy. Stay flexible and adapt to the changing conditions—those who can roll with the punches are the ones who survive.</li><li>The Hunger Game Simulator Community: Connecting with Players\nSurvivor’s Edge has a strong and active community of players who share tips, strategies, and experiences. By connecting with other fans of the Hunger Game Simulator genre, you can learn new strategies, discover hidden secrets, and become a better player. Whether through online forums, social media groups, or fan websites, engaging with the community enhances your gaming experience.</li><li>Conclusion\nSurvivor’s Edge: The Hunger Games Experience is a deep, thrilling, and highly engaging  that offers hours of entertainment. With its immersive environments, dynamic gameplay, and endless challenges, it provides players with an exciting and constantly evolving experience. Whether you're a casual player or a hardcore survival enthusiast, this game delivers on every front, pushing your skills to the limit. So step into the arena, fight for survival, and see if you have what it takes to be the last one standing.</li></ol>","contentLength":10850,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Phishing Attacks: How Hackers Trick You into Giving Up Your Data","url":"https://dev.to/nightmare-lynx/phishing-attacks-how-hackers-trick-you-into-giving-up-your-data-52g0","date":1739719519,"author":"Your Nightmare","guid":653,"unread":true,"content":"<h2>\n  \n  \n  Phishing: A Deceptive Cyberattack Technique\n</h2><p>Phishing is a cyberattack technique in which an attacker uses fraudulent emails, text messages, phone calls, or websites to trick their target into revealing sensitive information. This stolen data can then be misused against the victim. Sensitive information may include social privacy details, personal information, and even banking credentials.</p><p>Phishing attacks fall under the category of social engineering, where the attacker does not need to directly hack a server or system. Instead, they exploit human error, psychology, pressure tactics, and manipulation skills to deceive their targets.</p><p>Here Is The Framework To Understand Even More Quickly!<a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fw2l5ulze309wgl70x9n1.jpg\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fw2l5ulze309wgl70x9n1.jpg\" alt=\"Image description\" width=\"800\" height=\"417\"></a></p><h2>\n  \n  \n  Why phishing is a major cyberthreat\n</h2><p>Phishing is popular among cybercriminals and highly effective. According to IBM's Cost of a Data Breach report, phishing is the most common data breach vector, accounting for 15% of all breaches. Breaches caused by phishing cost organizations an average of USD 4.88 million.</p><p>Phishing is a significant threat because it exploits people rather than technological vulnerabilities. Attackers don't need to breach systems directly or outsmart cybersecurity tools. They can trick people who have authorized access to their target—be it money, sensitive information or something else—into doing their dirty work.</p><p>Phishers can be lone scammers or sophisticated criminal gangs. They can use phishing for many malicious ends, including identity theft, credit card fraud, monetary theft, extortion, account takeovers, espionage and more.</p>","contentLength":1575,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Evaluate your LLM! Ok, but what's next? 🤔","url":"https://dev.to/louis-dupont/evaluate-your-llm-ok-but-whats-next-3mk3","date":1739712180,"author":"Louis Dupont","guid":620,"unread":true,"content":"<p><strong>Everyone say you need to Evaluate your LLM. You just did it. Now what? 🤷‍♂️</strong></p><p>You got a score. Great. Now, here’s the trap:  </p><ul><li> ()\n</li><li> (<em>\"Tweak some stuff and re-run!\"</em>)\n</li></ul><h2><strong>Step 1: Stop staring at numbers.</strong></h2><p>Numbers feel scientific, but </p><p>Before doing anything, look at actual examples. </p><ul><li>Bad output? </li><li>Good output but bad score? </li><li>Both wrong? <strong>You’ve got bigger problems.</strong></li></ul><h2><strong>Step 2: Solve the right problem.</strong></h2><p>If your , tweak:  </p><ul></ul><p>If your , rethink:  </p><ul></ul><h2><strong>Step 3: Iterate like a maniac.</strong></h2><p>Change something → Run eval → Learn → Repeat.  </p><p><strong>Chasing numbers isn’t progress.</strong> Chasing the right insights is.</p>","contentLength":577,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Enhancing User Experience with Voice User Interface Implementation","url":"https://dev.to/sista-ai/enhancing-user-experience-with-voice-user-interface-implementation-1749","date":1739711758,"author":"Sista AI","guid":619,"unread":true,"content":"<p>Implementing a Voice User Interface (VUI) on a website is a dynamic process that requires attention to detail and cutting-edge technology. By incorporating voice commands for common queries like pricing and product details, users can seamlessly interact with the interface, enhancing their overall experience.</p><h2>Best Practices for Seamless Integration</h2><p>Progressive enhancement is essential in voice UI design, ensuring users are comfortable with interactions. Performance optimization is critical for real-time responses, and user experience consideration like feedback and context-awareness elevate the VUI's usability.</p><h2>User-Centric Design Principles</h2><p>Understanding user needs and simplifying interactions are core to effective VUI design. Clear feedback, accessibility features, and graceful error handling contribute to a seamless user experience.</p><h2>Technical Implementation and Challenges</h2><p>Frontend components, backend services, and integration layers must work in harmony for a functional VUI. Significant resource investment is required, but the benefits of enhanced user experience and engagement justify the effort.</p><h2>Evolution of VUI Technology</h2><p>VUI design is constantly evolving, pushing boundaries in AI capabilities and design standards. Continuous learning and adaptation are crucial for staying on the cutting edge of interactive technology.</p><p>Visit <a href=\"https://smart.sista.ai/?utm_source=sista_blog&amp;utm_medium=blog_post&amp;utm_campaign=Enhancing%20User%20Experience%20with%20Voice%20User%20Interface%20Implementation\" rel=\"noopener noreferrer\">Sista AI</a> to explore how their AI Voice Assistant transforms user interactions seamlessly.</p><a href=\"https://smart.sista.ai?utm_source=sista_blog_devto&amp;utm_medium=blog_post&amp;utm_campaign=big_logo\" rel=\"noopener noreferrer\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fvuic-assets.s3.us-west-1.amazonaws.com%2Fsista-make-auto-gen-blog-assets%2Fsista_ai.png\" alt=\"Sista AI Logo\" width=\"640\" height=\"170\"></a><a href=\"https://smart.sista.ai?utm_source=sista_blog_devto&amp;utm_medium=blog_post&amp;utm_campaign=product_btn_screenshot\" rel=\"noopener noreferrer\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fsmart.sista.ai%2Fimages%2Fsista%2Fsista-button.png\" alt=\"AI ChatBot\" width=\"800\" height=\"360\"></a><a href=\"https://smart.sista.ai?utm_source=sista_blog_devto&amp;utm_medium=blog_post&amp;utm_campaign=product_admin_screenshot\" rel=\"noopener noreferrer\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fsmart.sista.ai%2Fimages%2Fsista%2Fsista-admin-dark.png\" alt=\"AI Integration Platform\" width=\"800\" height=\"507\"></a>","contentLength":1432,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Kickstart Your AI Journey with This Free Course! 🌍","url":"https://dev.to/hrudu/kickstart-your-ai-journey-with-this-free-course-3o3n","date":1739711685,"author":"Hrudu Shibu","guid":618,"unread":true,"content":"<p>How to Learn Generative AI with Microsoft (No Experience Needed!)\nArtificial Intelligence is no longer the future—it’s the present! Learning AI skills is becoming essential for students, developers, and professionals alike. With Microsoft’s Explore AI Learn Plan, you can:</p><p>✔ Learn how generative AI works in a simple and practical way.\n✔ Experiment with Microsoft Copilot to create AI-generated content.<p>\n✔ Complete a real-world AI project in under an hour.</p></p><p>Who Is This For?\n👨‍🎓 Students who want to explore AI in a fun way.<p>\n👩‍💻 Developers interested in applying AI tools.</p>\n📢 Content creators looking for AI-powered creativity.</p><p>Start your AI journey today—no prerequisites required! 🚀</p>","contentLength":715,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Hands-On AI Learning with Microsoft Copilot! 🎨","url":"https://dev.to/hrudu/hands-on-ai-learning-with-microsoft-copilot-3ilb","date":1739711617,"author":"Hrudu Shibu","guid":617,"unread":true,"content":"<p>Ever Thought About Using AI for Creativity? Try This Free Course!\nAI isn’t just about coding—it’s about creativity! Microsoft’s Explore AI Learn Plan allows you to use AI to design your dream destination in an interactive and engaging way.</p><p>Why Should You Join?\n✨ Practical Learning – Experiment with Microsoft Copilot to generate content.<p>\n✨ Hands-on Project – Apply AI skills to create a fictional travel destination.</p>\n✨ Quick &amp; Free – Learn in just 53 minutes, with no cost!</p><p>What You’ll Gain:\n📌 New AI skills to use in real-world applications.<p>\n📌 A certificate of completion to showcase on your resume.</p>\n📌 Experience working with generative AI tools.</p><p>Let’s build something creative with AI! 🚀</p>","contentLength":723,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"AI Learning for Everyone! 🚀","url":"https://dev.to/hrudu/ai-learning-for-everyone-2mgc","date":1739711504,"author":"Hrudu Shibu","guid":616,"unread":true,"content":"<p>Learn Generative AI with Microsoft Copilot – Free AI Course\nAI is revolutionizing the world, and now you can learn generative AI for free with Microsoft Copilot through the Explore AI Learn Plan! 🚀</p><p>What Will You Learn?\nIn this short 53-minute learning path, you will:<p>\n✅ Understand the basics of generative AI.</p>\n✅ Use Microsoft Copilot to research and create AI-generated content.<p>\n✅ Design your own dream destination using AI-powered tools.</p></p><p>Who Should Join?\n💡 Students who want to explore AI applications.<p>\n💡 Tech enthusiasts looking to boost their AI skills.</p>\n💡 Educators who want to introduce AI to their students.</p><p>No prior experience required—just a passion for learning! 🌟</p>","contentLength":694,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"The DeepSeek Revolution: The AI Game Changer You Need to Know About","url":"https://dev.to/nitdgplug/the-deepseek-revolution-the-ai-game-changer-you-need-to-know-about-1f57","date":1739708468,"author":"Ayush Bhartia","guid":590,"unread":true,"content":"<p>Hey everyone! The AI landscape is constantly evolving, with new models pushing the boundaries of what's possible. But one name has been making waves recently, i.e, . Unlike other AI tools, this powerhouse has rewritten the rulebook on efficiency, cost-effectiveness, and performance. If you haven't heard of it yet, here’s why it’s capturing global attention.</p><h3><strong>What Is DeepSeek and Why Is It Gaining Popularity?</strong></h3><p>In January 2025, DeepSeek, a Chinese AI company, emerged as a major player in the AI space. Developed by a Chinese AI lab, it rapidly climbed the app store rankings, even surpassing ChatGPT as the most popular free AI assistant in the US.\nBut what’s driving the hype? DeepSeek-R1 isn’t just another AI model—it’s an example of cutting-edge efficiency at a fraction of the usual cost. Unlike its competitors, which require massive investments,  was trained for just —a game-changing breakthrough in AI development.</p><h3><strong>Innovation Behind DeepSeek</strong></h3><p>DeepSeek’s strength lies in its  training method, which splits its AI into specialized sub-models. Instead of a single large neural network handling everything, each part of DeepSeek is optimized for specific tasks, making it both  and more .\nAnother key advantage is its , which adjusts processing power based on task complexity. This means DeepSeek can deliver high performance while using significantly fewer resources compared to other models.</p><p>Moreover, instead of relying on Nvidia’s high-end H100 chips, DeepSeek utilizes the more affordable , making AI training and deployment  cheaper than models like </p><h3><strong>DeepSeek-R1 helping open-source community</strong></h3><p>DeepSeek released its flagship model, DeepSeek-R1, under the . This model, developed with remarkable resource efficiency—using approximately 2,000 Nvidia H800 GPUs over 55 days demonstrated performance on par with leading AI models from established tech giants. DeepSeek has made significant strides in the artificial intelligence landscape by open-sourcing its advanced AI models. \nThe open-source release of DeepSeek-R1 has lowered barriers to AI development, fostering innovation and competition across the global AI community. The company has also released models like , designed to enhance code intelligence, and , aimed at advancing vision-language understanding. These models are available for public use and modification, promoting transparency and collaboration in AI research and application.</p><h3><strong>How DeepSeek Outperforms Other AI Models</strong></h3><p>Beyond its efficiency, DeepSeek is redefining AI reliability with its R1 Reasoning Model. Unlike traditional models, the probability of the R1 Reasoning Model giving appealing outputs is much higher as compared to other available models since this model is designed to validate its own reasoning supporting its output, improving accuracy in subjects like math, science, and fact-checking.\nThis makes DeepSeek particularly powerful for research, problem-solving, and advanced computations, offering a level of precision that many AI models like  from OpenAI,  from MetaAI, and  from Google, etc struggle to achieve.</p><h3><strong>Challenges and Limitations</strong></h3><p>Despite its impressive capabilities, DeepSeek isn’t without challenges. Its business model remains uncertain, as it offers services at a significantly lower cost than competitors, raising questions about long-term sustainability. If integrated into government or corporate infrastructure, DeepSeek AI could be exploited for surveillance by foreign adversaries, affecting nation's cybersecurity. Although being open-source, certain components of the model (e.g., training datasets and fine-tuned versions) might be controlled by external entities, leading to potential data leaks.\nAdditionally, being developed in China, DeepSeek follows strict content regulations. Topics such as <strong>Taiwan’s political status</strong> or the <strong>Tiananmen Square incident</strong> are restricted due to Chinese internet policies, which may affect its global adaptability.</p><h3><strong>What’s Next for DeepSeek and AI?</strong></h3><p>DeepSeek’s rise proves that bigger isn’t always better. With its cost-effective approach, rapid deployment, and self-reasoning abilities, it’s challenging industry giants and setting a new standard for AI development.\nWhether you’re a developer, researcher, or AI enthusiast, DeepSeek is worth watching. Have you tried it yet? Let us know your thoughts in the comments!<p>\nWe hope you found this insightful.</p></p><p><em>Also, do not forget to like and comment.</em></p><p>Until then,<strong>Keep exploring and May the Source Be With You!</strong></p>","contentLength":4476,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"[D] The steps to do original research ( it's a rant as well )","url":"https://www.reddit.com/r/MachineLearning/comments/1iqq4fz/d_the_steps_to_do_original_research_its_a_rant_as/","date":1739704463,"author":"/u/Snoo_65491","guid":540,"unread":true,"content":"<p>I am a Master's Student in the UK. I have been reading papers on Diffusion for a while. I have contacted PhD students at my University and have expressed my interest in working with them. I thought that I would be helping them with their research direction. However, after talking to them, they told me to read some papers and then find a research idea. </p><p>For Context, I am reading about Diffusion Models. The more I read, I realize that I lack some math fundamentals. I am filling those holes, through courses, books and articles. However, it takes time. I believe that this lack of fundamental understanding is stopping me from coming up with hypotheses. I can find some research gaps through recent survey papers, but I am not able to come up with any hypotheses or a solution.</p><p>Am I heading in the right direction? Does understanding stuff from a fundamental standpoint help with producing novel research ideas? How to generate novel research ideas? If you have some tips, I would be glad to hear them.</p><p>P.S. I have never published before. Therefore, I am sorry if I am missing something fundamental. </p>","contentLength":1099,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"[P] I built an open-source AI agent that edits videos fully autonomously","url":"https://github.com/diffusionstudio/agent","date":1739704156,"author":"/u/Maximum_Instance_401","guid":649,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/MachineLearning/comments/1iqq1vz/p_i_built_an_opensource_ai_agent_that_edits/"},{"title":"Getting Started with AWS Bedrock","url":"https://dev.to/alexypulivelil/getting-started-with-aws-bedrock-29n0","date":1739704009,"author":"Alexy Pulivelil","guid":589,"unread":true,"content":"<p>Developers can create and scale generative AI applications with Amazon Bedrock, a fully managed service, by utilising foundation models from AWS and other suppliers. In this guide, I’ll walk you through getting started with AWS Bedrock and invoking the Amazon Titan Text Lite v1 model for text generation.</p><p>\nBefore you begin, ensure that you have the following:</p><ul><li><p>AWS Account with access to Amazon Bedrock(For testing will be using AmazonBedrockFullAccess)</p></li><li><p>AWS CLI installed and configured with appropriate permissions</p></li><li><p>Boto3 (AWS SDK for Python) installed on your machine</p></li></ul><p>You can install Boto3 using:</p><p>Step 1: Set Up AWS Credentials</p><p>If you haven’t already configured your AWS credentials, run:</p><p>Enter your AWS Access Key ID, Secret Key, and select your preferred region where Amazon Bedrock is available (e.g., us-east-1).</p><p>Step 2: Initialize the Bedrock Client\nTo interact with Amazon Bedrock, we need to initialise the AWS Bedrock runtime client using Boto3:</p><div><pre><code># Initialize Bedrock client\nbedrock = boto3.client(\"bedrock-runtime\", region_name=\"us-east-1\")\nStep 3: Invoke Amazon Titan Text Lite v\n</code></pre></div><p>Let’s create a simple script to invoke Amazon Titan Text Lite v1 for generating a text response.</p><div><pre><code># Define the input text\nquestion = \"What is the capital of India?\"\n\n# Prepare the payload\npayload = {\n    \"inputText\": question,\n    \"textGenerationConfig\": {\n        \"maxTokenCount\": 100,\n        \"temperature\": 0.5,\n        \"topP\": 0.9\n    }\n}\n\n# Invoke Titan Text Lite v1\nresponse = bedrock.invoke_model(\n    modelId=\"amazon.titan-text-lite-v1\",\n    contentType=\"application/json\",\n    accept=\"application/json\",\n    body=json.dumps(payload)\n)\n\n# Parse response\nresult = json.loads(response[\"body\"].read().decode(\"utf-8\"))\n\n# Extract and print the output text\nif \"results\" in result and isinstance(result[\"results\"], list):\n    print(\"Answer:\", result[\"results\"][0][\"outputText\"].strip())\nelse:\n    print(\"Unexpected response format:\", result)\n</code></pre></div><p>Step 4: Running the Script</p><p>Save the script as invoke_bedrock.py and run it using:</p><p>Expected Output:<em>Answer: New Delhi is the capital of India. It is situated in the countrys federal district, which is known as the National Capital Territory of Delhi (NCT), and is located in the Indian subcontinent.</em></p><p>Step 5: Fine-tuning Model Parameters</p><p>Amazon Titan models allow temperature and topP tuning for response variation:</p><ul><li><p>temperature: Controls randomness (Lower = More deterministic, Higher = More creative)</p></li><li><p>topP: Controls sampling probability (Higher = More diverse responses)\nAdjust these values in the textGenerationConfig section for different results.</p></li></ul><p>Conclusion\nYou have successfully invoked the Amazon Titan Text Lite v1 model using AWS Bedrock! You can now integrate this into your applications for chatbots, summarization, and content generation.</p>","contentLength":2767,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"🚀 New eBook: The Developer’s Guide to UX Design Thinking – Future-Proof Your Career","url":"https://dev.to/ricky_creates/new-ebook-the-developers-guide-to-ux-design-thinking-future-proof-your-career-3m6k","date":1739703621,"author":"Ricky Synnot","guid":588,"unread":true,"content":"<h2>\n  \n  \n  How Developers Can Stay Ahead in an AI-Driven World\n</h2><p>Most developers think writing great code is enough. It’s not.</p><p>AI is automating more of our work every day. The developers who thrive in the next decade won’t be the ones who can ship the fastest—they’ll be the ones who understand what to build, why it matters, and <strong>how to create great user experiences</strong>.</p><p>This is exactly why I wrote The Developer’s Guide to UX Design Thinking—a practical book that helps developers go beyond code and become  team members.</p><p>Here’s a core concept from the book:</p><h2>\n  \n  \n  The Developer’s Career Risk Pyramid\n</h2><p>Most developers sit at one of three levels:</p><p>🔴 At Risk – Developers who only write code (AI is automating this fast)\n🟠 Safe for Now – Developers who solve problems, not just execute tasks<p>\n🟢 Future-Proofed – Developers who understand UX, product thinking, and collaboration</p></p><p>The higher you go, the safer your career. If you want to be more than a human compiler, you need to learn how to work with designers, influence product decisions, and create user-friendly solutions.</p><p>This isn’t a design book for designers—it’s a practical guide to UX for developers who want to build better products and advance their careers.</p><h3>\n  \n  \n  📖 Part 1: Foundations of UX Design Thinking\n</h3><ul><li>Why UX matters for developers</li><li>The rise of AI &amp; why UX is irreplaceable</li><li>Understanding the designer’s toolkit</li></ul><h3>\n  \n  \n  ⚡ Part 2: Applying UX in Development\n</h3><ul><li>Building empathy for users</li><li>Prototyping &amp; collaborating with designers</li><li>Designing for accessibility &amp; scalability</li></ul><h3>\n  \n  \n  🚀 Part 3: Enhancing Collaboration &amp; Future-Proofing Your Career\n</h3><ul><li>Bridging the developer-designer gap</li><li>How to influence design decisions as a developer</li><li>The evolving role of devs in product teams</li></ul><h3>\n  \n  \n  🛠 Part 4: Tools, Case Studies &amp; Advanced Topics\n</h3><ul><li>Real-world case studies from top tech companies</li><li>Essential UX &amp; dev tools you should be using</li><li>The future of UX in an AI-driven world</li><li>Quick-reference frameworks &amp; checklists for daily use</li></ul><p>To celebrate the launch, the book is available for just $5. No fluff—just real strategies, examples, and frameworks you can use immediately.</p><p>Would love to hear from the dev.to community—how often do you get involved in UX decisions? Or is it always just “build this” with no context? Drop your thoughts below!</p>","contentLength":2321,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Deepseek-R1: El Modelo Revolucionario que Eleva los Estándares de los LLM de Código Abierto","url":"https://dev.to/angel_rojas_6904bae237a0d/deepseek-r1-el-modelo-revolucionario-que-eleva-los-estandares-de-los-llm-de-codigo-abierto-42cc","date":1739702287,"author":"Angel Rojas","guid":587,"unread":true,"content":"<p>Deepseek-R1 es el modelo insignia desarrollado por Deepseek, una empresa china emergente. Con innovaciones clave como la combinación de aprendizaje por refuerzo y ajuste fino supervisado, así como la técnica Mixture-of-Experts (MoE), Deepseek-R1 redefine el panorama de los LLM de código abierto. Su capacidad para manejar contextos extensos y su arquitectura eficiente lo posicionan como un referente para desarrolladores y empresas.</p>","contentLength":438,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Why Choose an Career in Ethical Hacking?","url":"https://dev.to/ankit_cyber/why-choose-an-career-in-ethical-hacking-1dlf","date":1739702266,"author":"ankit_Cyber","guid":586,"unread":true,"content":"<p>Pursue ethical hacking for a dynamic career where you protect organizations from cyber threats, with high demand, competitive salaries, and continuous learning with endless growth potential.</p>","contentLength":190,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Deepseek-R1: El Modelo Revolucionario que Eleva los Estándares de los LLM de Código Abierto","url":"https://dev.to/angel_rojas_6904bae237a0d/deepseek-r1-el-modelo-revolucionario-que-eleva-los-estandares-de-los-llm-de-codigo-abierto-4lne","date":1739701264,"author":"Angel Rojas","guid":585,"unread":true,"content":"<p><a href=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fqb9finvzd36xuxlxud2o.jpeg\"><img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fqb9finvzd36xuxlxud2o.jpeg\" alt=\"Image description\" width=\"275\" height=\"183\"></a>\nLa revolución de los LLM de código abierto comenzó con proyectos pioneros como Alpaca, pero ahora, Deepseek-R1 llega para llevar estos modelos a un nivel superior, destacándose por su rendimiento, eficiencia y escalabilidad. 😎</p><p>¿Qué es Deepseek-R1? 🤔\nDeepseek-R1 es el modelo insignia desarrollado por Deepseek, una empresa china de inteligencia artificial fundada en 2023 por Liang Wenfeng. Este modelo de lenguaje de código abierto sobresale por su capacidad para procesar contextos extensos, resolver problemas complejos y ofrecer respuestas precisas en diversas tareas, posicionándose como una evolución significativa en el ecosistema de los LLM.</p><p>Mini Presentación: Origen y Filosofía 🌏\nOrigen: Nacida en el vibrante entorno tecnológico de China, Deepseek surgió en 2023 en medio de una explosión de innovación en inteligencia artificial.</p><p>Filosofía: Inspirándose en proyectos pioneros como Alpaca, Deepseek apuesta por la transparencia y la colaboración a través del código abierto. Su misión es democratizar el acceso a tecnologías avanzadas, permitiendo que desarrolladores de todo el mundo puedan utilizar, modificar e integrar sus modelos en una amplia variedad de proyectos.</p><p>Desarrollo y Evolución: De Alpaca a Deepseek-R1 🔄\nDeepseek-R1 representa la respuesta evolutiva a los primeros esfuerzos de la comunidad. Entre sus principales innovaciones destacan:</p><p>Métodos de Entrenamiento Híbridos: Combina técnicas de aprendizaje por refuerzo (RL) y ajuste fino supervisado (SFT), aprovechando enormes volúmenes de datos para adaptarse a múltiples tareas.\nInnovación Arquitectónica: Utiliza la técnica Mixture-of-Experts (MoE), que activa solo una parte de sus parámetros en cada consulta, optimizando el uso de recursos sin sacrificar la capacidad del modelo.<p>\nCapacidad de Contexto Extendido: Con la capacidad de manejar hasta 128,000 tokens en una sola entrada, Deepseek-R1 supera las limitaciones de modelos anteriores, permitiendo un análisis profundo y respuestas complejas.</p>\nLista de Modelos y Explicación de Cada Uno 📚<p>\nDeepseek ofrece no solo su modelo principal, sino también varias versiones destiladas que se adaptan a diferentes necesidades y entornos:</p></p><p>Deepseek-R1 (Modelo Principal): Con 671 mil millones de parámetros, este modelo ofrece un rendimiento excepcional para aplicaciones de alto rendimiento en investigación, empresas y desarrollos que requieren procesamiento intensivo.</p><p>Deepseek-R1-Distill-Qwen-1.5B: Variante destilada con 1.5 mil millones de parámetros, ideal para proyectos con recursos limitados o respuestas rápidas, como aplicaciones móviles.</p><p>Deepseek-R1-Distill-Qwen-7B: Con 7 mil millones de parámetros, ofrece un equilibrio perfecto entre rendimiento y eficiencia, adecuado para desarrollos empresariales.</p><p>Deepseek-R1-Distill-Qwen-14B: Con 14 mil millones de parámetros, ofrece tareas complejas y análisis profundos, ideal para proyectos que requieren alta capacidad de procesamiento.</p><p>Deepseek-R1-Distill-Llama-8B: Variante de 8 mil millones de parámetros que combina un buen entendimiento contextual con eficiencia operativa, ideal para sistemas generales.</p><p>Deepseek-R1-Distill-Llama-14B: Con 14 mil millones de parámetros, maneja sofisticados contextos y es ideal para proyectos que exigen procesamiento avanzado.</p><p>Deepseek-R1-Distill-Llama-70B: Con 70 mil millones de parámetros, esta versión ofrece un rendimiento de alta gama comparable con modelos comerciales avanzados, adecuado para aplicaciones de misión crítica.</p><p>¿Dónde Utilizarlos? 🌐\nDeepseek-R1 y sus variantes están diseñados para integrarse de forma versátil en distintos entornos:</p><p>Plataforma Web: Al igual que ChatGPT, Deepseek-R1 está disponible para demos y pruebas interactivas.\nAPI para Integración: Con opciones de API para facilitar la integración en proyectos, disponibles oficialmente o a través de terceros.<p>\nEn Local con Ollama: Al ser un modelo Open Source, puedes descargarlo en tu computadora y ejecutarlo localmente, incluso en versiones más pequeñas que pueden correr en equipos con especificaciones limitadas.</p>\n¿Por Qué Deepseek-R1 es una Revolución? ✨<p>\nDeepseek-R1 eleva los estándares en los LLM de código abierto con varias mejoras:</p></p><p>Rendimiento Excepcional: Su capacidad para gestionar contextos extensos y tareas complejas lo coloca entre los modelos más avanzados del ámbito abierto.\nEficiencia Operativa: Con la técnica Mixture-of-Experts y versiones destiladas, optimiza el uso de recursos, permitiendo su implementación incluso en entornos con hardware limitado.<p>\nInnovación Técnica: La combinación de métodos avanzados de entrenamiento y arquitecturas modernas prepara el terreno para futuros desarrollos en inteligencia artificial.</p>\nAccesibilidad y Colaboración: Distribuido bajo una licencia permisiva, fomenta la integración, modificación y mejora continua, impulsando la innovación global. 🌍\nDeepseek-R1 y todas sus variantes se distribuyen bajo la Licencia MIT, lo que significa:</p><p>Uso Gratuito: Tanto para fines comerciales como no comerciales.\nModificación y Redistribución: El código es completamente abierto, permitiendo que la comunidad lo adapte y mejore.<p>\nIntegración Sencilla: Facilita la incorporación de los modelos en proyectos propios sin restricciones onerosas.</p>\nConclusión<p>\nDeepseek-R1 no solo continúa la revolución iniciada por Alpaca en los LLM de código abierto, sino que establece nuevos estándares con su rendimiento sobresaliente, eficiencia operativa y filosofía de código abierto. Con sus versiones destiladas, Deepseek-R1 está preparado para impulsar una nueva era en la integración de la inteligencia artificial en aplicaciones, investigación y desarrollo colaborativo. ¡El futuro de los LLM se ve prometedor! 🌟</p></p><p>Para más información, visita el artículo completo <a href=\"https://makiai.com/deepseek-r1-el-modelo-revolucionario-que-eleva-los-estandares-de-los-llm-de-codigo-abierto-%f0%9f%9a%80/\" rel=\"noopener noreferrer\">aquí.</a></p>","contentLength":5819,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"[Boost]","url":"https://dev.to/coderoflagos/-2fjn","date":1739697631,"author":"Opemipo Disu","guid":584,"unread":true,"content":"<h2>Why CI/CD is a Bottleneck and How AI Can Help ⚙️</h2><h3>Opemipo Disu for Microtica ・ Feb 14</h3>","contentLength":89,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"The IRS Is Buying an AI Supercomputer From Nvidia","url":"https://theintercept.com/2025/02/14/irs-ai-nvidia-tax/","date":1739695822,"author":"/u/F0urLeafCl0ver","guid":887,"unread":true,"content":"<p> administration and its cadre of Silicon Valley machine-learning evangelists attempt to restructure the administrative state, the IRS is preparing to purchase advanced artificial intelligence hardware, according to procurement materials reviewed by The Intercept.</p><p>The hardware has not yet been purchased and installed, nor is a price listed, but SuperPod systems <a href=\"https://www.crn.com/news/data-center/nvidia-pitches-dgx-superpod-subscription-dpu-servers-to-enterprises\">reportedly</a> start at $7 million. The setup described in the contract materials notes that it will include a substantial memory upgrade from Nvidia.</p><p>Though small compared to the massive AI-training data centers deployed by companies like OpenAI and Meta, the SuperPod is still a powerful and expensive setup using the most advanced technology offered by Nvidia, whose chips have facilitated the global machine-learning spree. While the hardware can be used in many ways, it’s marketed as a turnkey means of creating and querying an AI model. Last year, the MITRE Corporation, a federally funded military R&amp;D lab, acquired a $20 million SuperPod setup to train bespoke AI models for use by government agencies, touting the purchase as a “massive increase in computing power” for the United States.</p><p>How exactly the IRS will use its SuperPod is unclear. An agency spokesperson said the IRS had no information to share on the supercomputer purchase, including which presidential administration ordered it. A 2024 report by the Treasury Inspector General for Tax Administration identified 68 different AI-related projects underway at the IRS; the Nvidia cluster is not named among them, though many were redacted.</p><p>But some clues can be gleaned from the purchase materials. “The IRS requires a robust and scalable infrastructure that can handle complex machine learning (ML) workloads,” the document explains. “The Nvidia Super Pod is a critical component of this infrastructure, providing the necessary compute power, storage, and networking capabilities to support the development and deployment of large-scale ML models.”</p><p>The document notes that the SuperPod will be run by the IRS Research, Applied Analytics, and Statistics division, or RAAS, which leads a variety of data-centric initiatives at the agency. While no specific uses are cited, it states that this division’s Compliance Data Warehouse project, which is behind this SuperPod purchase, has previously used machine learning for automated fraud detection, identity theft prevention, and generally gaining a “deeper understanding of the mechanisms that drive taxpayer behavior.”</p><figure><blockquote><p>“The IRS has probably more proprietary data than most agencies that is totally untapped.”</p></blockquote></figure><p>It’s unclear from the document whether the SuperPod purchase had been planned under the Biden administration or if it represents a new initiative of the Trump administration.</p><p>Some funding from the 2022 Inflation Reduction Act&nbsp;was earmarked for upgrading IRS technology generally, said Travis Thompson, a tax attorney with Boutin Jones with an expertise in IRS AI strategy. But “the IRS has been going toward AI for quite some time prior to IRA funding,” Thompson explained. “They didn’t have enough money to properly enforce the tax code, they were looking for ways to do more with less.” A June 2024 Government Accountability Office report <a href=\"https://www.gao.gov/blog/artificial-intelligence-may-help-irs-close-tax-gap\">suggested</a> the IRS use artificial intelligence-based software to retrieve “hundreds of billions of dollars [that] are potentially missing from what should be collected in taxes each year.”</p><p>Thompson added that the agency is ripe for machine-learning training because of the mountain of personal and financial data it sits atop. “The IRS has probably more proprietary data than most agencies that is totally untapped. When you look at something like this Nvidia cluster and training machine learning algorithms going forward, it makes perfect sense, because they have the data there. AI needs data. It needs lots of it. And it needs it quickly. And the IRS has it.”</p><p>The purchase comes at a crossroads for U.S. governance of artificial intelligence tech. In Trump’s first term, the RAAS office was assigned “responsibility for monitoring and overseeing AI at the IRS” under Executive Order 13960, which he signed shortly before leaving office in 2020. This executive order put an emphasis on the “responsible,” “safe” implementation of AI by the United States — an approach that has fallen out of favor by American tech barons who now advocate for the breakneck development of these technologies unburdened by <a href=\"https://theintercept.com/2019/12/20/mit-ethical-ai-artificial-intelligence/\">consideration of ethics</a> or risk. One of Trump’s first moves following his inauguration was reversing a Biden administration executive order calling for greater AI safety guardrails in government use.</p><p>Many of the&nbsp;AI industry for whom “safe AI” is now anathema have become close allies of the new Trump White House, such as Elon Musk and venture capitalist Marc Andreessen. This wing of Silicon Valley has reportedly pushed the new administration to leverage artificial intelligence to help dismantle the administrative state via automation.</p><p>This week, the Wall Street Journal <a href=\"https://www.wsj.com/politics/policy/doge-internal-revenue-service-9697cb99\">reported</a> Musk’s liquidators had arrived at the IRS, an agency long the target of disparagement and <a href=\"https://www.politifact.com/factchecks/2024/aug/28/donald-trump/fact-check-trump-falsely-said-harris-voted-to-hire/\">distortion</a> by Trump and <a href=\"https://time.com/6204928/irs-87000-agents-factcheck-biden/\">Republican</a> allies. Days before, the New York Times <a href=\"https://www.nytimes.com/2025/02/10/us/politics/irs-dhs-immigration.html\">reported</a>, “Representatives from the so-called Department of Government Efficiency have sought information about the tax collector’s information technology, with a goal of automating more work to replace the need for human staff members.”</p><p>The IRS has in recent years increasingly turned to AI for automated fraud detection and chatbot-based support services — including through <a href=\"https://www.nvidia.com/en-us/case-studies/fraud-detection-applications/\">collaboration</a> with Nvidia — but a new Nvidia supercomputer could also be a boon to those interested in shrinking the agency’s human headcount as much as possible. A February 8 report by the Washington Post <a href=\"https://www.washingtonpost.com/business/2025/02/08/doge-musk-goals/\">quoted</a> an unnamed federal official who described Musk’s end goal as “replacing the human workforce with machines,” and that “Everything that can be machine-automated will be. And the technocrats will replace the bureaucrats.”</p><p>Musk underlings are reportedly contemplating <a href=\"https://www.nytimes.com/2025/02/13/us/doge-ai-education-department-students.html\">replacing humans</a> at the Department of Education with a large language-based chatbot, as well.</p><p>Wired previously <a href=\"https://www.wired.com/story/elon-musk-lieutenant-gsa-ai-agency/\">reported</a> that Musk loyalist Thomas Shedd, placed in a directorship within the General Services Administration, has talked of an “AI-first” agenda for Trump’s second term; DOGE staffers have already reportedly<a href=\"https://www.washingtonpost.com/nation/2025/02/06/elon-musk-doge-ai-department-education/\"> turned to Microsoft’s Azure AI platform for advice</a> on slashing programs. While the Nvidia SuperPod couldn’t on its own replicate services like those provided by Microsoft, it is powerful enough to train AI models based on government data.</p><p>Thompson told The Intercept that efforts to slash the federal workforce and more aggressively deploy artificial intelligence systems fit hand-in-glove.</p><p>“I firmly believe that rooted behind the reduction in the human workforce that seems to be goal of current administration, there’s an overarching goal there to implement more technology-based systems in order to do the jobs,” he explained. “If you’re going to reduce your workforce, something has to pick up the slack. Something has to do the job.”</p>","contentLength":7194,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/artificial/comments/1iqo4nj/the_irs_is_buying_an_ai_supercomputer_from_nvidia/"},{"title":"5 Websites to Help You Stand Out on Social Media","url":"https://dev.to/jsam/5-websites-to-help-you-stand-out-on-social-media-59i3","date":1739694445,"author":"jsam","guid":583,"unread":true,"content":"<p>In today's digital age, social media has become an integral part of our lives. With so many people vying for attention, it can be challenging to stand out from the crowd. Fortunately, several websites can help you create engaging and personalized content that captures the attention of your audience. Here are five websites that can assist you in crafting unique language, text, and emojis to enhance your social media presence.</p><p>Emojis have become a universal language in the digital world. All TikTok Emojis offers a comprehensive collection of emojis, allowing you to express yourself creatively and add personality to your posts. Using the right emojis can make your content more relatable and visually appealing.</p><h2>\n  \n  \n  Character Headcanon Generator\n</h2><p>The Headcanon Generator is an innovative online tool designed to help fans and writers create imaginative interpretations of characters and narratives within their favorite fictional universes. By inputting specific details, such as character names or themes, users can generate unique headcanons—personalized insights that expand on existing storylines and character traits not explicitly mentioned in the original material. This process not only enhances the depth of character development but also fosters creativity among users, making it an invaluable resource for writers, role-players, and fans alike.</p><p>Effective communication is key to engaging your audience. I Love Translate is a translation website that helps you bridge language barriers and connect with people from diverse backgrounds. By translating your content into multiple languages, you can expand your reach and create a more inclusive online presence.</p><p>iLoveTranslate provides many fun translators, including:</p><p>Typography plays a crucial role in visual communication. Brat Font offers a unique and eye-catching font style that can add personality and flair to your social media graphics and designs. Using a distinctive font can help you create a memorable brand identity and make your content stand out.</p><p>Dandys World Slot Maker is a creative slot machine that you can use to create your own Slot Machine. You can customize your own Slot Maker, create word slots easily and for free.</p>","contentLength":2204,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Unexpected AI Use Cases in Business That Will Surprise You","url":"https://dev.to/wiliam_maskin/unexpected-ai-use-cases-in-business-that-will-surprise-you-52oi","date":1739694198,"author":"AI","guid":582,"unread":true,"content":"<p>Artificial Intelligence (AI) is often associated with automation, data analysis, and smart assistants. However, AI is making its way into unexpected areas of business, offering innovative solutions beyond traditional applications. Here are some of the most surprising AI use cases in the business world.</p><h2>\n  \n  \n  1. AI in Creative Industries\n</h2><p>AI is now capable of creating original artworks and composing music, pushing the boundaries of creativity. Tools like OpenAI’s <a href=\"https://openai.com/index/dall-e-2/\" rel=\"noopener noreferrer\">DALL·E</a> and Google’s DeepDream generate stunning visuals, while AI-driven music composers craft soundtracks tailored to emotions and moods.</p><p>Automated Storytelling &amp; Scriptwriting</p><p>AI powered platforms can generate compelling storylines, write scripts, and even predict audience engagement, making them valuable tools for filmmakers and writers.</p><h2>\n  \n  \n  2. AI in Unconventional Business Sectors\n</h2><p>AI for Personalized Perfume &amp; Fragrance Design</p><p>Brands like <a href=\"https://www.symrise.com/scent-and-care/competence-platforms/philyra/\" rel=\"noopener noreferrer\">Philyra by IBM</a> use AI to analyze scent compositions and create customized fragrances, bringing personalization to the perfume industry.</p><p>AI in Fashion &amp; Trend Prediction</p><p>AI helps fashion designers predict trends by analyzing social media, consumer behavior, and past sales data, allowing for real-time design adjustments.</p><h2>\n  \n  \n  3. AI for Customer Experience &amp; Marketing\n</h2><p>Hyper-Personalized Advertising with AI</p><p>AI-driven algorithms analyze consumer data to create highly targeted ad campaigns. Platforms like <a href=\"https://info.persado.com/unlock-higher-conversions-with-ai\" rel=\"noopener noreferrer\">Persado</a> use AI to generate emotionally compelling ad copy that resonates with specific audiences.</p><p>AI Powered Virtual Shopping Assistants</p><p>AI-driven chatbots and virtual assistants enhance online shopping by offering personalized recommendations, styling tips, and real-time customer support.</p><ol><li>The Future of Unique AI Applications</li></ol><p>AI is continuously evolving, bringing innovation to industries we never imagined. As businesses embrace AI, its integration with wearable technology, predictive analytics, and automation will unlock even more opportunities.</p><p>Want to Learn More About AI’s Impact ?</p>","contentLength":2013,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"How AI Will Revolutionize Healthcare in the Future","url":"https://dev.to/wiliam_maskin/how-ai-will-revolutionize-healthcare-in-the-future-g2l","date":1739693172,"author":"AI","guid":581,"unread":true,"content":"<p>Artificial Intelligence (AI) is poised to revolutionize the healthcare industry, bringing unprecedented advancements in diagnosis, treatment, and patient care. From automating administrative tasks to enhancing medical imaging analysis, AI is making healthcare more efficient, accurate, and accessible.</p><h2>\n  \n  \n  The Impact of AI on Healthcare\n</h2><ol><li><p>Faster and More Accurate DiagnosesAI powered diagnostic tools can analyze medical images and detect diseases such as cancer at an early stage with higher accuracy than traditional methods.</p></li><li><p>Personalized Treatment PlansMachine learning algorithms analyze vast amounts of patient data to recommend tailored treatment plans, improving outcomes and reducing trial-and-error approaches.</p></li><li><p>AI Powered Robotic SurgeryRobotic assisted surgery enhances precision, reduces human error, and shortens recovery times, making complex procedures safer.</p></li><li><p>Enhanced Drug DiscoveryAI accelerates the development of new drugs by identifying potential compounds faster, reducing the time and cost of bringing new medications to market.</p></li><li><p>Virtual Health AssistantsAI chatbots and virtual assistants help patients manage chronic conditions, schedule appointments, and provide instant medical advic\ne, improving accessibility to healthcare services.</p></li></ol><h2>\n  \n  \n  Challenges and Ethical Considerations\n</h2><p>Despite its benefits, AI in healthcare faces challenges such as data privacy concerns, bias in AI models, and the need for regulatory frameworks to ensure ethical implementation.</p><h2>\n  \n  \n  What’s Next for AI in Healthcare ?\n</h2><p>As AI continues to evolve, its integration with wearable devices, telemedicine, and predictive analytics will further enhance healthcare delivery. The future of AI in healthcare is promising, with the potential to improve patient outcomes and reduce costs on a global scale.</p><h2>\n  \n  \n  Learn More About AI’s Role in Healthcare\n</h2>","contentLength":1853,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"The Dark Side of Cybersecurity: Malware and Its Destruction!","url":"https://dev.to/nightmare-lynx/the-dark-side-of-cybersecurity-malware-and-its-destruction-5enk","date":1739693157,"author":"Your Nightmare","guid":580,"unread":true,"content":"<h2><strong>Malware: A Threat to Systems and Data</strong></h2><p>Malware refers to malicious programs designed to exploit a system. The term \"malware\" is derived from two words: \"mal,\" meaning malicious, and \"ware,\" meaning software, forming the word \"malware.\"</p><p>Typically, malware is created by illegal hackers, commonly known as black hat hackers. These programs are highly capable and can cause severe damage to both organizations and individuals. Once installed on a device, malware exploits it by accessing messages, call logs, browser history, and even bank balances or other sensitive information.</p><p>Once again, malware consists of illegal software used by black hat hackers and crackers. There are various types of malware, mainly viruses, spyware, trojans, ransomware, keyloggers, and worms. In this discussion, we will explore them in detail.</p><p>Here are some common types of malwares that can destroy your pc</p><p>\nViruses are malicious programs specifically designed to attach themselves to files or documents and execute when the infected file is opened. As a result, they can harm your system, slow down performance, and even steal sensitive information.</p><p>\nSpyware is a malicious piece of code created to collect information from a system and spy on it without the user's knowledge or consent. This includes passwords, social information, and even bank details. Spyware is commonly found in unauthorized third-party applications.</p><p>\nA Trojan is a malicious piece of code that appears to be legitimate software. However, once mistakenly installed by a user, it operates in the background and gains system access to perform malicious activities. Trojans are often embedded in third-party apps, games, documents, software patches, and even emails.</p><p>\nRansomware is one of the most powerful and dangerous types of malware. It encrypts a target’s data and demands a ransom payment in exchange for decryption. Once a system is infected, recovering the data without paying the ransom is nearly impossible (at least for now).</p><p>\nA keylogger is a malicious program specifically designed to capture a user's keystrokes in real-time. This means anything you type on your keyboard can be recorded, including personal details and sensitive social media credentials.</p><p>To protect yourself from malware, follow these preventive measures:</p><ol><li>Remember, nothing is 100% secure! Always stay cautious.\nChoose a robust antivirus program like Avast, Norton, AVG, or Kaspersky.</li><li>Regularly back up your data to avoid losing important files.</li><li>Avoid installing third-party software whenever possible.</li><li>Scan files before use with VirusTotal if you must use third-party software (not recommended).</li><li>Stay away from cracked software, as it is often infected with malware.</li><li>Never download unauthorized files from the internet, as they may contain hidden threats.</li><li>Use a secure and updated browser, such as Tor, Firefox, Edge, or Opera.</li><li>Keep your operating system updated to protect against vulnerabilities.</li><li>Stay informed and educate others about cyber threats to enhance digital security.</li></ol><p>In this discussion, we explored what malware is and how destructive it can be. This was just a glimpse—there are many other types of malware that were not included here. However, these are some of the most common and stable malware threats.</p><p>Always try to use authentic software, files, and systems, and educate others about cyber threats. Stay up to date with the latest security practices because no one is ever 100% safe online.</p>","contentLength":3429,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"[R] A Survey of Logical Reasoning Capabilities in Large Language Models: Frameworks, Methods, and Evaluation","url":"https://www.reddit.com/r/MachineLearning/comments/1iqmjal/r_a_survey_of_logical_reasoning_capabilities_in/","date":1739688936,"author":"/u/Successful-Western27","guid":522,"unread":true,"content":"<p>This new survey provides a comprehensive analysis of logical reasoning capabilities in LLMs, examining different reasoning types, evaluation methods, and current limitations.</p><p>Key technical aspects: - Categorizes logical reasoning into deductive, inductive, and abductive frameworks - Evaluates performance across multiple benchmarks and testing methodologies - Analyzes the relationship between model size and reasoning capability - Reviews techniques for improving logical reasoning, including prompt engineering and chain-of-thought methods</p><p>Main findings: - LLMs show strong performance on basic logical tasks but struggle with complex multi-step reasoning - Model size alone doesn't determine reasoning ability - training methods and problem-solving strategies play crucial roles - Current evaluation methods may not effectively distinguish between true reasoning and pattern matching - Performance degrades significantly when problems require combining multiple reasoning types</p><p>I think the most important contribution here is the systematic breakdown of where current models succeed and fail at logical reasoning. This helps identify specific areas where we need to focus research efforts, rather than treating reasoning as a monolithic capability.</p><p>I think this work highlights the need for better benchmarks - many current tests don't effectively measure true reasoning ability. The field needs more robust evaluation methods that can differentiate between memorization and actual logical inference.</p><p>TLDR: Comprehensive survey of logical reasoning in LLMs showing strong basic capabilities but significant limitations in complex reasoning. Highlights need for better evaluation methods and targeted improvements in specific reasoning types.</p>","contentLength":1740,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"AI Replaces Boyfriends In China, Making Entrepreneur Yao Runhao A Billionaire","url":"https://observervoice.com/the-rise-of-ai-boyfriends-in-china-96739/","date":1739687867,"author":"/u/Curious_Suchit","guid":648,"unread":true,"content":"<p>Artificial intelligence (AI) is transforming many aspects of our lives, including how we approach relationships. In China, a new trend has emerged where virtual boyfriends powered by AI are becoming increasingly popular. This phenomenon addresses common relationship issues, such as communication gaps and emotional support, that many individuals face. As technology continues to evolve, the demand for these virtual companions is growing, leading to significant financial success for their creators. This article explores the rise of AI boyfriends, their impact on users, and the entrepreneurial success behind this innovative solution.</p><h2>Understanding the Appeal of AI Boyfriends</h2><p>The appeal of AI boyfriends lies in their ability to provide companionship without the complexities of real-life relationships. Many individuals, particularly women, often experience frustration when their partners fail to respond promptly to messages or show disinterest in their daily lives. In contrast, AI boyfriends like Li Shen, known as Zayne, offer immediate responses, attentive listening, and tailored interactions. This creates a sense of connection that users find comforting and fulfilling.</p><p>Alicia Wang, a 32-year-old editor from Shanghai, exemplifies this trend. She has found solace in her virtual relationship with Zayne, who is always available to listen and engage. Wang’s experience is not unique; millions of others are turning to AI companions for emotional support. The game “Love and Deepspace,” which features these AI boyfriends, has attracted an estimated six million monthly active players. This indicates a significant shift in how people perceive relationships and companionship in the digital age.</p><p>The convenience of AI boyfriends allows users to escape the pressures of traditional dating. They can interact with their virtual partners at any time, without the fear of rejection or misunderstanding. This dynamic appeals to those who may struggle with social interactions or who simply seek a more manageable form of companionship. As technology continues to advance, the potential for AI to fulfill emotional needs will likely expand, further solidifying its place in modern relationships.</p><h2>The Success of “Love and Deepspace”</h2><p>“Love and Deepspace,” developed by Shanghai-based Paper Games, has become a cultural phenomenon since its launch in January 2024. The game utilizes AI and voice recognition technology to create engaging interactions between players and their virtual boyfriends. Players can unlock new gameplay features and interactions by making in-game purchases, which has contributed to the game’s financial success.</p><p>The game’s creator, Yao Runhao, has seen his wealth soar to an estimated $1.3 billion, thanks to the popularity of “Love and Deepspace.” This success story highlights the growing market for AI-driven entertainment and companionship. Paper Games, established in 2013, has generated around $850 million in sales worldwide, showcasing the potential for significant revenue in the gaming industry.</p><p>The game’s popularity extends beyond China, attracting players from the United States and other countries. This international appeal demonstrates the universal desire for connection and companionship, regardless of cultural differences. As more people seek out virtual relationships, the demand for innovative gaming experiences will likely continue to rise, paving the way for future developments in AI technology.</p><h2>The Financial Impact of AI Companionship</h2><p>The financial implications of AI companionship are profound. As players invest in games like “Love and Deepspace,” the revenue generated contributes to the overall growth of the gaming industry. The success of Paper Games serves as a testament to the lucrative potential of combining technology with emotional engagement. Analysts estimate that the company’s valuation could reach over $2 billion, based on its annual revenue and market trends.</p><p>Players like Alicia Wang are willing to spend significant amounts on their virtual relationships. Wang has reportedly invested around 35,000 yuan (approximately $4,800) to enhance her interactions with Zayne. This willingness to pay for virtual companionship underscores the emotional value that users derive from these experiences. As AI technology continues to improve, the potential for monetization in this sector will likely expand, attracting more entrepreneurs and investors.</p><p>The rise of AI boyfriends also raises questions about the future of human relationships. As technology fills emotional gaps, society may need to reconsider the nature of companionship and intimacy. While AI can provide immediate support and engagement, it cannot replace the depth of human connection. Nonetheless, the financial success of AI companionship indicates a significant shift in how people approach relationships in the digital age.</p><h2>The Future of AI in Relationships</h2><p>The emergence of AI boyfriends in China represents a significant shift in how individuals seek companionship. As technology continues to evolve, the demand for virtual relationships is likely to grow. While AI can provide immediate emotional support and engagement, it is essential to recognize the limitations of these interactions. The success of games like “Love and Deepspace” highlights the potential for innovation in the gaming industry and the growing market for AI-driven companionship.</p><p>As society navigates this new landscape, it will be crucial to balance the benefits of AI with the importance of genuine human connections. The future of relationships may involve a blend of both, where technology enhances emotional experiences without replacing the depth of human interaction. The rise of AI boyfriends is just the beginning of a new era in companionship, one that will continue to evolve as technology advances.</p>","contentLength":5844,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/artificial/comments/1iqm9rs/ai_replaces_boyfriends_in_china_making/"},{"title":"Perplexity uses Deepseek-R1 to offer Deep Research 10 times cheaper than OpenAI - Matthias Bastian","url":"https://the-decoder.com/perplexity-uses-deepseek-r1-to-offer-deep-research-10-times-cheaper-than-openai/","date":1739676328,"author":"/u/Altruistic_Age5645","guid":629,"unread":true,"content":"<p><strong>Perplexity has launched its version of Deep Research, joining Google and OpenAI in offering advanced AI-powered research capabilities.</strong></p><p>Perplexity says the new tool automatically conducts comprehensive research, performing dozens of searches and analyzing hundreds of sources to produce detailed reports in one to two minutes - a process that typically takes humans several hours.</p><p>The system works through an iterative process: it searches for information, reads documents, and plans its next research steps based on what it finds. Users can export final reports as PDFs or share them via <a href=\"https://the-decoder.com/ai-spam-is-easier-than-ever-with-perplexity-pages/\">Perplexity Pages</a>.</p><p>The service launches first on web browsers, with iOS, Android, and Mac versions planned for later release. While basic access is free, daily query limits apply to non-subscribers. Perplexity says the tool works particularly well for finance, marketing, and technology research.</p><h2>Deepseek enables cheaper Deep Research</h2><p>Perplexity's Deepseek version of Deep Research scored 20.5 percent accuracy in \"<a href=\"https://the-decoder.com/frontier-models-fail-hard-at-humanitys-last-exam-but-experts-question-if-it-matters/\">Humanity's Last Exam</a>\", a comprehensive AI benchmark with over 3,000 questions, placing it <a target=\"_blank\" rel=\"noopener\" href=\"https://framerusercontent.com/images/hplibuiapLcxAxdbJQWfhnLmiJU.png?scale-down-to=2048\">just behind</a> OpenAI's Deep Research <a href=\"https://the-decoder.com/openai-unveils-o3-its-most-advanced-reasoning-model-yet/\">based on o3</a>.</p><p>Perplexity measures its own service with Internet knowledge against other models that only answer the questions with trained knowledge, and <a target=\"_blank\" rel=\"noopener\" href=\"https://framerusercontent.com/images/ttftsapj52NTVpjPcXVOj8JfKw.png?scale-down-to=2048\">accordingly achieves significantly better results</a>. For a company whose product has been criticized for being less than truthful, advertising that is less than truthful is not a confidence-building measure.</p><h2>Checking the AI's wall of text</h2><p>Like all so-called \"answer engines\" - with or without Deep Research - Perplexity generates falsehoods and inaccuracies in its reports. It is up to humans to verify and validate these results.</p><p>The challenge is that these errors can be very subtle and hidden in large amounts of text, as in this example: Here LLM critic Gary Marcus is credited with a paper that refers to <a href=\"https://the-decoder.com/stochastic-parrot-or-world-model-how-large-language-models-learn/\">LLMs as \"stochastic parrots\"</a>. This is certainly in line with Marcus' beliefs, and he may have used the term before. But he did not write the paper.</p><p>Perplexity does not respond to regular inquiries about whether error rates in AI responses are systematically studied and how high they are. Google, Microsoft, and OpenAI do not answer this question either.</p>","contentLength":2233,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/artificial/comments/1iqj4f4/perplexity_uses_deepseekr1_to_offer_deep_research/"},{"title":"[D] Self-Promotion Thread","url":"https://www.reddit.com/r/MachineLearning/comments/1iqiy4x/d_selfpromotion_thread/","date":1739675729,"author":"/u/AutoModerator","guid":743,"unread":true,"content":"<p>Please post your personal projects, startups, product placements, collaboration needs, blogs etc.</p><p>Please mention the payment and pricing requirements for products and services.</p><p>Please do not post link shorteners, link aggregator websites , or auto-subscribe links.</p><p>Any abuse of trust will lead to bans.</p><p>Encourage others who create new posts for questions to post here instead!</p><p>Thread will stay alive until next one so keep posting after the date in the title.</p><p>Meta: This is an experiment. If the community doesnt like this, we will cancel it. This is to encourage those in the community to promote their work by not spamming the main threads.</p>","contentLength":636,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"[D] Is my company missing out by avoiding deep learning?","url":"https://www.reddit.com/r/MachineLearning/comments/1iq9gtk/d_is_my_company_missing_out_by_avoiding_deep/","date":1739648562,"author":"/u/DatAndre","guid":257,"unread":true,"content":"<p>Disclaimer: obviously it does not make sense to use a neural network if a linear regression is enough. </p><p>I work at a company that strictly adheres to mathematical, explainable models. Their stance is that methods like Neural Networks or even Gradient Boosting Machines are too \"black-box\" and thus unreliable for decision-making. While I understand the importance of interpretability (especially in mission critical scenarios) I can't help but feel that this approach is overly restrictive. </p><p>I see a lot of research and industry adoption of these methods, which makes me wonder: are they really just black boxes, or is this an outdated view? Surely, with so many people working in this field, there must be ways to gain insights into these models and make them more trustworthy. </p><p>Am I also missing out on them, since I do not have work experience with such models?</p><p>EDIT: Context is formula one! However, races are a thing and support tools another. I too would avoid such models in anything strictly related to a race, unless completely necessary. I just feels that there's a bias that is context-independent here. </p>","contentLength":1110,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"‘Mass theft’: Thousands of artists call for AI art auction to be cancelled","url":"https://www.theguardian.com/technology/2025/feb/10/mass-theft-thousands-of-artists-call-for-ai-art-auction-to-be-cancelled","date":1739647902,"author":"/u/F0urLeafCl0ver","guid":691,"unread":true,"content":"<p>Thousands of artists are urging the auction house Christie’s to cancel a sale of art created with artificial intelligence, claiming the technology behind the works is committing “mass theft”.</p><p>The <a href=\"https://www.christies.com/en/auction/augmented-intelligence-23942-nyr/\" data-link-name=\"in body link\">Augmented Intelligence auction</a> has been described by Christie’s as the first AI-dedicated sale by a major auctioneer and features 20 lots with prices ranging from $10,000 to $250,000 for works by artists including Refik Anadol and the late AI art pioneer Harold Cohen.</p><p>A <a href=\"https://openletter.earth/cancel-the-christies-ai-art-auction-f5135435?limit=0\" data-link-name=\"in body link\">letter calling for the auction to be scrapped</a> has received 3,000 signatures, including from Karla Ortiz and Kelly McKernan, who are suing AI companies over claims that tech firms’ image generation tools have used their work without permission.</p><p>The letter says: “Many of the artworks you plan to auction were created using AI models that are known to be trained on copyrighted work without a licence. These models, and the companies behind them, exploit human artists, using their work without permission or payment to build commercial AI products that compete with them.”</p><p>Calling on Christie’s to cancel the auction, which starts on 20 February, it adds: “Your support of these models, and the people who use them, rewards and further incentivizes AI companies’ mass theft of human artists’ work.”</p><p>The use of copyrighted work to train AI models – the technology that underpins chatbots and image generation tools such as Stable Diffusion and Midjourney – has become a battleground between creatives and tech companies, with artists, <a href=\"https://www.theguardian.com/technology/2023/jul/10/sarah-silverman-sues-openai-meta-copyright-infringement\" data-link-name=\"in body link\">authors</a>, <a href=\"https://www.theguardian.com/media/2023/dec/27/new-york-times-openai-microsoft-lawsuit\" data-link-name=\"in body link\">publishers</a> and <a href=\"https://www.theguardian.com/music/article/2024/jun/25/record-labels-sue-ai-song-generator-apps-copyright-infringement-lawsuit\" data-link-name=\"in body link\">music labels</a> launching a series of lawsuits alleging breach of copyright.</p><p>The British composer Ed Newton-Rex, a key figure in the <a href=\"https://www.theguardian.com/film/2024/oct/22/thom-yorke-and-julianne-moore-join-thousands-of-creatives-in-ai-warning\" data-link-name=\"in body link\">campaign by creative professionals</a> for protection of their work and a signatory to the letter, said at least nine of the works appearing in the auction appeared to have used models trained on artists’ work. However, other pieces in the auction do not appear to have used such models.</p><p>A spokesperson for Christie’s said that “in most cases” the AI used to create art in the auction had been trained on the artists’ “own inputs”.</p><p>“The artists represented in this sale all have strong, existing multidisciplinary art practices, some recognised in leading museum collections. The works in this auction are using artificial intelligence to enhance their bodies of work and in most cases AI is being employed in a controlled manner, with data trained on the artists’ own inputs,” said the spokesperson.</p><p>A British artist whose work features in the auction, Mat Dryhurst, said he cared about the issue of art and AI “deeply” and rejected the criticisms in the letter. A piece by Dryhurst and his wife, Holly Herndon – based on a work called xhairymutantx – is on sale at the auction with an estimated price of between $70,000 and $90,000.</p><p>“This is of interest to us and we have made a lot of art exploring and attempting to intervene in this process as is well within our rights.”</p><p>He added: “It is not illegal to use any model to create artwork. I resent that an important debate that should be focused on companies and state policy is being focused on artists grappling with the technology of our time.”</p><p>Anadol also rejected the criticism. In a post on X, he said the backlash was a consequence of “lazy critic practices and doomsday hysteria”.</p><p>Anadol told the Guardian the piece being auctioned, ISS Dreams, was created using AI technology that had been trained on publicly available datasets from NASA “that have been used widely by artists for many decades.”</p><p>He added that “the suggestion that this artwork was created using ‘AI models that are known to be on copyrighted work trained without a license’ is factually incorrect.”</p>","contentLength":3744,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/artificial/comments/1iq97ti/mass_theft_thousands_of_artists_call_for_ai_art/"},{"title":"Lil guy is trying his best","url":"https://www.reddit.com/r/artificial/comments/1iq6dyy/lil_guy_is_trying_his_best/","date":1739640466,"author":"/u/MetaKnowing","guid":292,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"[D] Have any LLM papers predicted a token in the middle rather than the next token?","url":"https://www.reddit.com/r/MachineLearning/comments/1iq4f0r/d_have_any_llm_papers_predicted_a_token_in_the/","date":1739635189,"author":"/u/TheWittyScreenName","guid":516,"unread":true,"content":"<p>I’m working on a project (unrelated to NLP) where we use essentially the same architecture and training as GPT-3, but we’re more interested in finding a series of tokens to connect a starting and ending “word” than the next “word”. Since we’re drawing a lot from LLMs in our setup, I’m wondering if there’s been any research into how models perform when the loss function isn’t based on the next token, but instead predicting a masked token somewhere in the input sequence. </p><p>Eventually we would like to expand this (maybe through fine tuning) to predict a longer series of missing tokens than just one but this seems like a good place to start. </p><p>I couldn’t find much about alternate unsupervised training schemes in the literature but it seems like someone must have tried this already. Any suggestions, or reasons that this is a bad idea?</p>","contentLength":859,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Larry Ellison wants to put all US data in one big AI system","url":"https://www.theregister.com/2025/02/12/larry_ellison_wants_all_data/","date":1739631593,"author":"/u/namanyayg","guid":602,"unread":true,"content":"<p>If governments want AI to improve services and security for their citizens, then they need to put all their information in one place – even citizens’ genomic data – according to Larry Ellison, the Oracle database tycoon.</p><p>Ellison shared his take on what governments need to do to succeed with AI during a <a href=\"https://www.youtube.com/watch?v=FG2AtiInwKM\" rel=\"nofollow\">discussion</a> with <a href=\"https://www.theregister.com/2023/08/10/ellison_become_major_contributor_to/\">his buddy</a> former UK prime minister Tony Blair at the World Governments Summit in Dubai today.</p><p>The world's fourth-most-richest man – a <a rel=\"nofollow\" target=\"_blank\" href=\"https://www.nytimes.com/interactive/2024/12/23/business/elon-musk-trump-family-friends-backers.html\">good friend</a> also of the world's richest man <a target=\"_blank\" href=\"https://www.theregister.com/2025/02/07/opinion_column_musk/\">Elon Musk</a> – insisted artificial intelligence is soon going to change everyone's lives \"across the board.\"</p><blockquote><p>I have to tell the AI model as much about my country as I can. We need to unify all the national data</p></blockquote><p>If governments want in, they’ll need to gather all their data – spatial information, economic data, electronic healthcare records including genomic data, and info about infrastructure. Whatever they’ve got, basically. And put it all in one place to be analyzed by algorithms. The American multi-billionaire used the United States as an example, if not a goal.</p><p>\"I have to tell [the] AI model as much about my country as I can,\" Ellison said. \"We need to unify all the national data, put it into a database where it's easily consumable by the AI model, and then ask whatever question you like,\" he said. \"That's the missing link.\"</p><p>He believes the payoff will include better healthcare, thanks to treatments tailored to individuals, and the ability for governments to lift food production by better predicting crop yields. Analyzing land so that farmers can be advised where to apply fertilizers or increase irrigation was another scenario Ellison floated.</p><p>\"As long as countries will put their data - all of it - in a single place we can use AI to help manage the care of all of the patients and the population at large,\" Ellison said, adding his belief that AI can handle other social services and eliminate fraud.</p><p>Of course, such a vast database system could also be the precursor to pervasive surveillance – an idea Ellison last year <a href=\"https://www.theregister.com/2024/09/16/oracle_ai_mass_surveillance_cloud/\">said</a> he feels is desirable and would like Oracle to help facilitate.</p><p>Constant real-time surveillance of populations, analyzed by Oracle-powered machine-learning products, would keep everyone \"on their best behavior,\" Ellison said at an Oracle financial analyst conference in September 2024. We're reminded of the <a target=\"_blank\" href=\"https://www.theregister.com/2019/06/26/nsa_spy_program_aclu/\">NSA</a>, <a target=\"_blank\" href=\"https://www.theregister.com/2013/06/07/prism_plan_for_nsa_surveillance_of_internet_companies/\">PRISM</a>, <a target=\"_blank\" href=\"https://www.theregister.com/2014/01/24/snowden_speaks_nsa_whistleblower_calls_for_global_privacy_standards/\">Snowden</a>.</p><p>Ellison is not just a techno-optimist. He’s also a top executive and shareholder who has made big AI investments as well as a database company to feed.</p><p>He therefore told the Dubai audience that Oracle, already a <a target=\"_blank\" href=\"https://www.theregister.com/2025/02/08/doge_us_goverment_tech_spending/\">big-time government and military contractor</a>, is ready to help nations realize his above-mentioned AI visions. Ie: Put all this data into one big expensive Oracle system to learn from and process.</p><p>\"Oracle is building a 2.2GW datacenter that costs between $50 and $100 billion dollars to build,\" Ellison said, noting it's sites like that where super-powered AI models will be trained. \"Because these models are so expensive, you won't build your own as a rule. There'll be a handful of these models.\"</p><p>And a handful of players that can train them. Oracle’s own facilities will likely be one. The super-corp has also joined another, the <a href=\"https://www.theregister.com/2025/01/22/openai_stargate_ai_datacenter_company\">Stargate project</a>, that plans to blow $500 billion on AI infrastructure in the US in the next four years. ®</p>","contentLength":3335,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/artificial/comments/1iq34im/larry_ellison_wants_to_put_all_us_data_in_one_big/"},{"title":"Altman: OpenAI not for sale, especially to competitor who is not able to beat us","url":"https://www.axios.com/2025/02/11/openai-altman-musk-offer","date":1739629077,"author":"/u/namanyayg","guid":472,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/artificial/comments/1iq29zz/altman_openai_not_for_sale_especially_to/"},{"title":"Will AI Lead to the Disintermediation of Knowledge?","url":"https://www.datasciencecentral.com/will-ai-lead-to-the-disintermediation-of-knowledge/","date":1739626129,"author":"Bill Schmarzo","guid":63,"unread":true,"content":"<p>Key Blog Points: For decades, organizations have operated under the central assumption that knowledge flows downward. Senior leaders, industry veterans, and domain experts have traditionally been the primary gatekeepers of critical information. Their insights, honed over years of experience, have been the cornerstone of strategic decision-making. Enter artificial intelligence (AI). Many folks are concerned that…&nbsp;<a href=\"https://www.datasciencecentral.com/will-ai-lead-to-the-disintermediation-of-knowledge/\" rel=\"bookmark\">Read More »</a></p>","contentLength":431,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Chinese Vice Minister says China and the US must work together to control rogue AI: \"If not... I am afraid that the probability of the machine winning will be high.\"","url":"https://www.scmp.com/news/china/diplomacy/article/3298267/china-and-us-should-team-rein-risks-runaway-ai-former-diplomat-says","date":1739622429,"author":"/u/MetaKnowing","guid":293,"unread":true,"content":"<div datatype=\"p\" data-qa=\"Component-Component\">A former senior Chinese diplomat has called for China and the US to work together to head off the risks of rapid advances in <a target=\"_self\" href=\"https://www.scmp.com/topics/artificial-intelligence?module=inline&amp;pgtype=article\" data-qa=\"BaseLink-renderAnchor-StyledAnchor\"></a> (AI).</div><p datatype=\"p\" data-qa=\"Component-Component\">But the prospect of cooperation was bleak as geopolitical tensions rippled out through the technological landscape, former Chinese foreign vice-minister Fu Ying told a closed-door AI governing panel in Paris on Monday.</p><p datatype=\"p\" data-qa=\"Component-Component\">“Realistically, many are not optimistic about US-China AI collaboration, and the tech world is increasingly subject to geopolitical distractions,” Fu said.</p><p datatype=\"p\" data-qa=\"Component-Component\">“As long as China and the US can cooperate and work together, they can always find a way to control the machine. [Nevertheless], if the countries are incompatible with each other ... I am afraid that the probability of the machine winning will be high.”</p><div datatype=\"p\" data-qa=\"Component-Component\">The panel discussion is part of a two-day global <a target=\"_self\" href=\"https://www.scmp.com/news/world/europe/article/3297992/trumps-ai-ambition-and-chinas-deepseek-overshadow-major-ai-summit-paris?module=Europe&amp;pgtype=section?module=inline&amp;pgtype=article\" data-qa=\"BaseLink-renderAnchor-StyledAnchor\"></a> that started in Paris on Monday.</div><p datatype=\"p\" data-qa=\"Component-Component\">Other panel members included Yoshua Bengio, the Canadian computer scientist recognised as a pioneer in the field, and Alondra Nelson, a central AI policy adviser to former US president Joe Biden’s administration and the United Nations.</p>","contentLength":1084,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/artificial/comments/1iq0b4t/chinese_vice_minister_says_china_and_the_us_must/"},{"title":"[P] Daily ArXiv filtering powered by LLM judge","url":"https://www.reddit.com/r/MachineLearning/comments/1ipz934/p_daily_arxiv_filtering_powered_by_llm_judge/","date":1739618056,"author":"/u/MadEyeXZ","guid":258,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"[D] What's the most promising successor to the Transformer?","url":"https://www.reddit.com/r/MachineLearning/comments/1ipvau4/d_whats_the_most_promising_successor_to_the/","date":1739600221,"author":"/u/jsonathan","guid":259,"unread":true,"content":"<p>All I know about is MAMBA, which looks promising from an efficiency perspective (inference is linear instead of quadratic), but AFAIK nobody's trained a big model yet. There's also <a href=\"https://arxiv.org/pdf/2405.04517\">xLSTM</a> and <a href=\"https://arxiv.org/pdf/2405.13956\">Aaren</a>.</p><p>What do y'all think is the most promising alternative architecture to the transformer?</p>","contentLength":283,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"How I Became A Machine Learning Engineer (No CS Degree, No Bootcamp)","url":"https://towardsdatascience.com/how-i-became-a-machine-learning-engineer-no-cs-degree-no-bootcamp/","date":1739586781,"author":"Egor Howell","guid":10,"unread":true,"content":"<p>Machine learning and <a href=\"https://towardsdatascience.com/tag/ai/\" title=\"AI\">AI</a> are among the most popular topics nowadays, especially within the tech space. I am fortunate enough to work and develop with these technologies every day as a machine learning engineer!</p><p>In this article, I will walk you through my journey to becoming a machine learning engineer, shedding some light and advice on how you can become one yourself!</p><p>In one of my previous articles, I extensively wrote about my journey from school to securing my first <a href=\"https://towardsdatascience.com/tag/data-science/\" title=\"Data Science\">Data Science</a> job. I recommend you <a href=\"https://medium.com/towards-data-science/how-i-became-a-data-scientist-no-cs-degree-no-bootcamp-82c321904986\">check out that article</a>, but I will summarise the key timeline here.</p><p>Pretty much everyone in my family studied some sort of STEM subject. My great-grandad was an engineer, both my grandparents studied physics, and my mum is a maths teacher.</p><p><em>So, my path was always paved for me.</em></p><p>I chose to study physics at university after watching The Big Bang Theory at age 12; it’s fair to say everyone was very proud!</p><p>At school, I wasn’t dumb by any means. I was actually relatively bright, but I didn’t fully apply myself. I got decent grades, but definitely not what I was fully capable of.</p><p>I was very arrogant and thought I would do well with zero work.</p><p>I applied to top universities like Oxford and Imperial College, but given my work ethic, I was delusional thinking I had a chance. On results day, I ended up in clearing as I missed my offers. This was probably one of the saddest days of my life.</p><p>Clearing in the UK is where universities offer places to students on certain courses where they have space. It’s mainly for students who don’t have a university offer.</p><p>I was lucky enough to be offered a chance to study physics at the University of Surrey, and I went on to earn a first-class master’s degree in physics!</p><p>There is genuinely no substitute for hard work. It is a cringy cliche, but it is true!</p><p>My original plan was to do a PhD and be a full-time researcher or professor, but during my degree, I did a research year, and I just felt a career in research was not for me. Everything moved so slowly, and it didn’t seem there was much opportunity in the space.</p><p>During this time, DeepMind released their<a href=\"https://www.youtube.com/watch?v=WXuK6gekU1Y&amp;t=1539s\"></a>documentary on YouTube, which popped up on my home feed.</p><p>From the video, I started to understand how AI worked and learn about neural networks, reinforcement learning, and deep learning. To be honest, to this day I am still not an expert in these areas.</p><p>Naturally, I dug deeper and found that a data scientist uses AI and machine learning algorithms to solve problems. I immediately wanted in and started applying for data science graduate roles.</p><p>I spent countless hours coding, taking courses, and working on projects. I applied to and eventually landed my first data science graduate scheme in September 2021.</p><p><em>You can hear more about my journey from a <a href=\"https://tobeadatascientist.substack.com/p/overcoming-rejection-lessons-from-egor-howell\">podcast</a>.</em></p><p>I started my career in an insurance company, where I built various supervised learning models, mainly using gradient boosted tree packages like CatBoost, XGBoost, and<a href=\"https://medium.com/towards-data-science/breaking-down-generalized-linear-models-d9212526e51d?sk=fda0298cebcb8e9e0c20cb6af8ed4f06\"> generalised linear models (GLMs)</a>.</p><p>I built models to predict:</p><ul><li> — Did someone fraudulently make a claim to profit.</li><li>— What’s the premium we should give someone.</li><li>— How many claims will someone have.</li><li> — What’s the average claim value someone will have.</li></ul><p>I made around six models spanning the regression and classification space. I learned so much here, especially in statistics, as I worked very closely with Actuaries, so my maths knowledge was excellent.</p><p>However, due to the company’s structure and setup, it was difficult for my models to advance past the PoC stage, so I felt I lacked the “tech” side of my toolkit and understanding of how companies use machine learning in production.</p><p>After a year, my previous employer reached out to me asking if I wanted to apply to a junior data scientist role that specialises in<a href=\"https://medium.com/@egorhowell/list/time-series-00bbfb9f5359\"> time series forecasting</a> and<a href=\"https://medium.com/@egorhowell/list/optimisation-algorithms-069bf9c6c8d5\"> optimisation</a> problems. I really liked the company, and after a few interviews, I was offered the job!</p><p>I worked at this company for about 2.5 years, where I became an expert in forecasting and combinatorial optimisation problems.</p><p>I developed many algorithms and deployed my models to production through AWS using software engineering best practices, such as unit testing, lower environment, shadow system, CI/CD pipelines, and much more.</p><p><em>Fair to say I learned a lot.&nbsp;</em></p><p>I worked very closely with software engineers, so I picked up a lot of engineering knowledge and continued self-studying machine learning and statistics on the side.</p><p>Over time, I realised the actual value of data science is using it to make live decisions. There is a good quote by<a href=\"https://www.linkedin.com/posts/pau-labarta-bajo-4432074b_machinelearning-mlops-realworldml-activity-7195694289178214400-gZyw\"> Pau Labarta Bajo</a></p><p>ML models inside Jupyter notebooks have a business value of $0</p><p>There is no point in building a really complex and sophisticated model if it will not produce results. Seeking out that extra 0.1% accuracy by staking multiple models is often not worth it.</p><p>You are better off building something simple that you can deploy, and that will bring real financial benefit to the company.</p><p>With this in mind, I started thinking about the future of data science. In my head, there are two avenues:</p><ul><li> -&gt; You work primarily to gain insight into what the business should be doing and what it should be looking into to boost its performance.</li><li> -&gt; You ship solutions (models, decision algorithms, etc.) that bring business value.</li></ul><p>I feel the data scientist who analyses and builds PoC models will become extinct in the next few years because, as we said above, they don’t provide tangible value to a business.</p><p>That’s not to say they are entirely useless; you have to think of it from the business perspective of their return on investment. Ideally, the value you bring in should be more than your salary.</p><p>You want to say that you did “X that produced Y”, which the above two avenues allow you to do.</p><p>The engineering side was the most interesting and enjoyable for me. I genuinely enjoy coding and building stuff that benefits people, and that they can use, so naturally, that’s where I gravitated towards.</p><p>To move to the ML engineering side, I asked my line manager if I could deploy the algorithms and ML models I was building myself. I would get help from software engineers, but I would write all the production code, do my own system design, and set up the deployment process independently.</p><p><em>And that’s exactly what I did.</em></p><p>Coincidentally, my current employer contacted me around this time and asked if I wanted to apply for a machine learning engineer role that specialises in general ML and optimisation at their company!</p><p>Call it luck, but clearly, the universe was telling me something. After several interview rounds, I was offered the role, and I am now a fully fledged machine learning engineer!</p><p>Fortunately, a role kind of “fell to me,” but I created my own luck through up-skilling and documenting my learning. That is why I always tell people to show their work — you don’t know what may come from it.</p><p>I want to share the main bits of advice that helped me transition from a machine learning engineer to a data scientist.</p><ul><li> — A machine learning engineer is  an entry-level position in my opinion. You need to be well-versed in data science, machine learning, software engineering, etc. You don’t need to be an expert in all of them, but have good fundamentals across the board. That’s why I recommend having a couple of years of experience as either a software engineer or data scientist and self-study other areas.</li><li> — If you are from data science, you must learn to write good, well-tested production code. You must know things like typing, linting, unit tests, formatting, mocking and CI/CD. It’s not too difficult, but it just requires some practice. I recommend asking your current company to work with software engineers to gain this knowledge, it worked for me!</li><li> — Most companies nowadays deploy many of their architecture and systems on the cloud, and machine learning models are no exception. So, it’s best to get practice with these tools and understand how they enable models to go live. I learned most of this on the job, to be honest, but there are courses you can take.</li><li> — I am sure most of you know this already, but every tech professional should be proficient in the command line. You will use it extensively when deploying and writing production code. I have a basic guide you can checkout<a href=\"https://medium.com/towards-data-science/an-introduction-to-the-shell-676ee5b899df?sk=0c6e101165b4314b98ab39d11525366c\"> here</a>.</li><li><strong>Data Structures &amp; Algorithms </strong>— Understanding the fundamental algorithms in computer science are very useful for MLE roles. Mainly because you will likely be asked about it in interviews. It’s not too hard to learn compared to machine learning; it just takes time. Any course will do the trick.</li><li> — Again, most tech professionals should know Git, but as an MLE, it is essential. How to squash commits, do code reviews, and write outstanding pull requests are musts.</li><li> — Many MLE roles I saw required you to have some specialisation in a particular area. I specialise in time series forecasting, optimisation, and general ML based on my previous experience. This helps you stand out in the market, and most companies are looking for specialists nowadays.</li></ul><p>The main theme here is that I basically up-skilled my software engineering abilities. This makes sense as I already had all the math, stats, and machine learning knowledge from being a data scientist.</p><p>If I were a software engineer, the transition would likely be the reverse. This is why securing a machine learning engineer role can be quite challenging, as it requires proficiency across a wide range of skills.</p><h3><strong>Summary &amp; Further Thoughts</strong></h3><p>I have a free newsletter, <a href=\"https://dishingthedata.substack.com/\"></a>, where I share weekly tips and advice as a practising data scientist. Plus, when you subscribe, you will get my and<strong> short PDF version of my AI roadmap</strong>!</p>","contentLength":9683,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"An art exhibit in Japan where a chained robot dog will try to attack you to showcase the need for AI safety.","url":"https://v.redd.it/sglstazd96je1","date":1739568243,"author":"/u/eternviking","guid":294,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/artificial/comments/1iple9t/an_art_exhibit_in_japan_where_a_chained_robot_dog/"},{"title":"OpenAI: The Age of AI Is Here!","url":"https://www.youtube.com/watch?v=97kQRYwL3P0","date":1739557087,"author":"Two Minute Papers","guid":329,"unread":true,"content":"<article>❤️ Check out Lambda here and sign up for their GPU Cloud: https://lambdalabs.com/papers\n\n📝 The paper \"Competitive Programming with Large Reasoning Models\" is available here:\nhttps://arxiv.org/abs/2502.06807\n\n📝 My paper on simulations that look almost like reality is available for free here:\nhttps://rdcu.be/cWPfD \n\nOr this is the orig. Nature Physics link with clickable citations:\nhttps://www.nature.com/articles/s41567-022-01788-5\n\n🙏 We would like to thank our generous Patreon supporters who make Two Minute Papers possible:\nBenji Rabhan, B Shang, Christian Ahlin, Gordon Child, John Le, Juan Benet, Kyle Davis, Loyal Alchemist, Lukas Biewald, Michael Tedder, Owen Skarpness, Richard Sundvall, Steef, Taras Bobrovytsky, Thomas Krcmar, Tybie Fitzhugh, Ueli GallizziIf you wish to appear here or pick up other perks, click here: https://www.patreon.com/TwoMinutePapers\n\nMy research: https://cg.tuwien.ac.at/~zsolnai/\nX/Twitter: https://twitter.com/twominutepapers\nThumbnail design: Felícia Zsolnai-Fehér - http://felicia.hu</article>","contentLength":1040,"flags":null,"enclosureUrl":"https://www.youtube.com/v/97kQRYwL3P0?version=3","enclosureMime":"","commentsUrl":null},{"title":"Roadmap to Becoming a Data Scientist, Part 4: Advanced Machine Learning","url":"https://towardsdatascience.com/roadmap-to-becoming-a-data-scientist-part-4-advanced-machine-learning/","date":1739552400,"author":"Vyacheslav Efimov","guid":9,"unread":true,"content":"<p>Data science is undoubtedly one of the most fascinating fields today.&nbsp;Following significant breakthroughs in machine learning about a decade ago, data science has surged in popularity within the tech community.&nbsp;Each year, we witness increasingly powerful tools that once seemed unimaginable.&nbsp;Innovations such as the&nbsp;,&nbsp;, the&nbsp;<em>Retrieval-Augmented Generation (RAG</em>) framework, and state-of-the-art&nbsp;&nbsp;— including&nbsp;&nbsp;— have had a profound impact on our world.</p><p>However, with the abundance of tools and the ongoing hype surrounding AI, it can be overwhelming — especially for beginners — to determine which skills to prioritize when aiming for a career in data science.&nbsp;Moreover, this field is highly demanding, requiring substantial dedication and perseverance.</p><p>The first three parts of this series outlined the necessary skills to become a data scientist in three key areas: <a href=\"https://towardsdatascience.com/roadmap-to-becoming-a-data-scientist-part-1-maths-2dc9beb69b27/\">math</a>, <a href=\"https://towardsdatascience.com/roadmap-to-becoming-a-data-scientist-part-2-software-engineering-e2fee3fe4d71/\">software engineering</a>, and <a href=\"https://towardsdatascience.com/roadmap-to-becoming-a-data-scientist-part-3-machine-learning-628248c96cb5/\">machine learning</a>.&nbsp;While knowledge of classical <a href=\"https://towardsdatascience.com/tag/machine-learning/\" title=\"Machine Learning\">Machine Learning</a> and neural network algorithms is an excellent starting point for aspiring data specialists, there are still many&nbsp;important topics in machine learning that must be mastered to work on more advanced projects.</p><blockquote><p><em>This article will focus solely on the math skills necessary to start a career in Data Science.&nbsp;Whether pursuing this path is a worthwhile choice based on your background and other factors will be discussed in a separate article.</em></p></blockquote><h2>The importance of learning evolution of methods in machine learning</h2><blockquote><p><em>The section below provides information about the evolution of methods in natural language processing (NLP).</em></p></blockquote><p>In contrast to previous articles in this series, I have decided to change the format in which I present the necessary skills for aspiring data scientists. Instead of directly listing specific competencies to develop and the motivation behind mastering them, I will briefly outline the most important approaches, presenting them in chronological order as they have been developed and used over the past decades in machine learning.</p><p>The reason is that I believe it is crucial to study these algorithms from the very beginning. In machine learning, many new methods are built upon older approaches, which is especially true for <a href=\"https://towardsdatascience.com/tag/nlp/\" title=\"NLP\">NLP</a> and computer vision.</p><p>For example, jumping directly into the implementation details of modern&nbsp;large language models (LLMs)&nbsp;without any preliminary knowledge may make it very difficult for beginners to grasp the motivation and underlying ideas of specific mechanisms.</p><p><em>Given this, in the next two sections, I will highlight in&nbsp;</em><em>&nbsp;the key concepts that should be studied.</em></p><p><strong>Natural language processing (NLP)</strong>&nbsp;is a broad field that focuses on processing textual information. Machine learning algorithms cannot work directly with raw text, which is why text is usually preprocessed and converted into numerical vectors that are then fed into neural networks.</p><p>Before being converted into vectors, words undergo&nbsp;, which includes simple techniques such as&nbsp;,&nbsp;<strong>stemming, lemmatization, normalization</strong>, or removing&nbsp;. After preprocessing, the resulting text is encoded into&nbsp;. Tokens represent the smallest textual elements in a collection of documents. Generally, a token can be a part of a word, a sequence of symbols, or an individual symbol. Ultimately, tokens are converted into numerical vectors.</p><p>The&nbsp;&nbsp;method is the most basic way to encode tokens, focusing on counting the frequency of tokens in each document. However, in practice, this is usually not sufficient, as it is also necessary to account for token importance — a concept introduced in the&nbsp;&nbsp;and&nbsp;&nbsp;methods. While TF-IDF improves upon the naive counting approach of bag of words, researchers have developed a completely new approach called embeddings.</p><p>&nbsp;are numerical vectors whose components preserve the semantic meanings of words. Because of this, embeddings play a crucial role in NLP, enabling input data to be trained or used for model inference. Additionally, embeddings can be used to compare text similarity, allowing for the retrieval of the most relevant documents from a collection.</p><blockquote><p><em>Embeddings can also be used to encode other unstructured data, including images, audio, and videos.</em></p></blockquote><p>As a field, NLP has been evolving rapidly over the last 10–20 years to efficiently solve various text-related problems. Complex tasks like text translation and text generation were initially addressed using&nbsp;<strong>recurrent neural networks (RNNs)</strong>, which introduced the concept of memory, allowing neural networks to capture and retain key contextual information in long documents.</p><p>Although RNN performance gradually improved, it remained suboptimal for certain tasks. Moreover, RNNs are relatively slow, and their sequential prediction process does not allow for parallelization during training and inference, making them less efficient.</p><p>Additionally, the original Transformer architecture can be decomposed into two separate modules:&nbsp;&nbsp;and&nbsp;. Both of these form the foundation of the most state-of-the-art models used today to solve various NLP problems. Understanding their principles is valuable knowledge that will help learners advance further when studying or working with other&nbsp;<strong>large language models (LLMs)</strong>.</p><p>When it comes to LLMs, I strongly recommend studying the evolution of at least the first three GPT models, as they have had a significant impact on the AI world we know today. In particular, I would like to highlight the concepts of&nbsp;&nbsp;and&nbsp;, introduced in&nbsp;GPT-2, which enable LLMs to solve text generation tasks without explicitly receiving any training examples for them.</p><p>Another important technique developed in recent years is&nbsp;<strong>retrieval-augmented generation (RAG)</strong>.&nbsp;<em>The main limitation of LLMs is that they are only aware of the context used during their training.</em>&nbsp;As a result, they lack knowledge of any information beyond their training data.</p><p>The retriever converts the input prompt into an embedding, which is then used to query a vector database. The database returns the most relevant context based on the similarity to the embedding. This retrieved context is then combined with the original prompt and passed to a generative model. The model processes both the initial prompt and the additional context to generate a more informed and contextually accurate response.</p><blockquote><p><em>A good example of this limitation is the first version of the ChatGPT model, which was trained on data up to the year 2022 and had no knowledge of events that occurred from 2023 onward.</em></p></blockquote><p>To address this limitation, OpenAI researchers developed a RAG pipeline, which includes a constantly updated database containing new information from external sources. When ChatGPT is given a task that requires external knowledge, it queries the database to retrieve the most relevant context and integrates it into the final prompt sent to the machine learning model.</p><p>The goal of distillation is to create a smaller model that can imitate a larger one. In practice, this means that if a large model makes a prediction, the smaller model is expected to produce a similar result.</p><p>In the modern era, LLM development has led to models with millions or even billions of parameters. As a consequence, the overall size of these models may exceed the hardware limitations of standard computers or small portable devices, which come with many constraints.</p><p>Quantization is the process of reducing the memory required to store numerical values representing a model’s weights.</p><p>This is where optimization techniques become particularly useful, allowing LLMs to be compressed without significantly compromising their performance. The most commonly used techniques today include&nbsp;,, and&nbsp;.</p><p>Pruning refers to discarding the least important weights of a model.</p><p>Regardless of the area in which you wish to specialize, knowledge of&nbsp;&nbsp;is a must-have skill! Fine-tuning is a powerful concept that allows you to efficiently adapt a pre-trained model to a new task.</p><p>Fine-tuning is especially useful when working with very large models. For example, imagine you want to use BERT to perform semantic analysis on a specific dataset. While BERT is trained on general data, it might not fully understand the context of your dataset. At the same time, training BERT from scratch for your specific task would require a massive amount of resources.</p><p>Here is where fine-tuning comes in: it involves taking a pre-trained BERT (or another model) and freezing some of its layers (usually those at the beginning). As a result, BERT is retrained, but this time only on the new dataset provided. Since BERT updates only a subset of its weights and the new dataset is likely much smaller than the original one BERT was trained on, fine-tuning becomes a very efficient technique for adapting BERT’s rich knowledge to a specific domain.</p><blockquote><p><em>Fine-tuning is widely used not only in NLP but also across many other domains.</em></p></blockquote><p>As the name suggests,&nbsp;&nbsp;involves analyzing images and videos using machine learning. The most common tasks include image classification, object detection, image segmentation, and generation.</p><p>Most CV algorithms are based on neural networks, so it is essential to understand how they work in detail. In particular, CV uses a special type of network called&nbsp;<strong>convolutional neural networks (CNNs)</strong>. These are similar to fully connected networks, except that they typically begin with a set of specialized mathematical operations called&nbsp;.</p><blockquote><p><em>In simple terms, convolutions act as filters, enabling the model to extract the most important features from an image, which are then passed to fully connected layers for further analysis.</em></p></blockquote><p>The next step is to study the most popular CNN architectures for classification tasks, such as&nbsp;<strong>AlexNet, VGG, Inception, ImageNet</strong>, and&nbsp;.</p><p>Speaking of the object detection task, the&nbsp;&nbsp;algorithm is a clear winner. It is not necessary to study all of the dozens of versions of YOLO. In reality, going through the original paper of the first YOLO should be sufficient to understand how a relatively difficult problem like object detection is elegantly transformed into both classification and regression problems. This approach in YOLO also provides a nice intuition on how more complex CV tasks can be reformulated in simpler terms.</p><p>While there are many architectures for performing image segmentation, I would strongly recommend learning about&nbsp;, which introduces an encoder-decoder architecture.</p><p>Finally, image generation is probably one of the most challenging tasks in CV. Personally, I consider it an optional topic for learners, as it involves many advanced concepts. Nevertheless, gaining a high-level intuition of how&nbsp;<strong>generative adversial networks (GAN)</strong>&nbsp;function to generate images is a good way to broaden one’s horizons.</p><blockquote><p><em>In some problems, the training data might not be enough to build a performant model. In such cases, the data augmentation technique is commonly used. It involves the artificial generation of training data from already existing data (images). By feeding the model more diverse data, it becomes capable of learning and recognizing more patterns.</em></p></blockquote><p>It would be very hard to present in detail the <a href=\"https://towardsdatascience.com/tag/roadmaps/\" title=\"Roadmaps\">Roadmaps</a> for all existing machine learning domains in a single article. That is why, in this section, I would like to briefly list and explain some of the other most popular areas in data science worth exploring.</p><p>First of all,&nbsp;<strong>recommender systems (RecSys)</strong>&nbsp;have gained a lot of popularity in recent years. They are increasingly implemented in online shops, social networks, and streaming services. The key idea of most algorithms is to take a large initial matrix of all users and items and decompose it into a product of several matrices in a way that associates every user and every item with a high-dimensional embedding. This approach is very flexible, as it then allows different types of comparison operations on embeddings to find the most relevant items for a given user. Moreover, it is much more rapid to perform analysis on small matrices rather than the original, which usually tends to have huge dimensions.</p><p> often goes hand in hand with RecSys. When a RecSys has identified a set of the most relevant items for the user, ranking algorithms are used to sort them to determine the order in which they will be shown or proposed to the user. A good example of their usage is search engines, which filter query results from top to bottom on a web page.</p><p>Closely related to ranking, there is also a&nbsp;&nbsp;problem that aims to optimally map objects from two sets, A and B, in a way that, on average, every object pair&nbsp;is mapped “well” according to a matching criterion. A use case example might include distributing a group of students to different university disciplines, where the number of spots in each class is limited.</p><p>&nbsp;is an unsupervised machine learning task whose objective is to split a dataset into several regions (clusters), with each dataset object belonging to one of these clusters. The splitting criteria can vary depending on the task. Clustering is useful because it allows for grouping similar objects together. Moreover, further analysis can be applied to treat objects in each cluster separately.</p><p>The goal of clustering is to group dataset objects (on the left) into several categories (on the right) based on their similarity.</p><p>&nbsp;is another unsupervised problem, where the goal is to compress an input dataset. When the dimensionality of the dataset is large, it takes more time and resources for machine learning algorithms to analyze it. By identifying and removing noisy dataset features or those that do not provide much valuable information, the data analysis process becomes considerably easier.</p><p>&nbsp;is an area that focuses on designing algorithms and data structures (indexes) to optimize searches in a large database of embeddings (vector database). More precisely, given an input embedding and a vector database, the goal is to&nbsp;&nbsp;find the most similar embedding in the database relative to the input embedding.</p><p>The goal of similarity search is to approximately find the most similar embedding in a vector database relative to a query embedding.</p><p>The word “approximately” means that the search is not guaranteed to be 100% precise. Nevertheless, this is the main idea behind similarity search algorithms — sacrificing a bit of accuracy in exchange for significant gains in prediction speed or data compression.</p><p>&nbsp;involves studying the behavior of a target variable over time. This problem can be solved using classical tabular algorithms. However, the presence of time introduces new factors that cannot be captured by standard algorithms. For instance:</p><ul><li>the target variable can have an overall&nbsp;, where in the long term its values increase or decrease&nbsp;<em>(e.g., the average yearly temperature rising due to global warming)</em>.</li><li>the target variable can have a&nbsp;&nbsp;which makes its values change based on the currently given period&nbsp;<em>(e.g. temperature is lower in winter and higher in summer)</em>.</li></ul><p>Most of the time series models take both of these factors into account. In general, time series models are mainly used a lot in financial, stock or demographic analysis.</p><p>Another advanced area I would recommend exploring is&nbsp;, which fundamentally changes the algorithm design compared to classical machine learning.&nbsp;In simple terms, its goal is to train an agent in an environment to make optimal decisions based on a reward system (also known as the&nbsp;<em>“trial and error approach”</em>).&nbsp;By taking an action, the agent receives a reward, which helps it understand whether the chosen action had a positive or negative effect.&nbsp;After that, the agent slightly adjusts its strategy, and the entire cycle repeats.</p><p>Reinforcement learning is particularly popular in complex environments where classical algorithms are not capable of solving a problem.&nbsp;Given the complexity of reinforcement learning algorithms and the computational resources they require, this area is not yet fully mature, but it has high potential to gain even more popularity in the future.</p><p>Currently the most popular applications are:</p><ul><li>.&nbsp;Existing approaches can design optimal game strategies and outperform humans.&nbsp;The most well-known examples are chess and Go.</li><li>.&nbsp;Advanced algorithms can be incorporated into robots to help them move, carry objects or complete routine tasks at home.</li><li>.&nbsp;Reinforcement learning methods can be developed to automatically drive cars, control helicopters or drones.</li></ul><p>This article was a logical continuation of the previous part and expanded the skill set needed to become a data scientist. While most of the mentioned topics require time to master, they can add significant value to your portfolio. This is especially true for the NLP and CV domains, which are in high demand today.</p><blockquote><p>After reaching a high level of expertise in data science, it is still crucial to stay motivated and consistently push yourself to learn new topics and explore emerging algorithms.</p></blockquote><p>Data science is a constantly evolving field, and in the coming years, we might witness the development of new state-of-the-art approaches that we could not have imagined in the past.</p><p><em>All images are by the author unless noted otherwise.</em></p>","contentLength":17044,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Publish Interactive Data Visualizations for Free with Python and Marimo","url":"https://towardsdatascience.com/publish-interactive-data-visualizations-for-free-with-python-and-marimo/","date":1739548800,"author":"Sam Minot","guid":8,"unread":true,"content":"<p>Working in <a href=\"https://towardsdatascience.com/tag/data-science/\" title=\"Data Science\">Data Science</a>, it can be hard to share insights from complex datasets using only static figures. All the facets that describe the shape and meaning of interesting data are not always captured in a handful of pre-generated figures. While we have powerful technologies available for presenting interactive figures — where a viewer can rotate, filter, zoom, and generally explore complex data  —  they always come with tradeoffs.</p><p>Here I present my experience using a recently released Python library — <a href=\"https://marimo.io\">marimo</a> — which opens up exciting new opportunities for publishing interactive visualizations across the entire field of data science.</p><h2>Interactive Data Visualization</h2><p>The tradeoffs to consider when selecting an approach for presenting data visualizations can be broken into three categories:</p><ul><li> — what visualizations and interactivity am I able to present to the user?</li><li> — what are the resources needed for displaying this visualization to users (e.g. running servers, hosting websites)?</li><li> – how much of a new skillset / codebase do I need to learn upfront?</li></ul><p> is the foundation of portable interactivity. Every user has a web browser installed on their computer and there are many different frameworks available for displaying any degree of interactivity or visualization you might imagine (for example, this <a href=\"https://threejs.org/\">gallery of amazing things people have made with three.js</a>). Since the application is running on the user’s computer, no costly servers are needed. However, a significant drawback for the data science community is ease of use, as JS does not have many of the high-level (i.e. easy-to-use) libraries that data scientists use for data manipulation, plotting, and interactivity.</p><p> provides a useful point of comparison. Because of its <a href=\"https://flatironschool.com/blog/python-popularity-the-rise-of-a-global-programming-language/\">continually growing popularity</a>, some have called this the <a href=\"https://towardsdatascience.com/we-are-living-in-the-era-of-python-bc032d595f6a\">“Era of Python”</a>. For data scientists in particular, Python stands alongside R as one of the foundational languages for quickly and effectively wielding complex data. While Python may be easier to use than Javascript, there are fewer options for presenting interactive visualizations. Some popular projects providing interactivity and visualization have been <a href=\"https://flask.palletsprojects.com/en/stable/\">Flask</a>, <a href=\"https://dash.plotly.com/\">Dash</a>, and <a href=\"https://streamlit.io/\">Streamlit</a> (also worth mentioning — <a href=\"https://docs.bokeh.org/en/latest/docs/gallery.html\">bokeh</a>, <a href=\"https://holoviews.org/\">HoloViews</a>, <a href=\"https://altair-viz.github.io/altair-tutorial/README.html\">altair</a>, and <a href=\"https://plotly.com/python/\">plotly</a>). The biggest tradeoff for using Python has been the cost for publishing – delivering the tool to users. In the same way that <a href=\"https://www.shinyapps.io/\">shinyapps</a> require a running computer to serve up the visualization, these Python-based frameworks have exclusively been server-based. This is by no means prohibitive for authors with a budget to spend, but it does limit the number of users who can take advantage of a particular project.</p><p><a href=\"https://pyodide.org/en/stable/\"></a> is an intriguing middle ground — Python code running directly in the web browser using <a href=\"https://webassembly.org/\">WebAssembly</a> (WASM). There are resource limitations (only 1 thread and 2GB memory) that make this impractical for doing the heavy lifting of data science. , this can be more than sufficient for building visualizations and updating based on user input. Because it runs in the browser, no servers are required for hosting. Tools that use Pyodide as a foundation are interesting to explore because they give data scientists an opportunity to write Python code which runs directly on users’ computers without their having to install or run anything outside of the web browser.</p><p>As an aside, <a href=\"https://towardsdatascience.com/python-based-data-viz-with-no-installation-required-aaf2358c881\">I’ve been interested previously in</a> one project that has tried this approach: <a href=\"https://github.com/whitphx/stlite\">stlite</a>, <a href=\"https://edit.share.stlite.net/\">an in-browser implementation of Streamlit</a> that lets you deploy these flexible and powerful apps to a broad range of users. However, a core limitation is that Streamlit itself is distinct from stlite (the port of Streamlit to WASM), which means that not all features are supported and that advancement of the project is dependent on two separate groups working along compatible lines.</p><ul><li>The interface resembles a Jupyter , which will be familiar to users.</li><li>Execution of cells is , so that updating one cell will rerun all cells which depend on its output.</li><li> can be captured with a flexible set of UI components.</li><li>Notebooks can be quickly converted into , hiding the code and showing only the input/output elements.</li><li>Apps can be run locally or converted into using WASM/Pyodide.</li></ul><p>marimo balances the tradeoffs of technology in a way that is well suited to the skill set of the typical data scientists:</p><ul><li> — user input and visual display features are rather extensive, <a href=\"https://docs.marimo.io/guides/working_with_data/plotting/#reactive-plots\">supporting user input</a> via Altair and Plotly plots.</li><li> — deploying as static webpages is basically free — no servers required</li><li> — for users familiar with Python notebooks, marimo will feel very familiar and be easy to pick up.</li></ul><h2>Publishing Marimo Apps on the Web</h2><p>As a simple example of the type of display that can be useful in data science, consisting of explanatory text interspersed with interactive displays, I have created a barebones <a href=\"https://github.com/FredHutch/marimo-publication\">GitHub repository</a>. Try it out yourself <a href=\"https://fredhutch.github.io/marimo-publication/\">here</a>.</p><p>Using just a little bit of code, users can:</p><ul><li>Generate visualizations with flexible interactivity</li><li>Write narrative text describing their findings</li><li>Publish to the web for free (i.e. using GitHub Pages)</li></ul><h2>Public App / Private Data</h2><p>This new technology offers an exciting new opportunity for collaboration — publish the app publicly to the world, but users can only see specific datasets that they have permission to access.</p><p>Rather than building a dedicated data backend for every app, user data can be stored in a generic backend which can be securely authenticated and accessed using a Python client library — all contained within the user’s web browser. For example, the user is given an OAuth login link that will authenticate them with the backend and allow the app to temporarily access input data.</p><p>As a proof of concept, I built a simple visualization app which connects to <a href=\"https://cirro.bio\">the Cirro data platform</a>, which is used at my institution to manage scientific data. Full disclosure: I was part of the team that built this platform before it spun out as an independent company. In this manner users can:</p><ul><li>Load the public visualization app — hosted on GitHub Pages</li><li>Connect securely to their private data store</li><li>Load the appropriate dataset for display</li><li>Share a link which will direct authorized collaborators to the same data</li></ul><p>As a data scientist, this approach of publishing free and open-source visualization apps which can be used to interact with private datasets is extremely exciting. Building and publishing a new app can take hours and days instead of weeks and years, letting researchers quickly share their insights with collaborators and then publish them to the wider world.</p>","contentLength":6594,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"5 Tips for Building a Data Science Portfolio","url":"https://www.kdnuggets.com/5-tips-building-data-science-portfolio","date":1739545225,"author":"Nate Rosidi","guid":252,"unread":true,"content":"<article>Not every data science portfolio is worth showcasing. Follow these five tips to build a portfolio that impresses employers and gets you a job.</article>","contentLength":142,"flags":null,"enclosureUrl":"https://www.kdnuggets.com/wp-content/uploads/Rosidi_5_Tips_for_Building_a_DS_Portfolio_4.png","enclosureMime":"","commentsUrl":null},{"title":"Evolving Workflow Orchestration // Alex Milowski // #291","url":"https://podcasters.spotify.com/pod/show/mlops/episodes/Evolving-Workflow-Orchestration--Alex-Milowski--291-e2us8at","date":1739543943,"author":"Demetrios","guid":261,"unread":true,"content":"<p><a href=\"https://www.linkedin.com/in/alexmilowski/\" target=\"_blank\" rel=\"noopener noreferer\"></a>&nbsp;is a researcher, developer,&nbsp;, mathematician, and&nbsp;.Evolving Workflow Orchestration // MLOps Podcast #291 with Alex Milowski, Entrepreneur and Computer Scientist.// AbstractThere seems to be a shift from workflow languages to code - mostly annotation pythons - happening and getting us. It is a symptom of how complex workflow orchestration has gotten. Is it a dominant trend or will we cycle back to “DAG specifications”? At Stitchfix, we had our own DSL that “compiled” into airflow DAGs and at MicroByre, we used a external workflow langauge. Both had a batch task executor on K8s but at MicroByre, we had human and robot in the loop workflows.// BioDr. Milowski is a serial entrepreneur and computer scientist with experience in a variety of data and machine learning technologies. He holds a PhD in Informatics (Computer Science) from the University of Edinburgh, where he researched large-scale computation over scientific data. Over the years, he's spent many years working on various aspects of workflow orchestration in industry, standardization, and in research.// MLOps Swag/Merch<a href=\"https://shop.mlops.community/\" target=\"_blank\" rel=\"noopener noreferer\">https://shop.mlops.community/</a>// Related Links<a href=\"website: https://www.milowski.com/\" target=\"_blank\" rel=\"noopener noreferer\">Website: https://www.milowski.com/</a> --------------- ✌️Connect With Us ✌️ -------------Join our slack community: <a href=\"https://go.mlops.community/slack\" target=\"_blank\" rel=\"noopener noreferer\">https://go.mlops.community/slack</a>Follow us on Twitter: <a href=\"https://podcasters.spotify.com/pod/show/mlops/episodes/@mlopscommunity\" target=\"_blank\" rel=\"noopener noreferer\">@mlopscommunity</a>Sign up for the next meetup: <a href=\"https://go.mlops.community/register\" target=\"_blank\" rel=\"noopener noreferer\">https://go.mlops.community/register</a>Catch all episodes, blogs, newsletters, and more: <a href=\"https://mlops.community/\" target=\"_blank\" rel=\"noopener noreferer\">https://mlops.community/</a>Connect with Demetrios on LinkedIn: <a href=\"https://www.linkedin.com/in/dpbrinkm/\" target=\"_blank\" rel=\"noopener noreferer\">https://www.linkedin.com/in/dpbrinkm/</a>Connect with Alex on LinkedIn: <a href=\"https://www.linkedin.com/in/alexmilowski/\" target=\"_blank\" rel=\"noopener noreferer\">https://www.linkedin.com/in/alexmilowski/</a></p>","contentLength":1617,"flags":null,"enclosureUrl":"https://anchor.fm/s/174cb1b8/podcast/play/98492189/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2025-1-14%2F394870366-44100-2-f81b1b5d49c1e.mp3","enclosureMime":"","commentsUrl":null},{"title":"Building a Data Engineering Center of Excellence","url":"https://towardsdatascience.com/building-a-data-engineering-center-of-excellence/","date":1739500548,"author":"Richie Bachala","guid":7,"unread":true,"content":"<p>As data continues to grow in importance and become more complex, the need for skilled data engineers has never been greater. But what is data engineering, and why is it so important? In this blog post, we will discuss the essential components of a functioning data engineering practice and why data engineering is becoming increasingly critical for businesses today, and how you can build your very own Data Engineering Center of Excellence!</p><p>I’ve had the privilege to build, manage, lead, and foster a sizeable high-performing team of data warehouse &amp; ELT engineers for many years. With the help of my team, I have spent a considerable amount of time every year consciously planning and preparing to manage the growth of our data month-over-month and address the changing reporting and analytics needs for our&nbsp;<em>20000+ global data consumers</em>. We built many data warehouses to store and centralize massive amounts of data generated from many OLTP sources. We’ve implemented Kimball methodology by creating star schemas both within our on-premise data warehouses and in the ones in the cloud.</p><p>The objective is to enable our user-base to perform fast analytics and reporting on the data; so our analysts’ community and business users can make accurate data-driven decisions.</p><p>It took me about three years to transform&nbsp;&nbsp;() of data warehouse and ETL programmers into one cohesive Data Engineering team.</p><p><em>I have compiled some of my learnings building a global data engineering team in this post in hopes that Data professionals and leaders of all levels of technical proficiency can benefit.</em></p><h2>Evolution of the Data Engineer</h2><p>It has never been a better time to be a data engineer. Over the last decade, we have seen a massive awakening of enterprises now recognizing their data as the company’s heartbeat, making data engineering the job function that ensures accurate, current, and quality data flow to the solutions that depend on it.</p><p>Historically, the role of Data Engineers has evolved from that of&nbsp;<strong><em>data warehouse developers&nbsp;</em></strong>and the&nbsp;&nbsp;(extract, transform and load).</p><p>The data warehouse developers are responsible for designing, building, developing, administering, and maintaining data warehouses to meet an enterprise’s reporting needs. This is done primarily via extracting data from operational and transactional systems and piping it using extract transform load methodology (ETL/ ELT) to a storage layer like a data warehouse or a data lake. The data warehouse or the data lake is where data analysts, data scientists, and business users consume data. The developers also perform transformations to conform the ingested data to a data model with aggregated data for easy analysis.</p><blockquote><p>A data engineer’s prime responsibility is to produce and make data securely available for multiple consumers.</p></blockquote><p>Data engineers oversee the ingestion, transformation, modeling, delivery, and movement of data through every part of an organization. Data extraction happens from many different data sources &amp; applications. Data Engineers load the data into data warehouses and data lakes, which are transformed not just for the <a href=\"https://towardsdatascience.com/tag/data-science/\" title=\"Data Science\">Data Science</a> &amp; predictive analytics initiatives (as everyone likes to talk about) but primarily for data analysts. Data analysts &amp; data scientists perform operational reporting, exploratory analytics, service-level agreement (SLA) based business intelligence reports and dashboards on the catered data. In this book, we will address all of these job functions.</p><p>The role of a data engineer is to acquire, store, and aggregate data from both cloud and on-premise, new, and existing systems, with data modeling and feasible data architecture. Without the data engineers, analysts and data scientists won’t have valuable data to work with, and hence, data engineers are the first to be hired at the inception of every new data team. Based on the data and analytics tools available within an enterprise, data engineering teams’ role profiles, constructs, and approaches have several options for what should be included in their responsibilities which we will discuss in this chapter.</p><p>Software is increasingly automating the historically manual and tedious tasks of data engineers. Data processing tools and technologies have evolved massively over several years and will continue to grow. For example, cloud-based data warehouses (Snowflake, for instance) have made data storage and processing affordable and fast. Data pipeline services (like&nbsp;<a href=\"https://www.informatica.com/blogs/welcome-to-informatica-intelligent-cloud-services.html\" rel=\"noreferrer noopener\" target=\"_blank\">Informatica IICS</a>,&nbsp;<a href=\"https://airflow.apache.org/\" rel=\"noreferrer noopener\" target=\"_blank\">Apache Airflow</a>,&nbsp;<a href=\"https://www.matillion.com/\" rel=\"noreferrer noopener\" target=\"_blank\">Matillion</a>,&nbsp;<a href=\"http://fivetran.com/\" rel=\"noreferrer noopener\" target=\"_blank\">Fivetran</a>) have turned data extraction into work that can be completed quickly and efficiently. The data engineering team should be leveraging such technologies as force multipliers, taking a consistent and cohesive approach to integration and management of enterprise data, not just relying on legacy siloed approaches to building custom data pipelines with fragile, non-performant, hard to maintain code. Continuing with the latter approach will stifle the pace of innovation within the said enterprise and force the future focus to be around managing data infrastructure issues rather than how to help generate value for your business.</p><p>The primary role of an enterprise Data Engineering team should be to&nbsp;&nbsp;into a shape that’s ready for analysis — laying the foundation for real-world analytics and data science application.</p><p>The Data Engineering team should serve as the&nbsp;&nbsp;for enterprise-level data with the responsibility to curate the organization’s data and act as a resource for those who want to make use of it, such as Reporting &amp; Analytics teams, Data Science teams, and other groups that are doing more self-service or business group driven analytics leveraging the enterprise data platform. This team should serve as the&nbsp;&nbsp;of organizational knowledge, managing and refining the catalog so that analysis can be done more effectively. Let’s look at the essential responsibilities of a well-functioning Data Engineering team.</p><h2>Responsibilities of a Data Engineering Team</h2><p>The Data Engineering team should provide a&nbsp;&nbsp;within the enterprise that cuts across to support both the Reporting/Analytics and Data Science capabilities to provide access to clean, transformed, formatted, scalable, and secure data ready for analysis. The Data Engineering teams’ core responsibilities should include:</p><blockquote><p>· Build, manage, and optimize the core data platform infrastructure</p><p>· Build and maintain custom and off-the-shelf data integrations and ingestion pipelines from a variety of structured and unstructured sources</p><p>· Manage overall data pipeline orchestration</p><p>· Manage transformation of data either before or after load of raw data through both technical processes and business logic</p><p>· Support analytics teams with design and performance optimizations of data warehouses</p></blockquote><p><strong><em>Data is an Enterprise Asset.</em></strong></p><p><strong><em>Data as an Asset should be shared and protected.</em></strong></p><p>Data should be valued as an Enterprise asset, leveraged across all Business Units to enhance the company’s value to its respective customer base by accelerating decision making, and improving competitive advantage with the help of data. Good data stewardship, legal and regulatory requirements dictate that we protect the data owned from unauthorized access and disclosure.</p><p>In other words,&nbsp;<strong><em>managing Security is a crucial responsibility.</em></strong></p><h2>Why Create a Centralized Data Engineering Team?</h2><p>Treating Data Engineering as a standard and core capability that underpins both the Analytics and Data Science capabilities will help an enterprise evolve how to approach Data and Analytics. The enterprise needs to stop vertically treating data based on the technology stack involved as we tend to see often and move to more of a horizontal approach of managing a&nbsp;&nbsp;or&nbsp;&nbsp;that cuts across the organization and can connect to various technologies as needed drive analytic initiatives. This is a new way of thinking and working, but it can drive efficiency as the various data organizations look to scale. Additionally — there is value in creating a dedicated structure and career path for Data Engineering resources. Data engineering skill sets are in high demand in the market; therefore, hiring outside the company can be costly. Companies must enable programmers, database administrators, and software developers with a career path to gain the needed experience with the above-defined skillsets by working across technologies. Usually, forming a data engineering center of excellence or a capability center would be the first step for making such progression possible.</p><h2>Challenges for creating a centralized Data Engineering Team</h2><p>The centralization of the Data Engineering team as a service approach is different from how Reporting &amp; Analytics and Data Science teams operate. It does, in principle, mean&nbsp;<strong><em>giving up some level of control of resources</em></strong>&nbsp;and establishing new processes for how these teams will collaborate and work together to deliver initiatives.</p><p>The Data Engineering team will need to demonstrate that it can effectively support the needs of both Reporting &amp; Analytics and Data Science teams, no matter how large these teams are. Data Engineering teams must&nbsp;<strong><em>effectively prioritize workloads&nbsp;</em></strong>while ensuring they can bring the right skillsets and experience to assigned projects.</p><p>Data engineering is essential because it serves as the backbone of data-driven companies. It enables analysts to work with clean and well-organized data, necessary for deriving insights and making sound decisions. To build a functioning data engineering practice, you need the following critical components:</p><p>The Data Engineering team should be a core capability within the enterprise, but it should effectively serve as a support function involved in almost everything data-related. It should interact with the Reporting and Analytics and Data Science teams in a collaborative support role to make the entire team successful.</p><p>The&nbsp;<em>Data Engineering team doesn’t create direct business value</em>&nbsp;— but the value should come in making the Reporting and Analytics, and Data Science teams more productive and efficient to ensure delivery of maximum value to business stakeholders through Data &amp; Analytics initiatives. To make that possible, the six key responsibilities within the data engineering capability center would be as follow –</p><p>Let’s review the&nbsp;<strong><em>6 pillars of responsibilities</em></strong>:</p><p><strong>1. Determine Central Data Location for Collation and Wrangling</strong></p><p>Understanding and having a strategy for a&nbsp;(<em>a centralized data repository or data warehouse for the mass consumption of data for analysis</em>). Defining requisite data tables and where they will be joined in the context of data engineering and subsequently converting raw data into digestible and valuable formats.</p><p><strong>2. Data Ingestion and Transformation</strong></p><p>Moving data from one or more sources to a new destination (<em>your data lake or cloud data warehouse)&nbsp;</em>where it can be stored and further analyzed and then converting data from the format of the source system to that of the destination</p><p>Extracting, transforming, and loading data from one or more sources into a destination system to represent the data in a new context or style.</p><p>Data modeling is an essential function of a data engineering team, granted not all data engineers excel with this capability. Formalizing relationships between data objects and business rules into a conceptual representation through understanding information system workflows, modeling required queries, designing tables, determining primary keys, and effectively utilizing data to create informed output.</p><p>I’ve seen engineers in interviews mess up more with this than coding in technical discussions. It’s essential to understand the differences between Dimensions, Facts, Aggregate tables.</p><p>Ensuring that sensitive data is protected and implementing proper authentication and authorization to reduce the risk of a data breach</p><p><strong>6. Architecture and Administration</strong></p><p>Defining the models, policies, and standards that administer what data is collected, where and how it is stored, and how it such data is integrated into various analytical systems.</p><blockquote><p>The six pillars of responsibilities for data engineering capabilities center on the ability to determine a central data location for collation and wrangling, ingest and transform data, execute ETL/ELT operations, model data, secure access and administer an architecture. While all companies have their own specific needs with regards to these functions, it is important to ensure that your team has the necessary skillset in order to build a foundation for big data success.</p></blockquote><p>Besides the Data Engineering following are the other capability centers that need to be considered within an enterprise:</p><h2>Analytics Capability Center</h2><p>The analytics capability center enables consistent, effective, and efficient BI, analytics, and advanced analytics capabilities across the company. Assist business functions in triaging, prioritizing, and achieving their objectives and goals through reporting, analytics, and dashboard solutions, while providing operational reports and visualizations, self-service analytics, and required tools to automate the generation of such insights.</p><h2>Data Science Capability Center</h2><p>The data science capability center is for exploring cutting-edge technologies and concepts to unlock new insights and opportunities, better inform employees and create a culture of prescriptive information usage using Automated AI and Automated ML solutions such as&nbsp;<a href=\"https://medium.com/u/9aea625dfc27?source=post_page---user_mention--b83d51cedb6a---------------------------------------\" rel=\"noreferrer noopener\" target=\"_blank\">H2O.ai</a>,&nbsp;<a href=\"https://medium.com/u/27e43843bc9f?source=post_page---user_mention--b83d51cedb6a---------------------------------------\" rel=\"noreferrer noopener\" target=\"_blank\">Dataiku</a>,&nbsp;<a href=\"http://www.aible.com/\" rel=\"noreferrer noopener\" target=\"_blank\">Aible</a>, DataRobot,&nbsp;<a href=\"https://medium.com/u/3aaaf223f1e?source=post_page---user_mention--b83d51cedb6a---------------------------------------\" rel=\"noreferrer noopener\" target=\"_blank\">C3.ai</a></p><p>The data governance office empowers users with trusted, understood, and timely data to drive effectiveness while keeping the integrity and sanctity of data in the right hands for mass consumption.</p><blockquote><p><em>As your company grows, you will want to make sure that the data engineering capabilities are in place to support the six pillars of responsibilities. By doing this, you will be able to ensure that all aspects of data management and analysis are covered and that your data is safe and accessible by those who need it. Have you started thinking about how your company will grow? What steps have you taken to put a centralized data engineering team in place?</em></p></blockquote>","contentLength":14079,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Learnings from a Machine Learning Engineer — Part 5: The Training","url":"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-5-the-training/","date":1739480672,"author":"David Martin","guid":6,"unread":true,"content":"<p>In this fifth part of my series, I will outline the steps for creating a Docker container for training your image classification model, evaluating performance, and preparing for deployment.</p><p>AI/ML engineers would prefer to focus on model training and data engineering, but the reality is that we also need to understand the infrastructure and mechanics behind the scenes.</p><p>I hope to share some tips, not only to get your training run running, but how to streamline the process in a cost efficient manner on cloud resources such as Kubernetes.</p><p>I will reference elements from my previous articles for getting the best model performance, so be sure to check out&nbsp;<a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-1-the-data/\">Part 1</a>&nbsp;and&nbsp;<a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-2-the-data-sets/\">Part 2</a>&nbsp;on the data sets, as well as&nbsp;<a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-3-the-evaluation/\">Part 3</a>&nbsp;and&nbsp;<a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-4-the-model/\">Part 4</a>&nbsp;on model evaluation.</p><p>Here are the learnings that I will share with you, once we lay the groundwork on the infrastructure:</p><ul><li>Building your Docker container</li><li>Executing your training run</li></ul><p>First, let me provide a brief description of the setup that I created, specifically around Kubernetes. Your setup may be entirely different, and that is just fine. I simply want to set the stage on the infrastructure so that the rest of the discussion makes sense.</p><p>This is a server you deploy that provides a user interface to for your subject matter experts to label and evaluate images for the image classification application. The server can run as a pod on your Kubernetes cluster, but you may find that running a dedicated server with faster disk may be better.</p><p>Image files are stored in a directory structure like the following, which is self-documenting and easily modified.</p><pre><code>Image_Library/\n  - cats/\n    - image1001.png\n  - dogs/\n    - image2001.png</code></pre><p>Ideally, these files would reside on local server storage (instead of cloud or cluster storage) for better performance. The reason for this will become clear as we see what happens as the image library grows.</p><p><a href=\"https://towardsdatascience.com/tag/cloud-storage/\" title=\"Cloud Storage\">Cloud Storage</a> allows for a virtually limitless and convenient way to share files between systems. In this case, the image library on your management system could access the same files as your Kubernetes cluster or Docker engine.</p><p>However, the downside of cloud storage is the latency to open a file. Your image library will have&nbsp;&nbsp;of images, and the latency to read each file will have a significant impact on your training run time. Longer training runs means more cost for using the expensive GPU processors!</p><p>The way that I found to speed things up is to create a&nbsp;&nbsp;file of your image library on your management system and copy them to cloud storage. Even better would be to create multiple tar files&nbsp;, each containing 10,000 to 20,000 images.</p><p>This way you only have network latency on a handful of files (which contain thousands, once extracted) and you start your training run much sooner.</p><h3>Kubernetes or Docker engine</h3><p>A Kubernetes cluster, with proper configuration, will allow you to dynamically scale up/down nodes, so you can perform your model training on GPU hardware as needed. Kubernetes is a rather heavy setup, and there are other container engines that will work.</p><blockquote><p>The technology options change constantly!</p></blockquote><p>The main idea is that you want to spin up the resources you need — for only as long as you need them — then scale down to reduce your time (and therefore cost) of running expensive GPU resources.</p><p>Once your GPU node is started and your <a href=\"https://towardsdatascience.com/tag/docker/\" title=\"Docker\">Docker</a> container is running, you can extract the&nbsp;&nbsp;files above to&nbsp;&nbsp;storage, such as an&nbsp;, on your node. The node typically has high-speed SSD disk, ideal for this type of workload. There is one caveat — the storage capacity on your node must be able to handle your image library.</p><p>Assuming we are good, let’s talk about building your Docker container so that you can train your model on your image library.</p><h2>Building your Docker container</h2><p>Being able to execute a training run in a consistent manner lends itself perfectly to building a Docker container. You can “pin” the version of libraries so you know exactly how your scripts will run every time. You can version control your containers as well, and revert to a known good image in a pinch. What is really nice about Docker is you can run the container pretty much anywhere.</p><p>The tradeoff when running in a container, especially with an <a href=\"https://towardsdatascience.com/tag/image-classification/\" title=\"Image Classification\">Image Classification</a> model, is the speed of file storage. You can attach any number of volumes to your container, but they are usually&nbsp;&nbsp;attached, so there is latency on each file read. This may not be a problem if you have a small number of files. But when dealing with hundreds of thousands of files like image data, that latency adds up!</p><p>This is why using the&nbsp;&nbsp;file method outlined above can be beneficial.</p><p>Also, keep in mind that Docker containers could be terminated unexpectedly, so you should make sure to store important information outside the container, on cloud storage or a database. I’ll show you how below.</p><p>Knowing that you will need to run on GPU hardware (here I will assume Nvidia), be sure to select the right base image for your Dockerfile, such as&nbsp;&nbsp;with the “devel&nbsp;flavor that will contain the right drivers.</p><p>Next, you will add the script files to your container, along with a “batch” script to coordinate the execution. Here is an example Dockerfile, and then I’ll describe what each of the scripts will be doing.</p><pre><code>#####   Dockerfile   #####\nFROM nvidia/cuda:12.8.0-devel-ubuntu24.04\n\n# Install system software\nRUN apt-get -y update &amp;&amp; apg-get -y upgrade\nRUN apt-get install -y python3-pip python3-dev\n\n# Setup python\nWORKDIR /app\nCOPY requirements.txt\nRUN python3 -m pip install --upgrade pip\nRUN python3 -m pip install -r requirements.txt\n\n# Pythong and batch scripts\nCOPY ExtractImageLibrary.py .\nCOPY Training.py .\nCOPY Evaluation.py .\nCOPY ScorePerformance.py .\nCOPY ExportModel.py .\nCOPY BulkIdentification.py .\nCOPY BatchControl.sh .\n\n# Allow for interactive shell\nCMD tail -f /dev/null</code></pre><p>Dockerfiles are declarative, almost like a cookbook for building a small server — you know what you’ll get every time. Python libraries benefit, too, from this declarative approach. Here is a sample&nbsp;&nbsp;file that loads the TensorFlow libraries with CUDA support for GPU acceleration.</p><pre><code>#####   requirements.txt   #####\nnumpy==1.26.3\npandas==2.1.4\nscipy==1.11.4\nkeras==2.15.0\ntensorflow[and-cuda]</code></pre><h3>Extract Image Library script</h3><p>In <a href=\"https://towardsdatascience.com/tag/kubernetes/\" title=\"Kubernetes\">Kubernetes</a>, the Docker container can access local, high speed storage on the physical node. This can be achieved via the&nbsp;&nbsp;volume type. As mentioned before, this will only work if the local storage on your node can handle the size of your library.</p><pre><code>#####   sample 25GB emptyDir volume in Kubernetes   #####\ncontainers:\n  - name: training-container\n    volumeMounts:\n      - name: image-library\n        mountPath: /mnt/image-library\nvolumes:\n  - name: image-library\n    emptyDir:\n      sizeLimit: 25Gi</code></pre><p>You would want to have another&nbsp;&nbsp;to your cloud storage where you have the&nbsp;&nbsp;files. What this looks like will depend on your provider, or if you are using a persistent volume claim, so I won’t go into detail here.</p><p>Now you can extract the&nbsp;&nbsp;files — ideally in parallel for an added performance boost — to the local mount point.</p><p>As AI/ML engineers, the model training is where we want to spend most of our time.</p><blockquote><p>This is where the magic happens!</p></blockquote><p>With your image library now extracted, we can create our train-validation-test sets, load a pre-trained model or build a new one, fit the model, and save the results.</p><p>One key technique that has served me well is to load the most recently trained model as my base. I discuss this in more detail in&nbsp;<a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-4-the-model/\">Part 4</a>&nbsp;under “Fine tuning”, this results in faster training time and significantly improved model performance.</p><p>Be sure to take advantage of the local storage to checkpoint your model during training since the models are quite large and you are paying for the GPU even while it sits idle writing to disk.</p><p>This of course raises a concern about what happens if the Docker container dies part-way though the training. The risk is (hopefully) low from a cloud provider, and you may not want an incomplete training anyway. But if that does happen, you will at least want to understand&nbsp;, and this is where saving the main log file to cloud storage (described below) or to a package like MLflow comes in handy.</p><p>After your training run has completed and you have taken proper precaution on saving your work, it is time to see how well it performed.</p><p>Normally this evaluation script will pick up on the model that just finished. But you may decide to point it at a previous model version through an interactive session. This is why have the script as stand-alone.</p><p>With it being a separate script, that means it will need to read the completed model from disk — ideally local disk for speed. I like having two separate scripts (training and evaluation), but you might find it better to combine these to avoid reloading the model.</p><p>Now that the model is loaded, the evaluation script should generate predictions on&nbsp;&nbsp;image in the training, validation, test, and benchmark sets. I save the results as a&nbsp;&nbsp;matrix with the softmax confidence score for each class label. So, if there are 1,000 classes and 100,000 images, that’s a table with 100 million scores!</p><p>I save these results in&nbsp;&nbsp;files that are then used in the score generation next.</p><p>Taking the matrix of scores produced by the evaluation script above, we can now create various metrics of model performance. Again, this process could be combined with the evaluation script above, but my preference is for independent scripts. For example, I might want to regenerate scores on previous training runs. See what works for you.</p><p>Here are some of the&nbsp;&nbsp;functions that produce useful insights like F1, log loss, AUC-ROC, Matthews correlation coefficient.</p><pre><code>from sklearn.metrics import average_precision_score, classification_report\nfrom sklearn.metrics import log_loss, matthews_corrcoef, roc_auc_score</code></pre><p>Aside from these basic statistical analyses for each dataset (train, validation, test, and benchmark), it is also useful to identify:</p><ul><li>Which&nbsp;&nbsp;labels get the most number of errors?</li><li>Which&nbsp;&nbsp;labels get the most number of incorrect guesses?</li><li>How many&nbsp;<strong>ground-truth-to-predicted</strong>&nbsp;label pairs are there? In other words, which classes are easily confused?</li><li>What is the&nbsp;&nbsp;when applying a minimum softmax confidence score threshold?</li><li>What is the&nbsp;&nbsp;above that softmax threshold?</li><li>For the “difficult” benchmark sets, do you get a sufficiently&nbsp;&nbsp;score?</li><li>For the “out-of-scope” benchmark sets, do you get a sufficiently&nbsp;&nbsp;score?</li></ul><p>As you can see, there are multiple calculations and it’s not easy to come up with a single evaluation to decide if the trained model is good enough to be moved to production.</p><p>In fact, for an image classification model, it is helpful to manually review the images that the model got wrong, as well as the ones that got a low softmax confidence score. Use the scores from this script to create a list of images to manually review, and then get a&nbsp;&nbsp;for how well the model performs.</p><p>Check out&nbsp;<a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-3-the-evaluation/\">Part 3</a>&nbsp;for more in-depth discussion on evaluation and scoring.</p><p>All of the heavy lifting is done by this point. Since your Docker container will be shutdown soon, now is the time to copy the model artifacts to cloud storage and prepare them for being put to use.</p><p>The example Python code snippet below is more geared to Keras and TensorFlow. This will take the trained model and export it as a&nbsp;. Later, I will show how this is used by TensorFlow Serving in the&nbsp;&nbsp;section below.</p><pre><code># Increment current version of model and create new directory\nnext_version_dir, version_number = create_new_version_folder()\n\n# Copy model artifacts to the new directory\ncopy_model_artifacts(next_version_dir)\n\n# Create the directory to save the model export\nsaved_model_dir = os.path.join(next_version_dir, str(version_number))\n\n# Save the model export for use with TensorFlow Serving\ntf.keras.backend.set_learning_phase(0)\nmodel = tf.keras.models.load_model(keras_model_file)\ntf.saved_model.save(model, export_dir=saved_model_dir)</code></pre><p>This script also copies the other training run artifacts such as the model evaluation results, score summaries, and log files generated from model training. Don’t forget about your label map so you can give human readable names to your classes!</p><h3>Bulk identification script</h3><p>Your training run is complete, your model has been scored, and a new version is exported and ready to be served. Now is the time to use this latest model to assist you on trying to identify unlabeled images.</p><p>As I described in&nbsp;<a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-4-the-model/\">Part 4</a>, you may have a collection of “unknowns” — really good pictures, but no idea what they are. Let your new model provide a best guess on these and record the results to a file or a database. Now you can create filters based on closest match and by high/low scores. This allows your subject matter experts to leverage these filters to find new image classes, add to existing classes, or to remove images that have very low scores and are no good.</p><p>By the way, I put this step inside the GPU container since you may have thousands of “unknown” images to process and the accelerated hardware will make light work of it. However, if you are not in a hurry, you could perform this step on a separate CPU node, and shutdown your GPU node sooner to save cost. This would especially make sense if your “unknowns” folder is on slower cloud storage.</p><p>All of the scripts described above perform a specific task — from extracting your image library, executing model training, performing evaluation and scoring, exporting the model artifacts for deployment, and perhaps even bulk identification.</p><blockquote><p>One script to rule them all</p></blockquote><p>To coordinate the entire show, this batch script gives you the entry point for your container and an easy way to trigger everything. Be sure to produce a log file in case you need to analyze any failures along the way. Also, be sure to write the log to your cloud storage in case the container dies unexpectedly.</p><pre><code>#!/bin/bash\n# Main batch control script\n\n# Redirect standard output and standard error to a log file\nexec &gt; /cloud_storage/batch-logfile.txt 2&gt;&amp;1\n\n/app/ExtractImageLibrary.py\n/app/Training.py\n/app/Evaluation.py\n/app/ScorePerformance.py\n/app/ExportModel.py\n/app/BulkIdentification.py</code></pre><h2>Executing your training run</h2><p>So, now it’s time to put everything in motion…</p><p>Let’s go through the steps to prepare your image library, fire up your Docker container to train your model, and then examine the results.</p><h3>Image library ‘tar’ files</h3><p>Your image management system should now create a&nbsp;&nbsp;file backup of your data. Since&nbsp;&nbsp;is a single-threaded function, you will get significant speed improvement by creating multiple tar files in parallel, each with a portion of you data.</p><p>Now these files can be copied to your shared cloud storage for the next step.</p><p>All the hard work you put into creating your container (described above) will be put to the test. If you are running Kubernetes, you can create a Job that will execute the&nbsp;&nbsp;script.</p><p>Inside the Kubernetes Job definition, you can pass environment variables to adjust the execution of your script. For example, the batch size and number of epochs are set here and then pulled into your Python scripts, so you can alter the behavior without changing your code.</p><pre><code>#####   sample Job in Kubernetes   #####\ncontainers:\n  - name: training-job\n    env:\n      - name: BATCH_SIZE\n        value: 50\n      - name: NUM_EPOCHS\n        value: 30\n    command: [\"/app/BatchControl.sh\"]</code></pre><p>Once the Job is completed, be sure to verify that the GPU node properly scales back down to zero according to your scaling configuration in Kubernetes — you don’t want to be saddled with a huge bill over a simple configuration error.</p><p>With the training run complete, you should now have model artifacts saved and can examine the performance. Look through the metrics, such as F1 and log loss, and benchmark accuracy for high softmax confidence scores.</p><p>As mentioned earlier, the reports only tell part of the story. It is worth the time and effort to manually review the images that the model got wrong or where it produced a low confidence score.</p><p>Don’t forget about the bulk identification. Be sure to leverage these to locate new images to fill out your data set, or to find new classes.</p><p>Once you have reviewed your model performance and are satisfied with the results, it is time to modify your TensorFlow Serving container to put the new model into production.</p><p>TensorFlow Serving is available as a Docker container and provides a very quick and convenient way to serve your model. This container can listen and respond to API calls for your model.</p><p>Let’s say your new model is version 7, and your&nbsp;&nbsp;script (see above) has saved the model in your cloud share as&nbsp;<em>/image_application/models/007</em>. You can start the TensorFlow Serving container with that volume mount. In this example, the&nbsp;&nbsp;points to folder for version 007.</p><pre><code>#####   sample TensorFlow pod in Kubernetes   #####\ncontainers:\n  - name: tensorflow-serving\n    image: bitnami/tensorflow-serving:2.18.0\n    ports:\n      - containerPort: 8501\n    env:\n      - name: TENSORFLOW_SERVING_MODEL_NAME\n        value: \"image_application\"\n    volumeMounts:\n      - name: models-subfolder\n        mountPath: \"/bitnami/model-data\"\n\nvolumes:\n  - name: models-subfolder\n    azureFile:\n      shareName: \"image_application/models/007\"</code></pre><p>A subtle note here — the export script should create a sub-folder, named 007 (same as the base folder), with the saved model export. This may seem a little confusing, but TensorFlow Serving will mount this share folder as&nbsp;&nbsp;and detect the numbered sub-folder inside it for the version to serve. This will allow you to query the API for the model version as well as the identification.</p><p>As I mentioned at the start of this article, this setup has worked for my situation. This is certainly not the only way to approach this challenge, and I invite you to customize your own solution.</p><p>I wanted to share my hard-fought learnings as I embraced cloud services in Kubernetes, with the desire to keep costs under control. Of course, doing all this while maintaining a high level of model performance is an added challenge, but one that you can achieve.</p><p>I hope I have provided enough information here to help you with your own endeavors. Happy learnings!</p>","contentLength":18226,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Learnings from a Machine Learning Engineer — Part 3: The Evaluation","url":"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-3-the-evaluation/","date":1739480406,"author":"David Martin","guid":5,"unread":true,"content":"<p>In this third part of my series, I will explore the evaluation process which is a critical piece that will lead to a cleaner data set and elevate your model performance. We will see the difference between evaluation of a&nbsp;&nbsp;model (one not yet in production), and evaluation of a&nbsp;&nbsp;model (one making real-world predictions).</p><p>In&nbsp;<a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-1-the-data/\">Part 1</a>, I discussed the process of labelling your image data that you use in your <a href=\"https://towardsdatascience.com/tag/image-classification/\" title=\"Image Classification\">Image Classification</a> project. I showed how to define “good” images and create sub-classes. In&nbsp;<a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-2-the-data-sets/\">Part 2</a>, I went over various data sets, beyond the usual train-validation-test sets, such as benchmark sets, plus how to handle synthetic data and duplicate images.</p><h2><strong>Evaluation of the trained model</strong></h2><p>As machine learning engineers we look at accuracy, F1, log loss, and other metrics to decide if a model is ready to move to production. These are all important measures, but from my experience, these scores can be deceiving especially as the number of classes grows.</p><p>Although it can be time consuming, I find it very important to manually review the images that the model gets&nbsp;, as well as the images that the model gives a&nbsp;&nbsp;softmax “confidence” score to. This means adding a step immediately after your training run completes to calculate scores for&nbsp;&nbsp;images — training, validation, test, and the benchmark sets. You only need to bring up for manual review the ones that the model had problems with. This should only be a small percentage of the total number of images. See the Double-check process below</p><p>What you do during the manual evaluation is to put yourself in a “” to ensure that the labelling standards are being followed that you setup in <a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-1-the-data/\">Part 1</a>. Ask yourself:</p><ul><li>“Is this a good image?” Is the subject front and center, and can you clearly see all the features?</li><li>“Is this the correct label?” Don’t be surprised if you find wrong labels.</li></ul><p>You can either remove the bad images or fix the labels if they are wrong. Otherwise you can keep them in the data set and force the model to do better next time. Other questions I ask are:</p><ul><li>“Why did the model get this wrong?”</li><li>“Why did this image get a low score?”</li><li>“What is it about the image that caused confusion?”</li></ul><p>Sometimes the answer has nothing to do with&nbsp;&nbsp;specific image. Frequently, it has to do with the&nbsp;&nbsp;images, either in the ground truth class or in the predicted class. It is worth the effort to Double-check all images in both sets if you see a consistently bad guess. Again, don’t be surprised if you find poor images or wrong labels.</p><p>When doing the evaluation of the trained model (above), we apply a lot of subjective analysis — “Why did the model get this wrong?” and “Is this a good image?” From these, you may only get a&nbsp;.</p><p>Frequently, I will decide to hold off moving a model forward to production based on that gut feel. But how can you justify to your manager that you want to hit the brakes? This is where putting a more&nbsp;&nbsp;analysis comes in by creating a weighted average of the softmax “confidence” scores.</p><p>In order to apply a weighted evaluation, we need to identify sets of classes that deserve adjustments to the score. Here is where I create a list of “commonly confused” classes.</p><h2><strong>Commonly confused classes</strong></h2><p>Certain animals at our zoo can easily be mistaken. For example, African elephants and Asian elephants have different ear shapes. If your model gets these two mixed up, that is not as bad as guessing a giraffe! So perhaps you give partial credit here. You and your subject matter experts (SMEs) can come up with a list of these pairs and a weighted adjustment for each.</p><p>This weight can be factored into a modified cross-entropy loss function in the equation below. The back half of this equation will reduce the impact of being wrong for specific pairs of ground truth and prediction by using the “weight” function as a lookup. By default, the weighted adjustment would be 1 for all pairings, and the commonly confused classes would get something like 0.5.</p><p>In other words, it’s better to be unsure (have a&nbsp;&nbsp;confidence score) when you are wrong, compared to being super confident and wrong.</p><p>Once this weighted log loss is calculated, I can compare to previous training runs to see if the new model is ready for production.</p><h2><strong>Confidence threshold report</strong></h2><p>Another valuable measure that incorporates the confidence threshold (in my example, 95) is to report on accuracy and false positive rates. Recall that when we apply the confidence threshold before presenting results, we help reduce false positives from being shown to the end user.</p><p>In this table, we look at the breakdown of “true positive above 95” for each data set. We get a sense that when a “good” picture comes through (like the ones from our train-validation-test set) it is very likely to surpass the threshold, thus the user is “happy” with the outcome. Conversely, the “false positive above 95” is extremely low for good pictures, thus only a small number of our users will be “sad” about the results.</p><p>We expect the train-validation-test set results to be exceptional since our data is curated. So, as long as people take “good” pictures, the model should do very well. But to get a sense of how it does on extreme situations, let’s take a look at our benchmarks.</p><p>The “difficult” benchmark has more modest true positive and false positive rates, which reflects the fact that the images are more challenging. These values are much easier to compare across training runs, so that lets me set a min/max target. So for example, if I target a minimum of 80% for true positive, and maximum of 5% for false positive on this benchmark, then I can feel confident moving this to production.</p><p>The “out-of-scope” benchmark has no true positive rate because&nbsp;&nbsp;of the images belong to any class the model can identify. Remember, we picked things like a bag of popcorn, etc., that are not zoo animals, so there cannot be any true positives. But we do get a false positive rate, which means the model gave a confident score to that bag of popcorn as some animal. And if we set a target maximum of 10% for this benchmark, then we may not want to move it to production.</p><p>Right now, you may be thinking, “Well, what animal did it pick for the bag of popcorn?” Excellent question! Now you understand the importance of doing a manual review of the images that get bad results.</p><h2><strong>Evaluation of the deployed model</strong></h2><p>The evaluation that I described above applies to a model immediately after&nbsp;. Now, you want to evaluate how your model is doing in the&nbsp;. The process is similar, but requires you to shift to a “” and asking yourself, “Did the model get this correct?” and “Should it have gotten this correct?” and “Did we tell the user the right thing?”</p><p>So, imagine that you are logging in for the morning — after sipping on your&nbsp;<a href=\"https://medium.com/@dmartin0409/cold-brew-coffee-0aabd53a1f3e\">cold brew coffee</a>, of course — and are presented with 500 images that your zoo guests took yesterday of different animals. Your job is to determine how satisfied the guests were using your model to identify the zoo animals.</p><p>Using the softmax “confidence” score for each image, we have a threshold before presenting results. Above the threshold, we tell the guest what the model predicted. I’ll call this the “happy path”. And below the threshold is the “sad path” where we ask them to try again.</p><p>Your review interface will first show you all the “happy path” images one at a time. This is where you ask yourself, “Did we get this right?” Hopefully, yes!</p><p>But if not, this is where things get tricky. So now you have to ask, “Why not?” Here are some things that it could be:</p><ul><li>“Bad” picture — Poor lighting, bad angle, zoomed out, etc — refer to your labelling standards.</li><li>Out-of-scope — It’s a zoo animal, but unfortunately one that isn’t found in&nbsp;&nbsp;zoo. Maybe it belongs to another zoo (your guest likes to travel and try out your app). Consider adding these to your data set.</li><li>Out-of-scope — It’s not a zoo animal. It could be an animal in your zoo, but not one typically&nbsp;&nbsp;there, like a neighborhood sparrow or mallard duck. This might be a candidate to add.</li><li>Out-of-scope — It’s something found in the zoo. A zoo usually has interesting trees and shrubs, so people might try to identify those. Another candidate to add.</li><li>Prankster — Completely out-of-scope. Because people like to play with technology, there’s the possibility you have a prankster that took a picture of a bag of popcorn, or a soft drink cup, or even a selfie. These are hard to prevent, but hopefully get a low enough score (below the threshold) so the model did not identify it as a zoo animal. If you see enough pattern in these, consider creating a class with special handling on the front-end.</li></ul><p>After reviewing the “happy path” images, you move on to the “sad path” images — the ones that got a low confidence score and the app gave a “sorry, try again” message. This time you ask yourself, “&nbsp;the model have given this image a higher score?” which would have put it in the “happy path”. If so, then you want to ensure these images are added to the training set so next time it will do better. But most of time, the low score reflects many of the “bad” or out-of-scope situations mentioned above.</p><p>Perhaps your model performance is suffering and it has nothing to do with your model. Maybe it is the ways you users interacting with the app. Keep an eye out of non-technical problems and share your observations with the rest of your team. For example:</p><ul><li>Are your users using the application in the ways you expected?</li><li>Are they not following the instructions?</li><li>Do the instructions need to be stated more clearly?</li><li>Is there anything you can do to improve the experience?</li></ul><h2><strong>Collect statistics and new images</strong></h2><p>Both of the manual evaluations above open a gold mine of data. So, be sure to collect these statistics and feed them into a dashboard — your manager and your future self will thank you!</p><p>Keep track of these stats and generate reports that you and your can reference:</p><ul><li>How often the model is being called?</li><li>What times of the day, what days of the week is it used?</li><li>Are your system resources able to handle the peak load?</li><li>What classes are the most common?</li><li>After evaluation, what is the accuracy for each class?</li><li>What is the breakdown for confidence scores?</li><li>How many scores are above and below the confidence threshold?</li></ul><p>The single best thing you get from a deployed model is the additional real-world images! You can add these now images to improve coverage of your existing zoo animals. But more importantly, they provide you insight on&nbsp;&nbsp;classes to add. For example, let’s say people enjoy taking a picture of the large walrus statue at the gate. Some of these may make sense to incorporate into your data set to provide a better user experience.</p><p>Creating a new class, like the walrus statue, is not a huge effort, and it avoids the false positive responses. It would be more embarrassing to identify a walrus statue as an elephant! As for the prankster and the bag of popcorn, you can configure your front-end to quietly handle these. You might even get creative and have fun with it like, “Thank you for visiting the food court.”</p><p>It is a good idea to double-check your image set when you suspect there may be problems with your data. I’m not suggesting a top-to-bottom check, because that would a monumental effort! Rather specific classes that you suspect could contain bad data that is degrading your model performance.</p><p>Immediately after my training run completes, I have a script that will use this new model to generate predictions for my&nbsp;&nbsp;data set. When this is complete, it will take the list of incorrect identifications, as well as the low scoring predictions, and automatically feed that list into the Double-check interface.</p><p>This interface will show, one at a time, the image in question, alongside an example image of the ground truth and an example image of what the model predicted. I can visually compare the three, side-by-side. The first thing I do is ensure the original image is a “good” picture, following my labelling standards. Then I check if the ground-truth label is indeed correct, or if there is something that made the model think it was the predicted label.</p><ul><li>Remove the original image if the image quality is poor.</li><li>Relabel the image if it belongs in a different class.</li></ul><p>During this manual evaluation, you might notice dozens of the same wrong prediction. Ask yourself why the model made this mistake when the images seem perfectly fine. The answer may be some incorrect labels on images in the ground truth, or even in the predicted class!</p><p>Don’t hesitate to add those classes and sub-classes back into the Double-check interface and step through them all. You may have 100–200 pictures to review, but there is a good chance that one or two of the images will stand out as being the culprit.</p><p>With a different mindset for a trained model versus a deployed model, we can now evaluate performances to decide which models are ready for production, and how well a production model is going to serve the public. This relies on a solid Double-check process and a critical eye on your data. And beyond the “gut feel” of your model, we can rely on the benchmark scores to support us.</p><p>In&nbsp;<a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-4-the-model/\">Part 4</a>, we kick off the training run, but there are some subtle techniques to get the most out of the process and even ways to leverage throw-away models to expand your library image data.<a href=\"https://medium.com/tag/machine-learning?source=post_page-----e4a8dbb035e0---------------------------------------\"></a></p>","contentLength":13463,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Build a dynamic, role-based AI agent using Amazon Bedrock inline agents","url":"https://aws.amazon.com/blogs/machine-learning/build-a-dynamic-role-based-ai-agent-using-amazon-bedrock-inline-agents/","date":1739480188,"author":"Ishan Singh","guid":132,"unread":true,"content":"<p>AI agents continue to gain momentum, as businesses use the power of generative AI to reinvent customer experiences and automate complex workflows. We are seeing <a href=\"https://aws.amazon.com/bedrock/agents/\" target=\"_blank\" rel=\"noopener\">Amazon Bedrock Agents</a> applied in investment research, insurance claims processing, root cause analysis, advertising campaigns, and much more. Agents use the reasoning capability of foundation models (FMs) to break down user-requested tasks into multiple steps. They use developer-provided instructions to create an orchestration plan and carry out that plan by securely invoking company APIs and accessing knowledge bases using Retrieval Augmented Generation (RAG) to accurately handle the user’s request.</p><p>Although organizations see the benefit of agents that are defined, configured, and tested as managed resources, we have increasingly seen the need for an additional, more dynamic way to invoke agents. Organizations need solutions that adjust on the fly—whether to test new approaches, respond to changing business rules, or customize solutions for different clients. This is where the new <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-create-inline.html\" target=\"_blank\" rel=\"noopener\">inline agents</a> capability in Amazon Bedrock Agents becomes transformative. It allows you to dynamically adjust your agent’s behavior at runtime by changing its instructions, tools, guardrails, knowledge bases, prompts, and even the FMs it uses—all without redeploying your application.</p><p>In this post, we explore how to build an application using Amazon Bedrock inline agents, demonstrating how a single AI assistant can adapt its capabilities dynamically based on user roles.</p><h2>Inline agents in Amazon Bedrock Agents</h2><p>This runtime flexibility enabled by inline agents opens powerful new possibilities, such as:</p><ul><li> – Inline agents minimize the time-consuming create/update/prepare cycles traditionally required for agent configuration changes. Developers can instantly test different combinations of models, tools, and knowledge bases, dramatically accelerating the development process.</li><li><strong>A/B testing and experimentation</strong> – Data science teams can systematically evaluate different model-tool combinations, measure performance metrics, and analyze response patterns in controlled environments. This empirical approach enables quantitative comparison of configurations before production deployment.</li><li><strong>Subscription-based personalization</strong> – Software companies can adapt features based on each customer’s subscription level, providing more advanced tools for premium users.</li><li><strong>Persona-based data source integration</strong> – Institutions can adjust content complexity and tone based on the user’s profile, providing persona-appropriate explanations and resources by changing the knowledge bases associated to the agent on the fly.</li><li> – Developers can create applications with hundreds of APIs, and quickly and accurately carry out tasks by dynamically choosing a small subset of APIs for the agent to consider for a given request. This is particularly helpful for large software as a service (SaaS) platforms needing multi-tenant scaling.</li></ul><p>Inline agents expand your options for building and deploying agentic solutions with Amazon Bedrock Agents. For workloads needing managed and versioned agent resources with a pre-determined and tested configuration (specific model, instructions, tools, and so on), developers can continue to use InvokeAgent on resources created with CreateAgent. For workloads that need dynamic runtime behavior changes for each agent invocation, you can use the new <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeInlineAgent.html\" target=\"_blank\" rel=\"noopener\">InvokeInlineAgent API</a>. With either approach, your agents will be secure and scalable, with configurable guardrails, a flexible set of model inference options, native access to knowledge bases, code interpretation, session memory, and more.</p><p>Our HR assistant example shows how to build a single AI assistant that adapts to different user roles using the new inline agent capabilities in Amazon Bedrock Agents. When users interact with the assistant, the assistant dynamically configures agent capabilities (such as model, instructions, knowledge bases, action groups, and guardrails) based on the user’s role and their specific selections. This approach creates a flexible system that adjusts its functionality in real time, making it more efficient than creating separate agents for each user role or tool combination. The complete code for this HR assistant example is available on our <a href=\"https://github.com/awslabs/amazon-bedrock-agent-samples/tree/main/examples/agents_ux/inline-agent-hr-assistant\" target=\"_blank\" rel=\"noopener\">GitHub repo</a>.</p><p>This dynamic tool selection enables a personalized experience. When an employee logs in without direct reports, they see a set of tools that they have access to based on their role. They can select from options like requesting vacation time, checking company policies using the knowledge base, using a code interpreter for data analysis, or submitting expense reports. The inline agent assistant is then configured with only these selected tools, allowing it to assist the employee with their chosen tasks. In a real-world example, the user would not need to make the selection, because the application would make that decision and automatically configure the agent invocation at runtime. We make it explicit in this application so that you can demonstrate the impact.</p><p>Similarly, when a manager logs in to the same system, they see an extended set of tools reflecting their additional permissions. In addition to the employee-level tools, managers have access to capabilities like running performance reviews. They can select which tools they want to use for their current session, instantly configuring the inline agent with their choices.</p><p>The inclusion of knowledge bases is also adjusted based on the user’s role. Employees and managers see different levels of company policy information, with managers getting additional access to confidential data like performance review and compensation details. For this demo, we’ve implemented <a href=\"https://aws.amazon.com/blogs/machine-learning/amazon-bedrock-knowledge-bases-now-supports-metadata-filtering-to-improve-retrieval-accuracy/\" target=\"_blank\" rel=\"noopener\">metadata filtering</a> to retrieve only the appropriate level of documents based on the user’s access level, further enhancing efficiency and security.</p><p>Let’s look at how the interface adapts to different user roles.</p><p>The employee view provides access to essential HR functions like vacation requests, expense submissions, and company policy lookups. Users can select which of these tools they want to use for their current session.</p><p>The manager view extends these options to include supervisory functions like compensation management, demonstrating how the inline agent can be configured with a broader set of tools based on user permissions.</p><p>The manager view extends these capabilities to include supervisory functions like compensation management, demonstrating how the inline agent dynamically adjusts its available tools based on user permissions. Without inline agents, we would need to build and maintain two separate agents.</p><p>As shown in the preceding screenshots, the same HR assistant offers different tool selections based on the user’s role. An employee sees options like Knowledge Base, Apply Vacation Tool, and Submit Expense, whereas a manager has additional options like Performance Evaluation. Users can select which tools they want to add to the agent for their current interaction.</p><p>This flexibility allows for quick adaptation to user needs and preferences. For instance, if the company introduces a new policy for creating business travel requests, the tool catalog can be quickly updated to include a Create Business Travel Reservation tool. Employees can then choose to add this new tool to their agent configuration when they need to plan a business trip, or the application could automatically do so based on their role.</p><p>With Amazon Bedrock inline agents, you can create a catalog of actions that is dynamically selected by the application or by users of the application. This increases the level of flexibility and adaptability of your solutions, making them a perfect fit for navigating the complex, ever-changing landscape of modern business operations. Users have more control over their AI assistant’s capabilities, and the system remains efficient by only loading the necessary tools for each interaction.</p><h2>Technical foundation: Dynamic configuration and action selection</h2><p>Inline agents allow dynamic configuration at runtime, enabling a single agent to effectively perform the work of many. By specifying action groups and modifying instructions on the fly, even within the same session, you can create versatile AI applications that adapt to various scenarios without multiple agent deployments.</p><p>The following are key points about inline agents:</p><ul><li> – Change the agent’s configuration, including its FM, at runtime. This enables rapid experimentation and adaptation without redeploying the application, reducing development cycles.</li><li> – Apply governance and access control at the tool level. With agents changing dynamically at runtime, tool-level governance helps maintain security and compliance regardless of the agent’s configuration.</li><li> – Provide only necessary tools and instructions at runtime to reduce token usage and improve the agent accuracy. With fewer tools to choose from, it’s less complicated for the agent to select the right one, reducing hallucinations in the tool selection process. This approach can also lead to lower costs and improved latency compared to static agents because removing unnecessary tools, knowledge bases, and instructions reduces the number of input and output tokens being processed by the agent’s large language model (LLM).</li><li> – Create reusable actions for dynamic selection based on specific needs. This modular approach simplifies maintenance, updates, and scalability of your AI applications.</li></ul><p>The following are examples of reusable actions:</p><ul><li><strong>Enterprise system integration</strong> – Connect with systems like Salesforce, GitHub, or databases</li><li> – Perform common tasks such as sending emails or managing calendars</li><li> – Interact with specialized internal tools and services</li><li> – Analyze text, structured data, or other information</li><li> – Fetch weather updates, stock prices, or perform web searches</li><li> – Use specific machine learning (ML) models for targeted tasks</li></ul><p>When using inline agents, you configure parameters for the following:</p><ul><li>Contextual tool selection based on user intent or conversation flow</li><li>Adaptation to different user roles and permissions</li><li>Switching between communication styles or personas</li><li>Model selection based on task complexity</li></ul><p>The inline agent uses the configuration you provide at runtime, allowing for highly flexible AI assistants that efficiently handle various tasks across different business contexts.</p><h2>Building an HR assistant using inline agents</h2><p>Let’s look at how we built our HR Assistant using Amazon Bedrock inline agents:</p><ol><li> – We developed a demo catalog of HR-related tools, including: \n  <ul type=\"a\"><li> – Using <a href=\"https://aws.amazon.com/bedrock/knowledge-bases/\" target=\"_blank\" rel=\"noopener\">Amazon Bedrock Knowledge Bases</a> for accessing company policies and guidelines based on the role of the application user. In order to filter the knowledge base content based on the user’s role, you also need to provide a metadata file specifying the type of employee’s roles that can access each file</li><li>– For requesting and tracking time off.</li><li>– For submitting and managing expense reports.</li><li> – For performing calculations and data analysis.</li><li>– for conducting and reviewing employee compensation assessments (manager only access).</li></ul></li><li> – We defined multiple conversation tones to suit different interaction styles: \n  <ul><li> – For formal, business-like interactions.</li><li> – For friendly, everyday support.</li><li> – For upbeat, encouraging assistance.</li></ul></li><li> – We implemented role-based access control. The application backend checks the user’s role (employee or manager) and provides access to appropriate tools and information and passes this information to the inline agent. The role information is also used to configure metadata filtering in the knowledge bases to generate relevant responses. The system allows for dynamic tool use at runtime. Users can switch personas or add and remove tools during their session, allowing the agent to adapt to different conversation needs in real time.</li><li><strong>Integrate the agent with other services and tools</strong> – We connected the inline agent to: \n  <ul><li>Amazon Bedrock Knowledge Bases for company policies, with metadata filtering for role-based access.</li><li><a href=\"http://aws.amazon.com/lambda\" target=\"_blank\" rel=\"noopener\">AWS Lambda</a> functions for executing specific actions (such as submitting vacation requests or expense reports).</li><li>A code interpreter tool for performing calculations and data analysis.</li></ul></li><li> – We created a Flask-based UI that performs the following actions: \n  <ul><li>Displays available tools based on the user’s role.</li><li>Allows users to select different personas.</li><li>Provides a chat window for interacting with the HR assistant.</li></ul></li></ol><p>To understand how this dynamic role-based functionality works under the hood, let’s examine the following system architecture diagram.</p><p>As shown in preceding architecture diagram, the system works as follows:</p><ol><li>The end-user logs in and is identified as either a manager or an employee.</li><li>The user selects the tools that they have access to and makes a request to the HR assistant.</li><li>The agent breaks down the problems and uses the available tools to solve for the query in steps, which may include: \n  <ol><li>Amazon Bedrock Knowledge Bases (with metadata filtering for role-based access).</li><li>Lambda functions for specific actions.</li><li>Code interpreter tool for calculations.</li><li>Compensation tool (accessible only to managers to submit base pay raise requests).</li></ol></li><li>The application uses the Amazon Bedrock inline agent to dynamically pass in the appropriate tools based on the user’s role and request.</li><li>The agent uses the selected tools to process the request and provide a response to the user.</li></ol><p>This approach provides a flexible, scalable solution that can quickly adapt to different user roles and changing business needs.</p><p>In this post, we introduced the Amazon Bedrock inline agent functionality and highlighted its application to an HR use case. We dynamically selected tools based on the user’s roles and permissions, adapted instructions to set a conversation tone, and selected different models at runtime. With inline agents, you can transform how you build and deploy AI assistants. By dynamically adapting tools, instructions, and models at runtime, you can:</p><ul><li>Create personalized experiences for different user roles</li><li>Optimize costs by matching model capabilities to task complexity</li><li>Streamline development and maintenance</li><li>Scale efficiently without managing multiple agent configurations</li></ul><p>For organizations demanding highly dynamic behavior—whether you’re an AI startup, SaaS provider, or enterprise solution team—inline agents offer a scalable approach to building intelligent assistants that grow with your needs. To get started, explore our <a href=\"https://github.com/aws-samples/amazon-bedrock-samples/blob/main/agents-and-function-calling/bedrock-agents/features-examples/15-invoke-inline-agents/inline-agent-api-usage.ipynb\" target=\"_blank\" rel=\"noopener\">GitHub repo</a> and <a href=\"https://github.com/awslabs/amazon-bedrock-agent-samples/tree/main/examples/agents_ux/inline-agent-hr-assistant\" target=\"_blank\" rel=\"noopener\">HR assistant demo application</a>, which demonstrate key implementation patterns and best practices.</p><p>To learn more about how to be most successful in your agent journey, read our two-part blog series:</p><p>To get started with Amazon Bedrock Agents, check out the following <a href=\"https://github.com/awslabs/amazon-bedrock-agent-samples/\" target=\"_blank\" rel=\"noopener\">GitHub repository</a> with example code.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/10/blog-image-ishansin-1.jpeg\" alt=\"\" width=\"100\" height=\"133\">&nbsp;is a Generative AI Data Scientist at Amazon Web Services, where he helps customers build innovative and responsible generative AI solutions and products. With a strong background in AI/ML, Ishan specializes in building Generative AI solutions that drive business value. Outside of work, he enjoys playing volleyball, exploring local bike trails, and spending time with his wife and dog, Beau.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/10/mttanke-225x300-1-1.jpg\" alt=\"\" width=\"100\" height=\"133\">&nbsp;is a Senior Generative AI Data Scientist at AWS. With a background in machine learning, she has over 10 years of experience architecting and building AI applications with customers across industries. As a technical lead, she helps customers accelerate their achievement of business value through generative AI solutions on Amazon Bedrock. In her free time, Maira enjoys traveling, playing with her cat, and spending time with her family someplace warm.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/10/roymark-225x300-1-1.jpg\" alt=\"\" width=\"100\" height=\"133\"> is a Principal Machine Learning Architect for AWS, helping customers design and build generative AI solutions. His focus since early 2023 has been leading solution architecture efforts for the launch of Amazon Bedrock, the flagship generative AI offering from AWS for builders. Mark’s work covers a wide range of use cases, with a primary interest in generative AI, agents, and scaling ML across the enterprise. He has helped companies in insurance, financial services, media and entertainment, healthcare, utilities, and manufacturing. Prior to joining AWS, Mark was an architect, developer, and technology leader for over 25 years, including 19 years in financial services. Mark holds six AWS certifications, including the ML Specialty Certification.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/10/enitin.jpeg\" alt=\"\" width=\"100\" height=\"133\"> is a Sr. Enterprise Solutions Architect at AWS, experienced in Software Engineering, Enterprise Architecture, and AI/ML. He is deeply passionate about exploring the possibilities of generative AI. He collaborates with customers to help them build well-architected applications on the AWS platform, and is dedicated to solving technology challenges and assisting with their cloud journey.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/10/Image-from-iOS-244x300-1.jpg\" alt=\"\" width=\"100\" height=\"123\"> is a Software Development Engineer at Amazon Web Services (AWS). He specializes in backend system design, distributed architectures, and scalable solutions, contributing to the development and launch of high-impact systems at Amazon. Outside of work, he spends his time playing ping pong and hiking through Cascade trails, enjoying the outdoors as much as he enjoys building systems.</p><p> is a Software Development Engineer at Amazon Web Services (AWS), working in Agents for Amazon Bedrock. He focuses on developing scalable systems on the cloud that enable AI applications frameworks and orchestrations. Shubham also has a background in building distributed, scalable, high-volume-high-throughput systems in IoT architectures.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2018/09/18/vivekbh-100.jpg\" alt=\"\" width=\"100\" height=\"134\"> is a Principal Engineer for Amazon Bedrock.&nbsp;He focuses on building deep learning-based AI and computer vision solutions for AWS customers. Oustide of work, Vivek enjoys trekking and following cricket.</p>","contentLength":17760,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Learnings from a Machine Learning Engineer — Part 1: The Data","url":"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-1-the-data/","date":1739480153,"author":"David Martin","guid":4,"unread":true,"content":"<p>It is said that in order for a machine learning model to be successful, you need to have good data. While this is true (and pretty much obvious), it is extremely difficult to define, build, and sustain good data. Let me share with you the unique processes that I have learned over several years building an ever-growing image classification system and how you can apply these techniques to your own application.</p><p>With persistence and diligence, you can avoid the classic “garbage in, garbage out”, maximize your model accuracy, and demonstrate real business value.</p><p>In this series of articles, I will dive into the care and feeding of a multi-class, single-label image classification app and what it takes to reach the highest level of performance. I won’t get into any coding or specific user interfaces, just the main concepts that you can incorporate to suit your needs with the tools at your disposal.</p><p>Here is a brief description of the articles. You will notice that the model is last on the list since we need to focus on curating the data first and foremost:</p><p>Over the past six years, I have been primarily focused on building and maintaining an image classification application for a manufacturing company. Back when I started, most of the software did not exist or was too expensive, so I created these from scratch. In this time, I have deployed two identifier applications, the largest handles 1,500 classes and achieves 97–98% accuracy.</p><p>It was about eight years ago that I started online studies for <a href=\"https://towardsdatascience.com/tag/data-science/\" title=\"Data Science\">Data Science</a> and machine learning. So, when the exciting opportunity to create an AI application presented itself, I was prepared to build the tools I needed to leverage the latest advancements. I jumped in with both feet!</p><p>I quickly found that building and deploying a model is probably the easiest part of the job. Feeding high quality data into the model is the best way to improve performance, and that requires focus and patience. Attention to detail is what I do best, so this was a perfect fit.</p><h2><strong>It all starts with the data</strong></h2><p>I feel that so much attention is given to the model selection (deciding which neural network is best) and that the data is just an afterthought. I have found the hard way that even one or two pieces of bad data can significantly impact model performance, so that is where we need to focus.</p><p>For example, let’s say you train the classic cat versus dog image classifier. You have 50 pictures of cats and 50 pictures of dogs, however one of the “cats” is clearly (objectively) a picture of a dog. The computer doesn’t have the luxury of ignoring the mislabelled image, and instead adjusts the model weights to make it fit. Square peg meets round hole.</p><p>Another example would be a picture of a cat that climbed up into a tree. But when you take a wholistic view of it, you would describe it as a picture of a tree (first) with a cat (second). Again, the computer doesn’t know to ignore the big tree and focus on the cat — it will start to identify trees as cats, even if there is a dog. You can think of these pictures as outliers and should be removed.</p><p>It doesn’t matter if you have the best neural network in the world, you can count on the model making poor predictions when it is trained on “bad” data. I’ve learned that any time I see the model make mistakes, it’s time to review the data.</p><h2><strong>Example Application — Zoo animals</strong></h2><p>For the rest of this write-up, I will use an example of identifying zoo animals. Let’s assume your goal is to create a mobile app where guests at the zoo can take pictures of the animals they see and have the app identify them. Specifically, this is a multi-class, single-label application.</p><ul><li>&nbsp;— There are a lot of different animals at the zoo and many of them look very similar.</li><li>&nbsp;— Guests using the app don’t always take good pictures (zoomed out, blurry, too dark), so we don’t want to provide an answer if the image is poor.</li><li>&nbsp;— The zoo keeps expanding and adding new species all the time.</li><li>&nbsp;— Occasionally you might find that people take pictures of the sparrows near the food court grabbing some dropped popcorn.</li><li>&nbsp;— Just for fun, guests may take a picture of the bag of popcorn just to see what it comes back with.</li></ul><p>These are all real challenges — being able to tell the subtle differences between animals, handling out-of-scope cases, and just plain poor images.</p><p>Before we get there, let’s start from the beginning.</p><p>There are a lot of tools these days to help you with this part of the process, but the challenge remains the same — collecting, labelling, and curating the data.</p><p>Having data to collect is challenge #1. Without images, you have nothing to train. You may need to get creative on sourcing the data, or even creating synthetic data. More on that later.</p><p>A quick note about image pre-processing. I convert all my images to the input size of my neural network and save them as PNG. Inside this square PNG, I preserve the aspect ratio of the original picture and fill the background black. I don’t stretch the image nor crop any features out. This also helps center the subject.</p><p>Challenge #2 is to establish standards for data quality…and ensure that these standards are followed! These standards will guide you toward that “good” data. And this assumes, of course, correct labels. Having both is much easier said than done!</p><p>I hope to show how “good” and “correct” actually go hand-in-hand, and how important it is to apply these standards to every image.</p><p>First, I want to point out that the image data discussed here is for the training set. What qualifies as a good image for&nbsp;&nbsp;is a bit different than what qualifies as a good image for&nbsp;. More on that in <a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-3-the-evaluation/\">Part 3</a>.</p><p>So, what is “good” data when talking about images? “A picture is worth a thousand words”, and if the&nbsp;&nbsp;you use to describe the picture do not include the subject you are trying to label, then it is not good and you need remove it from your training set.</p><p>For example, let’s say you are shown a picture of a zebra and (removing bias toward your application) you describe it as an “open field with a zebra in the distance”. In other words, if “open field” is the first thing you notice, then you likely do&nbsp;&nbsp;want to use that image. The opposite is also true — if the picture is way too close, you would described it as “zebra pattern”.</p><p>What you want is a description like, “a zebra, front and center”. This would have your subject taking up about 80–90% of the total frame. Sometimes I will take the time to crop the original image so the subject is framed properly.</p><p>Keep in mind the use of image augmentation at the time of training. Having that buffer around the edges will allow “zoom in” augmentation. And “zoom out” augmentation will simulate smaller subjects, so don’t start out less than 50% of the total frame for your subject since you lose detail.</p><p>Another aspect of a “good” image relates to the label. If you can only see the back side of your zoo animal, can you really tell, for example, that it is a cheetah versus a leopard? The key identifying features need to be visible. If a human struggles to identify it, you can’t expect the computer to learn anything.</p><p>What does a “bad” image look like? Here is what I frequently watch out for:</p><ul><li>Wide angle lens stretching</li><li>High contrast or dark shadows</li><li>“Doctored” images, drawn lines and arrows</li><li>“Unusual” angles or situations</li><li>Picture of a mobile device that has a picture of your subject</li></ul><p>If you have a team of subject matter experts (SMEs) on hand to label the images, you are in a good starting position. Animal trainers at the zoo know the various species, and can spot the differences between, for example, a chimpanzee and a bonobo.</p><p>To a <a href=\"https://towardsdatascience.com/tag/machine-learning-engineer/\" title=\"Machine Learning Engineer\">Machine Learning Engineer</a>, it is easy for you to assume all labels from your SMEs are correct and move right on to training the model. However, even experts make mistakes, so if you can get a second opinion on the labels, your error rate should go down.</p><p>In reality, it can be prohibitively expensive to get one, let alone two, subject matter experts to review image labels. The SME usually has years of experience that make them more valuable to the business in other areas of work. My experience is that the machine learning engineer (that’s you and me) becomes the second opinion, and often the first opinion as well.</p><p>Over time, you can become pretty adept at labelling, but certainly not an SME. If you do have the luxury of access to an expert, explain to them the labelling standards and how these are required for the application to be successful. Emphasize “quality over quantity”.</p><p>It goes without saying that having a&nbsp;&nbsp;label is so important. However, all it takes is one or two mislabelled images to degrade performance. These can easily slip into your data set with careless or hasty labelling. So, take the time to get it right.</p><p>Ultimately, we as the ML engineer are responsible for model performance. So, if we take the approach of only working on model training and deployment, we will find ourselves wondering why performance is falling short.</p><p>A lot of times, you will come across a really good picture of a very interesting subject, but have no idea what it is! It would be a shame to simply dispose of it. What you can do is assign it a generic label, like “Unknown Bird” or “Random Plant” that are&nbsp;&nbsp;included in your training set. Later in <a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-4-the-model/\">Part 4</a>, you’ll see how to come back to these images at a later date when you have a better idea what they are, and you’ll be glad you saved them.</p><p>If you have done any image labelling, then you know how time consuming and difficult it can be. But this is where having a model, even a less-than-perfect model, can help you.</p><p>Typically, you have a large collection of unlabelled image and you need to go through them one at a time to assign labels. Simply having the model offer a best guess and display the top 3 results lets you step through each image in a matter of seconds!</p><p>Even if the top 3 results are wrong, this can help you narrow down your search. Over time, newer models will get better, and the labelling process can even be somewhat fun!</p><p>In <a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-4-the-model/\">Part 4</a>, I will show how you can bulk identify images and take this to the next level for faster labelling.</p><p>I mentioned the example above of two species that look very similar, the chimpanzee and the bonobo. When you start out building your data set, you may have very sparse coverage of one or both of these species. In machine learning terms, we these “classes”. One option is to roll with what you have and hope that the model picks up on the differences with only a handful of example images.</p><p>The option that I have used is to merge two or more classes into one, at least temporarily. So, in this case I would create a class called “chimp-bonobo”, which is composed of the limited example pictures of chimpanzee and bonobo species classes. Combined, these may give me enough to train the model on “chimp-bonobo”, with the trade-off that it’s a more generic identification.</p><p>Sub-classes can even be normal variations. For example,&nbsp;&nbsp;pink flamingos are grey instead of pink. Or, male and female orangutans have distinct facial features. You wan to have a fairly balanced number of images for these normal variations, and keeping sub-classes will allow you to accomplish this.</p><p>Don’t be concerned that you are merging completely different looking classes — the neural network does a nice job of applying the “OR” operator. This works both ways — it can help you identify male or female variations as one species, but it can hurt you when “bad” outlier images sneak in like the example “open field with a zebra in the distance.”</p><p>Over time, you will (hopefully) be able to collect more images of the sub-classes and then be able to successfully split them apart (if necessary) and train the model to identify them separately. This process has worked very well for me. Just be sure to double-check all the images when you split them to ensure the labels didn’t get accidentally mixed up — it will be time well spent.</p><p>All of this certainly depends on your user requirements, and you can handle this in different ways either by creating a unique class label like “chimp-bonobo”, or at the front-end presentation layer where you notify the user that you have intentionally merged these classes and provide guidance on further refining the results. Even after you decide to split the two classes, you may want to caution the user that the model could be wrong since the two classes are so similar.</p><p>I realize this was a long write-up for something that on the surface seems intuitive, but these are all areas that I have tripped me up in the past because I didn’t give them enough attention. Once you have a solid understanding of these principles, you can go on to build a successful application.</p><p>In&nbsp;<a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-2-the-data-sets/\">Part 2</a>, we will take the curated data we collected here to create the classic data sets, with a custom benchmark set that will further enhance your data. Then we will see how best to evaluate our trained model using a specific “training mindset”, and switch to a “production mindset” when evaluating a deployed model.</p>","contentLength":13198,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Learnings from a Machine Learning Engineer — Part 4: The Model","url":"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-4-the-model/","date":1739480022,"author":"David Martin","guid":3,"unread":true,"content":"<p>In this latest part of my series, I will share what I have learned on selecting a model for <a href=\"https://towardsdatascience.com/tag/image-classification/\" title=\"Image Classification\">Image Classification</a> and how to fine tune that model. I will also show how you can leverage the model to accelerate your labelling process, and finally how to justify your efforts by generating usage and performance statistics.</p><p>In&nbsp;<a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-1-the-data/\">Part 1</a>, I discussed the process of labelling your image data that you use in your image classification project. I showed how define “good” images and create sub-classes. In&nbsp;<a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-2-the-data-sets/\">Part 2</a>, I went over various data sets, beyond the usual train-validation-test sets, with benchmark sets, plus how to handle synthetic data and duplicate images. In <a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-3-the-evaluation/\">Part 3</a>, I explained how to apply different evaluation criteria to a trained model versus a deployed model, and using benchmarks to determine when to deploy a model.</p><p>So far I have focused a lot of time on labelling and curating the set of images, and also evaluating model performance, which is like putting the cart before the horse. I’m not trying to minimize what it takes to design a massive neural network — this is a very important part of the application you are building. In my case, I spent a few weeks experimenting with different available models before settling on one that fit the bill.</p><p>Once you pick a model structure, you usually don’t make any major changes to it. For me, six years into deployment, I’m still using the same one. Specifically, I chose Inception V4 because it has a large input image size and an adequate number of layers to pick up on subtle image features. It also performs inference fast enough on CPU, so I don’t need to run expensive hardware to serve the model.</p><p>Your mileage may vary. But again, the main takeaway is that focusing on your data will pay dividends versus searching for the best model.</p><p>I will share a process that I found to work extremely well. Once I decided on the model to use, I randomly initialized the weights and let the model train for about 120 epoch before improvements plateau at a fairly modest accuracy, like 93%. At this point, I performed the evaluation of the trained model (see <a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-3-the-evaluation/\">Part 3</a>) to clean up the data set. I also incorporated new images as part of the data pipeline (see <a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-1-the-data/\">Part 1</a>) and prepared the data sets for the next training run.</p><p>Before starting the next training run, I simply take the last trained model, pop the output layer, and add it back in with random weights. Since the number of output classes are constantly increasing in my case, I have to pop that layer anyway to account for the new number of classes. Importantly, I leave the rest of the trained weights as they were and allow them to continue updating for the new classes.</p><p>This allows the model to train much faster before improvements stall. After repeating this process dozens of times, the training reaches plateau after about 20 epochs, and the test accuracy can reach 99%! The model is building upon the low-level features that it established from the previous runs while re-learning the output weights to prevent overfitting.</p><p>It took me a while to trust this process, and for a few years I would train from scratch every time. But after I attempted this and saw the training time (not to mention the cost of cloud GPU) go down while the accuracy continued to go up, I started to embrace the process. More importantly, I continue to see the evaluation metrics of the deployed model return solid performances.</p><p>During training, you can apply transformations on your images (called “augmentation”) to give you more diversity from you data set. With our zoo animals, it is fairly safe to apply left-right flop, slight rotations clockwise and counterclockwise, and slight resize that will zoom in and out.</p><p>With these transformations in mind, make sure your images are still able to act as good training images. In other words, an image where the subject is already small will be even smaller with a zoom out, so you probably want to discard the original. Also, some of your original pictures may need to be re-oriented by 90 degrees to be upright since a further rotation would make them look unusual.</p><p>As I mentioned in <a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-1-the-data/\">Part 1</a>, you can use the trained model to assist you in labelling images one at a time. But the way to take this even further is to have your newly trained model identify hundreds at a time while building a list of the results that you can then filter.</p><p>Typically, we have large collections of&nbsp;&nbsp;images that have come in either through regular usage of the application or some other means. Recall from <a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-1-the-data/\">Part 1</a> assigning “unknown” labels to interesting pictures but you have no clue what it is. By using the bulk identification method, we can sift through the collections quickly to target the labelling once we know what they are.</p><p>By combining your current image counts with the bulk identification results, you can target classes that need expanded coverage. Here are a few ways you can leverage bulk identification:</p><ul><li><strong>Increase low image counts</strong>&nbsp;— Some of your classes may have just barely made the cutoff to be included in the training set, which means you need more examples to improve coverage. Filter for images that have low counts.</li><li><strong>Replace staged or synthetic images</strong>&nbsp;— Some classes may be built entirely using non-real-world images. These pictures may be good enough to get started with, but may cause performance issues down the road because they look different than what typically comes through. Filter for classes that depend on staged images.</li><li>&nbsp;— A class in your data set may look like another one. For example, let’s say your model can identify an antelope, and that looks like a gazelle which your model cannot identify yet. Setting a filter for antelope and a lower confidence score may reveal gazelle images that you can label.</li><li>&nbsp;— You may not have known how to identify the dozens of cute wallaby pictures, so you saved them under “Unknown” because it was a good image. Now that you know what it is, you can filter for its look-alike kangaroo and quickly add a new class.</li><li><strong>Mass removal of low scores</strong>&nbsp;— As a way to clean out your large collection of unlabelled images that have nothing worth labelling, set a filter for lowest scores.</li></ul><p>Recall the decision I made to have image cutoffs from <a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-2-the-data-sets/\">Part 2</a>, which allows us to ensure an adequate number of example images of a class before we train and server a model to the public. The problem is that you may have a number of classes that are&nbsp;&nbsp;below your cutoff (in my case, 40) and don’t make it into the model.</p><p>The way I approach this is with a “throw-away” training run that I do not intend to move to production. I will decrease the lower cutoff from 40 to perhaps 35, build my train-validation-test sets, then train and evaluate like I normally do. The most important part of this is the bulk identification at the end!</p><p>There is a chance that somewhere in the large collection of unlabelled images I will find the few that I need. Doing the bulk identification with this throw-away model helps find them.</p><p>One very important aspect of any machine learning application is being able to show usage and performance reports. Your manager will likely want to see how many times the application is being used to justify the expense, and you as the ML engineer will want to see how the latest model is performing compared to the previous one.</p><p>You should build logging into your model serving to record every transaction going through the system. Also, the manual evaluations from <a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-3-the-evaluation/\">Part 3</a> should be recorded so you can report on performance for such things as accuracy over time, by model version, by confidence scores, by class, etc. You will be able to detect trends and make adjustments to improve the overall solution.</p><p>There are a lot of reporting tools, so I won’t recommend one over the other. Just make sure you are collecting as much information as you can to build these dashboards. This will justify the time, effort, and cost associated with maintaining the application.</p><p>We covered a lot of ground across this four-part series on building an image classification project and deploying it in the real world. It all starts with the data, and by investing the time and effort into maintaining the highest quality image library, you can reach impressive levels of model performance that will gain the trust and confidence of your business partners.</p><p>As a <a href=\"https://towardsdatascience.com/tag/machine-learning-engineer/\" title=\"Machine Learning Engineer\">Machine Learning Engineer</a>, you are primarily responsible for building and deploying your model. But it doesn’t stop there — dive into the data. The more familiar you are with the data, the better you will understand the strengths and weaknesses of your model. Take a close look at the evaluations and use them as an opportunity to adjust the data set.</p><p>I hope these articles have helped you find new ways to improve your own machine learning project. And by the way, don’t let the machine do all the learning — as humans, our job is to continue our own learning, so don’t ever stop!</p><p>Thank you for taking this deep dive with me into a data-driven approach to model optimization. I look forward to your feedback and how you can apply this to your own application.<a href=\"https://medium.com/tag/machine-learning?source=post_page-----7f530bc91383---------------------------------------\"></a></p>","contentLength":9124,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Use language embeddings for zero-shot classification and semantic search with Amazon Bedrock","url":"https://aws.amazon.com/blogs/machine-learning/use-language-embeddings-for-zero-shot-classification-and-semantic-search-with-amazon-bedrock/","date":1739480012,"author":"Tom Rogers","guid":131,"unread":true,"content":"<p>In this post, we discuss what embeddings are, show how to practically use language embeddings, and explore how to use them to add functionality such as zero-shot classification and semantic search. We then use <a href=\"https://aws.amazon.com/bedrock/\" target=\"_blank\" rel=\"noopener\">Amazon Bedrock</a> and language embeddings to add these features to a <a href=\"https://en.wikipedia.org/wiki/RSS\" target=\"_blank\" rel=\"noopener\">really simple syndication (RSS)</a> aggregator application.</p><p>Amazon Bedrock is a fully managed service that makes <a href=\"https://aws.amazon.com/what-is/foundation-models/\" target=\"_blank\" rel=\"noopener\">foundation models</a> (FMs) from leading AI startups and Amazon available through an API, so you can choose from a wide range of FMs to find the model that is best suited for your use case. Amazon Bedrock offers a serverless experience, so you can get started quickly, privately customize FMs with your own data, and integrate and deploy them into your applications using <a href=\"https://aws.amazon.com/\" target=\"_blank\" rel=\"noopener\">Amazon Web Services</a> (AWS) services without having to manage infrastructure. For this post, we use the <a href=\"https://aws.amazon.com/bedrock/cohere-command-embed/\" target=\"_blank\" rel=\"noopener\">Cohere v3 Embed</a> model on Amazon Bedrock to create our language embeddings.</p><p>To demonstrate some of the possible uses of these language embeddings, we developed an RSS aggregator website. RSS is a web feed that allows publications to publish updates in a standardized, computer-readable way. On our website, users can subscribe to an RSS feed and have an aggregated, categorized list of the new articles. We use embeddings to add the following functionalities:</p><p>This post uses this application as a reference point to discuss the technical implementation of the semantic search and zero-shot classification features.</p><p>This solution uses the following services:</p><p>The following diagram illustrates the solution architecture.</p><p>This section offers a quick primer on what embeddings are and how they can be used.</p><p>Embeddings are numerical representations of concepts or objects, such as language or images. In this post, we discuss language embeddings. By reducing these concepts to numerical representations, we can then use them in a way that a computer can understand and operate on.</p><p>Let’s take Berlin and Paris as an example. As humans, we understand the conceptual links between these two words. Berlin and Paris are both cities, they’re capitals of their respective countries, and they’re both in Europe. We understand their conceptual similarities almost instinctively, because we can create a model of the world in our head. However, computers have no built-in way of representing these concepts.</p><p>To represent these concepts in a way a computer can understand, we convert them into language embeddings. Language embeddings are high dimensional vectors that learn their relationships with each other through the training of a neural network. During training, the neural network is exposed to enormous amounts of text and learns patterns based on how words are colocated and relate to each other in different contexts.</p><p>Embedding vectors allow computers to model the world from language. For instance, if we embed “Berlin” and “Paris,” we can now perform mathematical operations on these embeddings. We can then observe some fairly interesting relationships. For instance, we could do the following: Paris – France + Germany ~= Berlin. This is because the embeddings capture the relationships between the words “Paris” and “France” and between “Germany” and “Berlin”—specifically, that Paris and Berlin are both capital cities of their respective countries.</p><p>The following graph shows the word vector distance between countries and their respective capitals.</p><p>Subtracting “France” from “Paris” removes the country semantics, leaving a vector representing the concept of a capital city. Adding “Germany” to this vector, we are left with something closely resembling “Berlin,” the capital of Germany. The vectors for this relationship are shown in the following graph.</p><p>For our use case, we use the pre-trained Cohere Embeddings model in Amazon Bedrock, which embeds entire texts rather than a single word. The embeddings represent the meaning of the text and can be operated on using mathematical operations. This property can be useful to map relationships such as similarity between texts.</p><p>One way in which we use language embeddings is by using their properties to calculate how similar an article is to one of the topics.</p><p>To do this, we break down a topic into a series of different and related embeddings. For instance, for culture, we have a set of embeddings for sports, TV programs, music, books, and so on. We then embed the incoming title and description of the RSS articles, and calculate the similarity against the topic embeddings. From this, we can assign topic labels to an article.</p><p>The following figure illustrates how this works. The embeddings that Cohere generates are highly dimensional, containing 1,024 values (or dimensions). However, to demonstrate how this system works, we use an algorithm designed to reduce the dimensionality of the embeddings, <a href=\"https://en.wikipedia.org/wiki/T-distributed_stochastic_neighbor_embedding\" target=\"_blank\" rel=\"noopener\">t-distributed Stochastic Neighbor Embedding (t-SNE)</a>, so that we can view them in two dimensions. The following image uses these embeddings to visualize how topics are clustered based on similarity and meaning.</p><p>You can use the embedding of an article and check the similarity of the article against the preceding embeddings. You can then say that if an article is clustered closely to one of these embeddings, it can be classified with the associated topic.</p><p>This is the <a href=\"https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm\" target=\"_blank\" rel=\"noopener\">k-nearest neighbor (k-NN) algorithm</a>. This algorithm is used to perform classification and regression tasks. In k-NN, you can make assumptions around a data point based on its proximity to other data points. For instance, you can say that an article that has proximity to the music topic shown in the preceding diagram can be tagged with the culture topic.</p><p>The following figure demonstrates this with an <a href=\"https://arstechnica.com/science/2024/07/the-climate-is-changing-so-fast-that-we-havent-seen-how-bad-extreme-weather-could-get/\" target=\"_blank\" rel=\"noopener\">ArsTechnica article</a>. We plot against the embedding of an article’s title and description: (The climate is changing so fast that we haven’t seen how bad extreme weather could get: Decades-old statistics no longer represent what is possible in the present day).</p><p>The advantage of this approach is that you can add custom, user-generated topics. You can create a topic by first creating a series of embeddings of conceptually related items. For instance, an AI topic would be similar to the embeddings for AI, Generative AI, LLM, and Anthropic, as shown in the following screenshot.</p><p>In a traditional classification system, we’d be required to train a classifier—a supervised learning task where we’d need to provide a series of examples to establish whether an article belongs to its respective topic. Doing so can be quite an intensive task, requiring labeled data and training the model. For our use case, we can provide examples, create a cluster, and tag articles without having to provide labeled examples or train additional models. This is shown in the following screenshot of results page of our website.</p><p>In our application, we ingest new articles on a schedule. We use EventBridge schedules to periodically call a Lambda function, which checks if there are new articles. If there are, it creates an embedding from them using Amazon Bedrock and Cohere.</p><p>We calculate the article’s distance to the different topic embeddings, and can then determine whether the article belongs to that category. This is done with Aurora PostgreSQL with pgvector. We store the embeddings of the topics and then calculate their distance using the following SQL query:</p><div><pre><code>const topics = await sqlClient.then(it=&gt; it.query(\n    `SELECT name, embedding_description, similarity\n     FROM (SELECT topic_id as name, embedding_description, (1- ABS( 1 –(embed.embedding &lt;-&gt; $1))) AS \"similarity\" FROM topic_embedding_link embed)  topics\n     ORDER BY similarity desc`,\n    [toSql(articleEmbedding)]\n  ))\n</code></pre></div><p>The &lt;-&gt; operator in the preceding code calculates the Euclidean distance between the article and the topic embedding. This number allows us to understand how close an article is to one of the topics. We can then determine the appropriateness of a topic based on this ranking.</p><p>We then tag the article with the topic. We do this so that the subsequent request for a topic is as computationally as light as possible; we do a simple join rather than calculating the Euclidean distance.</p><div><div><pre><code>const formattedTopicInsert = pgformat(\n    `INSERT INTO feed_article_topic_link(topic_id, feed_article_id) VALUES %L ON CONFLICT DO NOTHING`,\n    topicLinks\n  )</code></pre></div></div><p>We also cache a specific topic/feed combination because these are calculated hourly and aren’t expected to change in the interim.</p><p>As previously discussed, the embeddings produced by Cohere contain a multitude of features; they embed the meanings and semantics of a word of phrase. We’ve also found that we can perform mathematical operations on these embeddings to do things such as calculate the similarity between two phrases or words.</p><p>We can use these embeddings and calculate the similarity between a search term and an embedding of an article with the k-NN algorithm to find articles that have similar semantics and meanings to the search term we’ve provided.</p><p>For example, in one of our RSS feeds, we have a lot of different articles that rate products. In a traditional search system, we’d rely on keyword matches to provide relevant results. Although it might be simple to find a specific article (for example, by searching “best digital notebooks”), we would need a different method to capture multiple product list articles.</p><p>In a semantic search system, we first transform the term “Product list” in an embedding. We can then use the properties of this embedding to perform a search within our embedding space. Using the k-NN algorithm, we can find articles that are semantically similar. As shown in the following screenshot, despite not containing the text “Product list” in either the title or description, we’ve been able to find articles that contain a product list. This is because we were able to capture the semantics of the query and match it to the existing embeddings we have for each article.</p><p>In our application, we store these embeddings using pgvector on Aurora PostgreSQL. pgvector is an open source extension that enables vector similarity search in PostgreSQL. We transform our search term into an embedding using Amazon Bedrock and Cohere v3 Embed.</p><p>After we’ve converted the search term to an embedding, we can compare it with the embeddings on the article that have been saved during the ingestion process. We can then use pgvector to find articles that are clustered together. The SQL code for that is as follows:</p><div><pre><code>SELECT *\nFROM (\n    SELECT feed_articles.id as id, title, feed_articles.feed_id as feed, feedName, slug, description, url, author, image, published_at as published, 1 - ABS(1 - (embedding &lt;-&gt; $2)) AS \"similarity\"\n    FROM feed_articles\n    INNER JOIN (select feed_id, name as feedName from feed_user_subscription fus where fus.user_id=$1) sub on feed_articles.feed_id=sub.feed_id\n    ${feedId != undefined ? `WHERE feed_articles.feed_id = $4` : \"\"}\n)\nWHERE similarity &gt; 0.95\nORDER BY similarity desc\nLIMIT $3;\n</code></pre></div><p>This code calculates the distance between the topics, and the embedding of this article as “similarity.” If this distance is close, then we can assume that the topic of the article is related, and we therefore attach the topic to the article.</p><p>To deploy this application in your own account, you need the following prerequisites:</p><ul><li>Model access for Cohere Embed English. On the Amazon Bedrock console, choose  in the navigation pane, then choose . Select the FMs of your choice and request access.</li></ul><p>When the prerequisite steps are complete, you’re ready to set up the solution:</p><ol start=\"2\"><li>Navigate to the solution directory:</li></ol><ol start=\"3\"><li>In your terminal, export your AWS credentials for a role or user in ACCOUNT_ID. The role needs to have all necessary permissions for AWS CDK deployment: \n  <ul><li><strong>export AWS_REGION=”&lt;region&gt;”</strong> – The <a href=\"https://docs.aws.amazon.com/glossary/latest/reference/glos-chap.html#region\" target=\"_blank\" rel=\"noopener\">AWS Region</a> you want to deploy the application to</li><li><strong>export AWS_ACCESS_KEY_ID=”&lt;access-key&gt;”</strong> – The access key of your role or user</li><li><strong>export AWS_SECRET_ACCESS_KEY=”&lt;secret-key&gt;”</strong> – The secret key of your role or user</li></ul></li></ol><ol start=\"4\"><li>If you’re deploying the AWS CDK for the first time, run the following command:</li></ol><ol start=\"5\"><li>To synthesize the <a href=\"http://aws.amazon.com/cloudformation\" target=\"_blank\" rel=\"noopener\">AWS CloudFormation</a> template, run the following command:<code>cdk synth -c vpc_id=&lt;ID Of your VPC&gt;</code></li></ol><ol start=\"6\"><li>To deploy, use the following command:<code>cdk deploy -c vpc_id=&lt;ID Of your VPC&gt;</code></li></ol><p>When deployment is finished, you can check these deployed stacks by visiting the AWS CloudFormation console, as shown in the following screenshot.</p><p>Run the following command in the terminal to delete the CloudFormation stack provisioned using the AWS CDK:</p><p>In this post, we explored what language embeddings are and how they can be used to enhance your application. We’ve learned how, by using the properties of embeddings, we can implement a real-time zero-shot classifier and can add powerful features such as semantic search.</p><p>The code for this application can be found on the accompanying <a href=\"https://github.com/aws-samples/rss-aggregator-using-cohere-embeddings-bedrock\" target=\"_blank\" rel=\"noopener\">GitHub repo</a>. We encourage you to experiment with language embeddings and find out what powerful features they can enable for your applications!</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/06/ML-17434-About-Author.jpeg\" alt=\"About the Author\" width=\"100\" height=\"133\">is a Solutions Architect based in Amsterdam, the Netherlands. He has a background in software engineering. At AWS, Thomas helps customers build cloud solutions, focusing on modernization, data, and integrations.</p>","contentLength":13247,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Learnings from a Machine Learning Engineer — Part 2: The Data Sets","url":"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-2-the-data-sets/","date":1739478579,"author":"David Martin","guid":2,"unread":true,"content":"<p>In&nbsp;<a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-1-the-data/\">Part 1</a>, we discussed the importance of collecting good image data and assigning proper labels for your <a href=\"https://towardsdatascience.com/tag/image-classification/\" title=\"Image Classification\">Image Classification</a> project to be successful. Also, we talked about classes and sub-classes of your data. These may seem pretty straight forward concepts, but it’s important to have a solid understanding going forward. So, if you haven’t, please check it out.</p><p>Now we will discuss how to build the various data sets and the techniques that have worked well for my application. Then in the <a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-3-the-evaluation/\">next part</a>, we will dive into the evaluation of your models, beyond simple accuracy.</p><p>I will again use the example zoo animals image classification app.</p><p>As machine learning engineers, we are all familiar with the train-validation-test sets, but when we include the concept of sub-classes discussed in <a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-1-the-data/\">Part 1</a>, and incorporate to concepts discussed below to set a minimum and maximum image count per class, as well as staged and synthetic data to the mix, the process gets a bit more complicated. I had to create a custom script to handle these options.</p><p>I will walk you through these concepts before we split the data for training:</p><ul><li>&nbsp;— Too few images and your model performance will suffer. Too many and you spend more time training than it’s worth.</li><li>&nbsp;— Your model indicates how confident it is in the predictions. Let’s use that to decide when to present results to the user.</li><li>&nbsp;— Real-world data is messy and the benchmark sets should reflect that. These need to stretch the model to the limit and help us decide when it is ready for production.</li><li><strong>Staged and synthetic data</strong>&nbsp;— Real-world data is king, but sometimes you need to produce the your own or even generate data to get off the ground. Be careful it doesn’t hurt performance.</li><li>&nbsp;— Repeat data can skew your results and give you a false sense of performance. Make sure your data is diverse.</li><li>&nbsp;— Combine sub-classes, apply cutoffs, and create your train-validation-test sets. Now we are ready to get the show started.</li></ul><p>In my experience, using a minimum of 40 images per class provides descent performance. Since I like to use 10% each for the test set and validation set, that means at least 4 images will be used to check the training set, which feels just barely adequate. Using fewer than 40 images per class, I notice my model evaluation tends to suffer.</p><p>On the other end, I set a maximum of about 125 images per class. I have found that the performance gains tend to plateau beyond this, so having more data will slow down the training run with little to show for it. Having more than the maximum is fine, and these “overflow” can be added to the test set, so they don’t go to waste.</p><p>There are times when I will drop the minimum cutoff to, say 35, with no intention of moving the trained model to production. Instead, the purpose is to leverage this throw-away model to find more images from my unlabelled set. This is a technique that I will go into more detail in <a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-3-the-evaluation/\">Part 3</a>.</p><p>You are likely familiar with the softmax score. As a reminder, softmax is the probability assigned to each label. I like to think of it as a confidence score, and we are interested in the class that receives the highest confidence. Softmax is a value between zero and one, but I find it easier to interpret confidence scores between zero and 100, like a percentage.</p><p>In order to decide if the model is confident enough with its prediction, I have chosen a threshold of 95. I use this threshold when determining if I want to present results to the user.</p><p>Scores above the threshold have a better changes of being right, so I can confidently provide the results. Scores below the threshold may not be right — in fact it could be “out-of-scope”, meaning it’s something the model doesn’t know how to identify. So, instead of taking the risk of presenting incorrect results, I instead prompt the user to try again and offer suggestions on how to take a “good” picture.</p><p>Admittedly this is somewhat arbitrary cutoff, and you should decide for your use-case what is appropriate. In fact, this score could probably be adjusted for each trained model, but this would make it harder to compare performance across models.</p><p>I will refer to this confidence score frequently in the evaluations section in <a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-3-the-evaluation/\">Part 3</a>.</p><p>Let me introduce what I call the benchmark sets, which you can think of as extended test sets. These are hand-picked images designed to stretch the limits of your model, and provide a measure for specific classes of your data. Use these benchmarks to justify moving your model to production, and for an objective measure to show to your manager.</p><ul><li>&nbsp;— These are the “extra credit” images, like the bonus questions a professor would add to the quiz to see which students are paying attention. You need a keen eye to spot the difference between the ground truth and a similar looking class. For example, a cheetah sleeping in the shade that could pass as a leopard if you don’t look closely.</li><li>&nbsp;— These are the “trick question” images. Our model is trained on zoo animals, but people are known for not following the rules. For example, a zoo guest takes a picture of their child wearing cheetah face paint.</li><li>&nbsp;— These are your “bread and butter” classes that need to get near perfect scores and zero errors. This would be a make-or-break benchmark for moving to production.</li><li>&nbsp;— These are your “rare but exceptional” classes that again need to be correct, but reach a minimum score like the confidence threshold.</li></ul><p>When looking for images to add to the benchmarks, you can likely find them in real-world images from your deployed model. See the evaluation in <a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-3-the-evaluation/\">Part 3</a>.</p><p>For each benchmark, calculate the min, max, median, and mean scores, and also how many images get scores above and below the confidence threshold. Now you can compare these measures against what is currently in production, and against your minimum requirements, to help decide if the new model is production worthy.</p><p>Perhaps the biggest hurdle to any supervised machine learning application is having data to train the model. Clearly, “real-world” data that comes from actual users of the application is ideal. However you can’t really collect these until the model is deployed. Chicken and egg problem.</p><p>One way to get started to is to have volunteers collect “staged” images for you, trying to act like real users. So, let’s have our zoo staff go around taking pictures of the animals. This is a good start, but there will be a certain level of bias introduced in these images. For example, the staff may take the photos over a few days, so you may not get the year-round weather conditions.</p><p>Another way to get pictures is use computer-generated “synthetic” images. I would avoid these at all costs, to be honest. Based on my experience, the model struggles with these because they look…different. The lighting is not natural, the subject may superimposed on a background and so the edges look too sharp, etc. Granted, some of the AI generated images look very realistic, but if you look closely you may spot something unusual. The neural network in your model will notice these, so be careful.</p><p>The way that I handle these staged or synthetic images is as a sub-class that gets merged into the training set, but only&nbsp;&nbsp;giving preference to the real-world images. I cap the number of staged images to 60, so if I have 10 real-world, I now only need 50 staged. Eventually, these staged and synthetic images are phased out completely, and I rely entirely on real-world.</p><p>One problem that can creep into your image set are duplicate images. These can be exact copies of pictures, or they can be extremely similar. You may think that this is harmless, but imagine having 100 pictures of an elephant that are exactly the same — your model will not know what to do with a different angle of the elephant.</p><p>Now, let’s say you have only&nbsp;&nbsp;pictures that are nearly the same. Not so bad, right? Well, here is what can happen to them:</p><ul><li>Both pictures go in the training set — The model doesn’t learn anything from the repeated image and it wastes time processing them.</li><li>One goes into the training set, the other goes into the test set — Your test score will be higher, but it is not an accurate evaluation.</li><li>Both are in the test set — Your test score will be compounded either higher or lower than it should be.</li></ul><p>None of these will help your model.</p><p>There are a few ways to find duplicates. The approach I have taken is to calculate a hamming distance on all the pictures and identify the ones that are very close. I have an interface that displays the duplicates and I decide which one I like best, and remove the other.</p><p>Another way (I haven’t tried this yet) is to create a vector representation of your images. Store these a vector database, and you can do a similarity search to find nearly identical images.</p><p>Whatever method you use, it is important to clean up the duplicates.</p><p>Now we are ready to build the traditional training, validation, and test sets. This is no longer a straight forward task since I want to:</p><ol><li>Merge sub-classes into a main class.</li><li>Prioritize real-world images over staged or synthetic images.</li><li>Apply a minimum number of images per class.</li><li>Apply a maximum number of images per class, sending the “overflow” to the test set.</li></ol><p>This process is somewhat complicated and depends on how you manage your image library. First, I would recommend keeping your images in a folder structure that has sub-class folders. You can get image counts by using a script to simply read the folders. Second is to keep a configuration of how the sub-classes are merged. To really set yourself up for success, put these image counts and merge rules in a database for faster lookups.</p><p>My train-validation-test set splits are usually 90–10–0. I originally started out using 80–10–10, but with diligence on keeping the entire data set clean, I noticed validation and test scores became pretty even. This allowed me to increase the training set size, and use “overflow” to become the test set, as well as using the benchmark sets.</p><p>In this part, we’ve built our data sets by merging sub-classes and using the image count cutoffs. Plus we handle staged and synthetic data as well as cleaning up duplicate images. We also created benchmark sets and defined confidence thresholds, which help us decide when to move a model to production.</p><p>In&nbsp;<a href=\"https://towardsdatascience.com/learnings-from-a-machine-learning-engineer-part-3-the-evaluation/\">Part 3</a>, we will discuss how we are going to evaluate the different model performances. And then finally we will get to the actual model training and the techniques to enhance accuracy.<a href=\"https://medium.com/tag/machine-learning?source=post_page-----1948daf60483---------------------------------------\"></a></p>","contentLength":10545,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Python vs R for data science: Which should you choose?","url":"https://www.datasciencecentral.com/python-vs-r-for-data-science-which-should-you-choose/","date":1739461072,"author":"Mike Steven","guid":62,"unread":true,"content":"<p>Welcome to another comparison article where you will understand the features, intricacies, pros, and cons of two different stacks of the information technology industry. Today’s comparison blog is especially for data scientists who spend their day and night with datasets, insights, trends, and analysis of many other factors. From a long list of skills that…&nbsp;<a href=\"https://www.datasciencecentral.com/python-vs-r-for-data-science-which-should-you-choose/\" rel=\"bookmark\">Read More »</a></p>","contentLength":377,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Bridging the Gap: Democratizing AI for All","url":"https://www.kdnuggets.com/bridging-gap-democratizing-ai","date":1739458803,"author":"Vidhi Chugh","guid":251,"unread":true,"content":"<article>Let’s explore how democratizing AI can level the playing field and create opportunities for all, no matter the background or resources.</article>","contentLength":137,"flags":null,"enclosureUrl":"https://www.kdnuggets.com/wp-content/uploads/chugh_Bridging-the-Gap-Democratizing-AI-for-All_1.png","enclosureMime":"","commentsUrl":null},{"title":"How to Scale Sklearn with Dask","url":"https://www.kdnuggets.com/how-to-scale-sklearn-dask","date":1739451649,"author":"Iván Palomares Carrascosa","guid":250,"unread":true,"content":"<article>Here's how Dask applies the building blocks of sklearn to bring ML modeling workflows to the next level of scalability via high-performance parallel computing</article>","contentLength":158,"flags":null,"enclosureUrl":"https://www.kdnuggets.com/wp-content/uploads/crVYYGyvTE2Jilsmvukhpw.jpeg","enclosureMime":"","commentsUrl":null},{"title":"Bridging the AI Learning Gap","url":"https://www.oreilly.com/radar/bridging-the-ai-learning-gap/","date":1739444990,"author":"Andrew Stellman","guid":543,"unread":true,"content":"<p>When I started working on the new edition of  back in 2023, AI tools like ChatGPT and Copilot were already changing how developers write and learn code. It was clear that I needed to cover them. But that raised an interesting challenge: How do you teach new and intermediate developers to use AI effectively?</p><p>Almost all of the material that I found was aimed at senior developers—people who can recognize patterns in code, spot the subtle errors often found in AI-generated code, and refine and refactor AI output. But the audience for the book—a developer learning C# as their first, second, or third language—doesn’t yet have these skills. It became increasingly clear that they would need a new strategy.</p><p>Designing an effective AI learning path that worked with the Head First method—which engages readers through active learning and interactive puzzles, exercises, and other elements—took months of intense research and experimentation. The result was , a new series of hands-on elements that I designed to teach developers how to learn with AI, not just generate code. The name is a play on “sensei,” reflecting the role of AI as a teacher or instructor rather than just a tool.</p><p>The key realization was that there’s a big difference between using AI as a code generation tool and using it as a learning tool. That distinction is a critical part of the learning path, and it took time to fully understand. Sens-AI guides learners through a series of incremental learning elements that get them working with AI immediately, creating a satisfying experience from the start while they progressively learn the prompting skills they’ll lean on as their development skills grow.</p><h2>The Challenge of Building an AI Learning Path That Works</h2><p>I developed Sens-AI for the fifth edition of . After more than two decades of writing and teaching for O’Reilly, I’ve learned a lot about how new and intermediate developers learn—and just as importantly, what trips them up. In some ways AI-assisted coding is just another skill to learn, but it comes with its own challenges that make it uniquely difficult for new and intermediate learners to pick up. My goal was to find a way to integrate AI into the learning path without letting it short-circuit the learning process.</p><h3>Step 1: Show Learners Why They Can’t Just Trust AI</h3><p>One of the biggest challenges for new and intermediate developers trying to integrate AI into their learning is that an overreliance on AI-generated code <em>can actually prevent them from learning</em>. Coding is a skill, and like all skills it takes practice, which is why  has dozens of hands-on coding exercises designed to teach specific concepts and techniques. A learner who uses AI to do the exercises will struggle to build those skills.</p><p>The key to using AI safely is —AI-generated explanations and code may look correct, but they often contain subtle mistakes. Learning to spot these errors is critical for using AI effectively, and developing that skill is an important stepping stone on the path to becoming a senior developer. The first step in Sens-AI was to make this lesson clear immediately. I designed an early Sens-AI exercise to demonstrate how AI can be confidently wrong.</p><ul><li>Early in the book, learners complete a pencil-and-paper exercise where they analyze a simple loop and determine how many times it executes.</li><li>Most readers get the correct answer, but when they feed the same question into an AI chatbot, the AI almost never gets it right.</li><li>The AI typically explains the logic of the loop well—but its final answer is , because LLM-based AIs don’t execute code.</li><li>This reinforces an important lesson: AI can be wrong—and sometimes, you are better at solving problems than AI. By seeing AI make a mistake on a problem they already solved correctly, learners immediately understand that they can’t just assume AI is right.</li></ul><h3>Step 2: Show Learners That AI Still Requires Effort</h3><p>The next challenge was teaching learners to see AI as a tool, not a crutch. AI can solve almost all of the exercises in the book, but a reader who lets AI do that won’t actually learn the skills they came to the book to learn.</p><p>This led to an important realization: Writing a coding exercise for a person is exactly the same as writing a prompt for an AI.</p><p>In fact, I realized that I could test my exercises by pasting them verbatim into an AI. If the AI was able to generate a correct solution, that meant my exercise contained all the information a human learner needed to solve it too.</p><p>This turned into another key Sens-AI exercise:</p><ul><li>Learners complete a full-page coding exercise by following step-by-step instructions.</li><li>After solving it themselves, they paste the entire exercise into an AI chatbot to see how it solves the same problem.</li><li>The AI almost always generates the correct answer, and it often generates exactly the same solution they wrote.</li></ul><p>This reinforces another critical lesson: Telling an AI what to do is just as difficult as telling a person what to do. Many new developers assume that prompt engineering is just writing a quick instruction—but Sens-AI demonstrates that a good AI prompt is as detailed and structured as a coding exercise. This gives learners an immediate hands-on experience with AI while teaching them that writing effective prompts requires real effort.</p><p>By first having the learner see that AIs can make mistakes, and then having them generate code for a problem they solved and compare it to their own solution—and even use the AI’s code source of ideas for refactoring—they gain a deeper understanding of how to engage with AI critically. These two opening Sens-AI elements laid the groundwork for a successful AI learning path.</p><h2>The Sens-AI Approach—Making AI a Learning Tool</h2><p>The final challenge in developing the Sens-AI approach was finding a way to help learners <strong>develop a habit of engaging with AI in a positive way</strong>. Solving that problem required me to develop a series of practical exercises, each of which gives the learner a specific tool that they can use immediately but also reinforces a positive lesson about how to use AI effectively.</p><p>One of AI’s most powerful features for developers is its ability to explain code. I built the next Sens-AI element around this by having learners ask AI to add comments to code they just wrote. Since they already understand their own code, they can evaluate the AI’s comments—checking whether the AI understood their logic, spotting where it went wrong, and identifying gaps in its explanations. This provides hands-on training in prompting AI while reinforcing a key lesson: AI doesn’t always get it right, and reviewing its output critically is essential.</p><p>The next step in the Sens-AI learning path focuses on using , helping learners explore C# topics effectively through prompt engineering techniques. Learners experiment with different AI personas and response styles—casual versus precise explanations, bullet points versus long answers—to see what works best for them. They’re also encouraged to ask follow-up questions, request reworded explanations, and ask for concrete examples that they can use to refine their understanding. To put this into practice, learners research a new C# topic that wasn’t covered earlier in the book. This reinforces the idea that <em>AI is a useful research tool, but only if you guide it effectively</em>.</p><p>Sens-AI focuses on understanding code first, generating code second. That’s why the learning path only returns to AI-generated code after reinforcing good AI habits. Even then, I had to carefully design exercises to ensure AI was an aid to learning, not a replacement for it. After experimenting with different approaches, I found that generating unit tests was an effective next step.</p><p>Unit tests work well because their logic is simple and easy to verify, making them a safe way to practice AI-assisted coding. More importantly, writing a good prompt for a unit test forces the learner to describe the code they’re testing—including its behavior, arguments, and return type. This naturally builds strong prompting skills and positive AI habits, encouraging developers to think carefully about their design before asking AI to generate anything.</p><h2>Learning  AI, Not Just Using It</h2><p>AI is a powerful tool for developers, but using it effectively requires more than just knowing how to generate code. The biggest mistake new developers can make with AI is using it as a crutch for generating code, because that keeps them from learning the coding skills they need to critically evaluate all of the code that AI generates. By giving learners a step-by-step approach that reinforces safe use of AI and great AI habits, and reinforcing it with examples and practice, Sens-AI gives new and intermediate learners an effective AI learning path that works for them.</p><p>AI-assisted coding isn’t about shortcuts. It’s about learning how to think critically, and about using AI as a positive tool to help us build and learn. Developers who engage critically with AI, refine their prompts, question AI-generated output, and develop effective AI learning habits will be the ones who benefit the most. By helping developers include AI as a part of their skillset from the start, Sens-AI ensures that they don’t just use AI to generate code—they learn how to think, problem-solve, and improve as developers in the process.</p><p><em>On April 24, O’Reilly Media will be hosting </em><strong>Coding with AI: The End of Software Development as We Know It</strong><em>—a live virtual tech conference spotlighting how AI is already supercharging developers, boosting productivity, and providing real value to their organizations. If you’re in the trenches building tomorrow’s development practices today and interested in speaking at the event, we’d love to hear from you by March 5. You can find more information and our call for presentations <a href=\"https://www.oreilly.com/CodingwithAI/cfp.html\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">here</a>. </em></p>","contentLength":9859,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Precision agriculture powered by AI for climate-resilient crops","url":"https://www.datasciencecentral.com/precision-agriculture-powered-by-ai-for-climate-resilient-crops/","date":1739395550,"author":"Shanthababu Pandian","guid":61,"unread":true,"content":"<p>AI in Agriculture Precision Farming AI-Powered Agriculture Climate-Resilient Crops\nSustainable Farming Practices AI for Pest Control AI for Soil Analysis Machine Learning in Agriculture Smart Farming Solutions IoT in Agriculture Crop Monitoring with AI<p>\nPredictive Analytics in Farming AI for Weather Prediction in Agriculture</p>\nAI-Driven Precision Irrigation AI in Fertilization Optimization Sustainable Agriculture Technology Advanced Farming Techniques Agriculture Data Analysis with AI<p>\nAI-Powered Smart Irrigation Agricultural Innovation with AI</p></p>","contentLength":546,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Fine-tune LLMs with synthetic data for context-based Q&A using Amazon Bedrock","url":"https://aws.amazon.com/blogs/machine-learning/fine-tune-llms-with-synthetic-data-for-context-based-qa-using-amazon-bedrock/","date":1739382250,"author":"Sue Cha","guid":130,"unread":true,"content":"<p>There’s a growing demand from customers to incorporate generative AI into their businesses. Many use cases involve using pre-trained large language models (LLMs) through approaches like Retrieval Augmented Generation (RAG). However, for advanced, domain-specific tasks or those requiring specific formats, model customization techniques such as fine-tuning are sometimes necessary. <a href=\"https://aws.amazon.com/bedrock/\" target=\"_blank\" rel=\"noopener\">Amazon Bedrock</a> provides you with the ability to customize leading foundation models (FMs) such as Anthropic’s Claude 3 Haiku and Meta’s Llama 3.1.</p><p>Amazon Bedrock is a fully managed service that makes FMs from leading AI startups and Amazon available through an API, so you can choose from a wide range of FMs to find the model that is best suited for your use case. Amazon Bedrock offers a serverless experience, so you can get started quickly, privately customize FMs with your own data, and integrate and deploy them into your applications using AWS tools without having to manage any infrastructure.</p><p>Fine-tuning is a supervised training process where labeled prompt and response pairs are used to further train a pre-trained model to improve its performance for a particular use case. One consistent pain point of fine-tuning is the lack of data to effectively customize these models. Gathering relevant data is difficult, and maintaining its quality is another hurdle. Furthermore, fine-tuning LLMs requires substantial resource commitment. In such scenarios, synthetic data generation offers a promising solution. You can create synthetic training data using a larger language model and use it to fine-tune a smaller model, which has the benefit of a quicker turnaround time.</p><p>In this post, we explore how to use Amazon Bedrock to generate synthetic training data to fine-tune an LLM. Additionally, we provide concrete evaluation results that showcase the power of synthetic data in fine-tuning when data is scarce.</p><p>The solution comprises two main steps:</p><ol><li>Generate synthetic data using the Amazon Bedrock InvokeModel API.</li><li>Fine-tune using an Amazon Bedrock custom model.</li></ol><p>For synthetic data generation, we use a larger language model (such as <a href=\"https://aws.amazon.com/bedrock/claude/\" target=\"_blank\" rel=\"noopener\">Anthropic’s Claude 3 Sonnet on Amazon Bedrock</a>) as the teacher model, and a smaller language model (such as Anthropic’s Claude Instant 1.2 or Claude 3 Haiku on Amazon Bedrock) as the student model for fine-tuning. We use the larger teacher model to generate new data based on its knowledge, which is then used to train the smaller student model. This concept is similar to knowledge distillation used in deep learning, except that we’re using the teacher model to generate a new dataset from its knowledge rather than directly modifying the architecture of the student model.</p><p>The following diagram illustrates the overall flow of the solution.</p><p>Finally, we share our experiment results, where we compare the performance of the model fine-tuned with synthetic data to the baseline (not fine-tuned) model and to a model fine-tuned with an equal amount of original training data.</p><p>To generate synthetic data and fine-tune models using Amazon Bedrock, you first need to create an <a href=\"https://aws.amazon.com/iam/\" target=\"_blank\" rel=\"noopener\">AWS Identity and Access Management (IAM)</a> service role with the appropriate permissions. This role is used by Amazon Bedrock to access the necessary resources on your behalf.</p><p>If you’re running this code using an <a href=\"https://aws.amazon.com/sagemaker/\" target=\"_blank\" rel=\"noopener\">Amazon SageMaker</a> notebook instance, edit the IAM role that’s attached to the notebook (for example, AmazonSageMaker-ExecutionRole-XXX) instead of creating a new role. Follow <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-iam-role.html\" target=\"_blank\" rel=\"noopener\">Create a service role for model customization</a> to modify the trust relationship and add the S3 bucket permission. Additionally, on the role’s tab, create the following inline policies:</p><ol><li>Policy name: bedrock-customization</li></ol><div><pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"VisualEditor0\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"bedrock:InvokeModel\",\n                \"bedrock:ListModelCustomizationJobs\",\n                \"bedrock:DeleteCustomModel\",\n                \"bedrock:CreateModelCustomizationJob\",\n                \"bedrock:StopModelCustomizationJob\",\n                \"bedrock:ListCustomModels\",\n                \"bedrock:GetCustomModel\",\n                \"bedrock:GetModelCustomizationJob\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n</code></pre></div><ol start=\"2\"><li>Policy name: iam-pass-role</li></ol><div><pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"VisualEditor0\",\n            \"Effect\": \"Allow\",\n            \"Action\": \"iam:PassRole\",\n            \"Resource\": [\n                \"${sagemaker-execution-role-arn}\"\n            ]\n        }\n    ]\n}</code></pre></div><p>The final permission policies for the SageMaker execution role should look like the following, which include AmazonSageMaker-ExecutionPolicy, AmazonSageMakerFullAccess, bedrock-customization, and iam-pass-role.</p><h2>Generate synthetic data using the Amazon Bedrock InvokeModel API</h2><p>We use the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_InvokeModel.html\" target=\"_blank\" rel=\"noopener\">Amazon Bedrock InvokeModel API</a> to generate synthetic data for fine-tuning. You can use the API to programmatically send an inference (text generation) request to the model of your choice. All you need is a well-crafted prompt tailored for data synthesis. We used the following sample prompt for our use case:</p><div><pre><code>PROMPT = \"\"\"\nYou are an AI assistant who is an expert in Amazon services. Your task is to understand a system that takes in a list of documents, and based on that, answers a question by providing citations for the documents that it referred the answer from.\n\nYour job is to generate three new Question/Answer pairs, emulating the tone, style, and grammar of the original data provided.\n\nHere is the original data :\nInput Documents and Question : {document}\\n\\nQuestion: {question}\nOutput Answer : {answer}\n\nStrictly return a jsonl with the keys (question, answer, topic). Every topic should be different. The answers should be in the exact same format as the original. The question and the answer should be different in content from the original data provided, and all questions should be diverse and different from each other. Do not answer in any other format. The response should be parsable as a jsonl.\n\"\"\"</code></pre></div><p>The goal of our use case was to fine-tune a model to generate a relevant and coherent answer based on a given reference document and a question. RAG is a popular technique used for such Q&amp;A tasks; however, one significant challenge with RAG is the potential for retrieving unrelated or irrelevant documents, which can lead to inaccurate responses. You can apply fine-tuning to guide the model to better focus on the relevance of the documents to the question instead of using the provided documents without context to answer the question.</p><p>Our dataset includes Q&amp;A pairs with reference documents regarding AWS services. Each sample has up to five reference documents as context, and a single-line question follows. The following table shows an example.</p><table border=\"1px\" cellpadding=\"10px\"><tbody><tr><td width=\"677\"><p>Step 1: Prepare to work with AWS CodeStar projects</p><p>In this step, you create an AWS CodeStar service role and an Amazon EC2 key pair, so that you can begin creating and working with AWS CodeStar projects. If you have used AWS CodeStar before, skip ahead to Step 2</p><p>Step 2: Create a Project in AWS CodeStar.</p><p>For this step, follow the instructions in Setting Up AWS CodeStar in the AWS CodeStar User Guide. Do not create a new AWS account, IAM user, or IAM group as part of those instructions. Use the ones you created or identified in Team Setup for AWS Cloud9. When you finish following those instructions, return to this topic.</p><p>Before you can start using AWS CodeStar, you must complete the following steps.</p><p>Step 1: Create an account</p><p>Step 2: Create the AWS CodeStar Service Role</p><p>Step 3: Configure the User’s IAM Permissions</p><p>Step 4: Create an Amazon EC2 Key Pair for AWS CodeStar Projects</p><p>Step 5: Open the AWS CodeStar Console</p><p>How Do I Get Started with AWS CodeStar?</p><p>To get started with AWS CodeStar:</p><p>Prepare to use AWS CodeStar by following the steps in Setting Up AWS CodeStar.</p><p>Experiment with AWS CodeStar by following the steps in the Getting Started with AWS CodeStar tutorial.</p><p>Share your project with other developers by following the steps in Add Team Members to an AWS CodeStar Project.</p><p>Integrate your favorite IDE by following the steps in Use an IDE with AWS CodeStar.</p><p>Step 2: Create a project in AWS CodeStar</p><p>In this step, you create a project in AWS CodeStar.</p><p>If you already have a project in AWS CodeStar you want to use, skip ahead to Step 3: Create an AWS Cloud9 Development Environment and Connect It to the Project.</p><p>For this step, follow the instructions in Create a Project in AWS CodeStar in the AWS CodeStar User Guide. In the AWS CodeStar create project wizard, when you get to the Setup tools page or Connect to your source repository page, choose Skip, and then return to this topic.</p><p>Create a Project in AWS CodeStar</p><p>You use the AWS CodeStar console to create a project. If you use a project template, it sets up the required resources for you. The template also includes sample code that you can use to start coding.</p><p>To create a project, sign in to the AWS Management Console with an IAM user that has the AWSCodeStarFullAccess policy or equivalent permissions. For more information, see Setting Up AWS CodeStar.</p><p>Note: You must complete the steps in Setting Up AWS CodeStar before you can complete the procedures in this topic.</p><p>Create a Project in AWS CodeStar (Console)</p><p>Create a Project in AWS CodeStar (AWS CLI)</p><p>Answer the following question to the best of your ability. Use and paraphrase the information in the context, if it answers the question. Otherwise, rely on your knowledge and memory.</p></td></tr><tr><td width=\"677\">How do I get started with AWS CodeStar?</td></tr><tr><td width=\"677\"><p>To get started with AWS CodeStar, follow these steps:</p><p>1.&nbsp;Prepare to work with AWS CodeStar projects:</p><p>a. Create an AWS CodeStar service role by following the instructions in “Setting Up AWS CodeStar” (Document 2) in the AWS CodeStar User Guide [1].</p><p>b. Create an Amazon EC2 key pair for AWS CodeStar projects, as described in the same guide [1].</p><p>2.&nbsp;Create a project in AWS CodeStar:</p><p>a. Sign in to the AWS Management Console with an IAM user that has the AWSCodeStarFullAccess policy or equivalent permissions [2].</p><p>b. In the AWS CodeStar console, select one of the available project templates, which will automatically provision all the required resources for your project [3].</p><p>c. Once your project is provisioned, you can see your running application from the Application endpoints tile [3].</p><p>3.&nbsp;Connect to the AWS CodeCommit source repository for your project:</p><p>a. Use the steps provided in the CodeStar console to connect to the AWS CodeCommit source repository for your project [3].</p><p>b. Begin coding and making changes to your project\\’s source code.</p><p>4.&nbsp;Track and manage changes in the release process:</p><p>a. Use the project dashboard to track and manage changes in the release process [3].</p><p>b. View the most recent project activity on the dashboard.</p><p>5.&nbsp;Share your project with other developers:</p><p>a. Follow the steps in “Add Team Members to an AWS CodeStar Project” to share your project with other developers [3].</p><p>6.&nbsp;Integrate your favorite IDE:</p><p>a. Follow the steps in “Use an IDE with AWS CodeStar” to integrate your preferred Integrated Development Environment (IDE) with AWS CodeStar [3].</p><p>[1] https://docs.aws.amazon.com/codestar/latest/userguide/setting-up.html</p><p>[2] https://docs.aws.amazon.com/codestar/latest/userguide/create-project.html</p><p>[3] https://docs.aws.amazon.com/codestar/latest/userguide/getting-started.html</p></td></tr></tbody></table><p>For data synthesis, we asked the model to generate three new Q&amp;A pairs per reference document. However, you can adjust the number as needed. The crucial part is to make the model think deeply about a variety of topics. Because the purpose of generating synthetic data is to enrich the training dataset, it’s more beneficial to have the model look at different parts of the documents and create Q&amp;A pairs with different topics than the original.</p><p>The following example shows how to generate synthetic data with the Amazon Bedrock InvokeModel API. We tested the preceding prompt with Anthropic’s Claude 3 Sonnet. If you want to test a different model, retrieve the corresponding model ID from <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-ids.html\" target=\"_blank\" rel=\"noopener\">Amazon Bedrock model IDs</a>, and replace the modelId variable in the function.</p><div><pre><code>import boto3\nimport json\n\nbedrock = boto3.client(service_name=\"bedrock-runtime\")\n\ndef generate_synthetic_data(document, question, answer):\n    \n    values = {\n        \"document\": document,\n        \"question\": question,\n        \"answer\": answer\n    }\n    \n    body = {\n        \"messages\": [{\n            \"role\": \"user\", \"content\": PROMPT.format(**values)\n        }],\n        \"anthropic_version\": \"bedrock-2023-05-31\",\n        \"max_tokens\": 2048,\n        \"temperature\" : 0.5\n    }\n    \n    response = bedrock.invoke_model(\n        body=json.dumps(body),\n        modelId=\"anthropic.claude-3-sonnet-20240229-v1:0\",\n        accept=\"application/json\",\n        contentType=\"application/json\"\n    )\n    \n    response_body = json.loads(response.get('body').read())\n    \n    return response_body['content'][0]['text']\n</code></pre></div><p>The preceding function returns three JSONL records in strings with question, answer, and topic as keys. The following parse_llm_output function loads the strings and uses regular expressions to retrieve the generated questions and answers. Then, the create_synthetic_samples function combines those two functionalities to produce the final synthetic training samples.</p><div><pre><code>import re\nimport pd\n\ndef parse_llm_output(jsonl_string):\n    \n    question_pattern = re.compile(r'\"question\":\\s*\"([^\"]+)\"')\n    answer_pattern = re.compile(r'\"answer\":\\s*\"(.*?)\"\\s*,\\s*\"topic\"') \n    questions = question_pattern.findall(jsonl_string)\n    answers = answer_pattern.findall(jsonl_string)\n    \n    return questions, answers\n\n\ndef create_synthetic_samples(row: pd.Series) -&gt; pd.DataFrame:\n\n    jsonl_string = generate_synthetic_data(row['document'], row['question'], row['answer'])\n    questions, answers = parse_llm_output(jsonl_string)\n    \n    return pd.DataFrame({\n        \"document\": [row['document']] * len(questions),\n        \"question\": questions,\n        \"answer\": answers\n    })\n\n\ndef to_customization_format(row):\n\n    msg = {\n        \"messages\": [\n            {\"role\": \"user\", \"content\": f\"{row['document']}\\n\\nQuestion: {row['question']}\"},\n            {\"role\": \"assistant\", \"content\": row['answer']}\n        ]\n    }\n    \n    return msg\n</code></pre></div><p>The following script combines all of the preceding functions and gives you the final training set with both original and synthetic samples. We convert the samples into the format required by the customization job using the to_customization_format function and save them as train.jsonl. Assume the input data is a CSV file with three columns: document, question, and answer.</p><div><pre><code>import pandas as pd\n\n# Load original training samples\noriginal_train = pd.read_csv(input_df_path)\n\n# Create synthetic training samples\nsynthetic_train = pd.concat(original_train.apply(create_synthetic_samples, axis=1).tolist())\n\n# Combine original and synthetic samples\nfinal_train_df = pd.concat([original_train, synthetic_train])\n\n# Convert to the format required by the customization job\nfinal_train = final_train_df.apply(to_customization_format, axis=1).tolist()\n\n# Write to JSONL file    \nwith open('train.jsonl', 'w') as file:\n    for item in final_train:\n        json.dump(item, file)\n        file.write('\\n')\n</code></pre></div><h2>Fine-tune using an Amazon Bedrock custom model</h2><p>Now that you have the synthetic data generated by the teacher model along with your original data, it’s time to train the student model. We fine-tune the student model using the Amazon Bedrock custom model functionality.</p><p>Model customization is the process of providing training data to an FM to improve its performance for specific use cases. Amazon Bedrock offers three model customization methods as of this writing:</p><ul></ul><p>You can create your own custom model using any of these methods through the Amazon Bedrock console or API. For more information on supported models and AWS Regions with various customization methods, please see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/custom-models.html\" target=\"_blank\" rel=\"noopener\">User guide for model customization</a>. In this section, we focus on how to fine-tune a model using the API.</p><p>To create a fine-tuning job in Amazon Bedrock, complete the following prerequisite steps:</p><ol><li>Upload the jsonl file to the training data bucket.</li><li>Make sure that you have created an IAM role, as described in the <a href=\"https://aws.amazon.com/blogs/machine-learning/fine-tune-llms-with-synthetic-data-for-context-based-qa-using-amazon-bedrock/#_Prerequisites\" target=\"_blank\" rel=\"noopener\">Prerequisites</a></li></ol><p>When these steps are complete, run the following code to submit a new fine-tuning job. In our use case, the student model was Anthropic’s Claude Instant 1.2. At the time of writing, Anthropic’s Claude 3 Haiku is generally available, and we recommend following the rest of the code using Anthropic’s Claude 3 Haiku. For the release announcement, see <a href=\"https://aws.amazon.com/about-aws/whats-new/2024/11/fine-tuning-anthropics-claude-3-haiku-amazon-bedrock/\" target=\"_blank\" rel=\"noopener\">Fine-tuning for Anthropic’s Claude 3 Haiku in Amazon Bedrock is now generally available</a>.</p><p>If you want to try different models, you must check the model provider’s terms of service yourself. Many providers restrict using their models to train competing models. For the latest model support information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/custom-model-supported.html\" target=\"_blank\" rel=\"noopener\">Supported Regions and models for model customization</a>, and replace baseModelIdentifier accordingly. Different models have different hyperparameters. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/custom-models-hp.html\" target=\"_blank\" rel=\"noopener\">Custom model hyperparameters</a>.</p><div><pre><code>import boto3\nimport json\nimport time\n\nbedrock = boto3.client(service_name='bedrock')\n    \n# Set parameters\ncustomizationType = \"FINE_TUNING\"\nbaseModelIdentifier = \"arn:aws:bedrock:us-east-1::foundation-model/anthropic.claude-instant-v1:2:100k\"\nroleArn = \"${customization-role-arn}\"\njobName = \"${customization-job-name}\"\ncustomModelName = \"${customization-model-name}\"\nhyperParameters = {\n    \"epochCount\": \"1\",\n    \"batchSize\": \"96\",\n    \"learningRateMultiplier\": \"0.5\",\n }\ntrainingDataConfig = {\"s3Uri\": \"s3://${training-bucket}/train.jsonl\"}\noutputDataConfig = {\"s3Uri\": \"s3://${output-bucket}/myOutputData\"}\n\n# Create job\nresponse_ft = bedrock.create_model_customization_job(\n    jobName=jobName, \n    customModelName=customModelName,\n    roleArn=roleArn,\n    baseModelIdentifier=baseModelIdentifier,\n    hyperParameters=hyperParameters,\n    trainingDataConfig=trainingDataConfig,\n    outputDataConfig=outputDataConfig\n)\n\njobArn = response_ft.get('jobArn')\n\n# Check job status\nwhile True:\n    status = bedrock.get_model_customization_job(jobIdentifier=jobArn).get('status')\n    if status != 'InProgress':\n        print(status)\n        break\n    else:\n        print(status)\n    time.sleep(30)\n</code></pre></div><p>When the status changes to , your fine-tuned student model is ready for use. To run an inference with this custom model, you need to purchase . A flexible option is available for custom models, which can be turned off when not in use and billed by the hour. A cost estimate is provided on the console prior to purchasing provisioned throughput.</p><p>On the Amazon Bedrock console, choose in the navigation pane. Select the model you fine-tuned and choose <strong>Purchase provisioned throughput</strong>.</p><p>The model name and type are automatically selected for you. Select  for . After you make this selection, the estimated cost is shown. If you’re okay with the pricing, choose .</p><p>When the Provisioned Throughput becomes available, retrieve the ARN of the provisioned custom model and run the inference:</p><div><pre><code>import boto3\nimport json\n\nbedrock = boto3.client(service_name=\"bedrock-runtime\")\n\ndef run_student_model(document, question):\n    \n    values = {\n        \"document\": document,\n        \"question\": question,\n    }\n    \n    body = {\n        \"messages\": [{\n            \"role\": \"user\", \"content\": PROMPT.format(**values)\n        }],\n        \"max_tokens\": 2048,\n        \"temperature\" : 0.5\n    }\n    \n    response = bedrock.invoke_model(\n        body=json.dumps(body),\n        modelId=\"${provisioned_model_arn}\",\n        accept=\"application/json\",\n        contentType=\"application/json\"\n    )\n    \n    response_body = json.loads(response.get('body').read())\n    \n    return response_body['content'][0]['text']\n</code></pre></div><p>In this section, we share our experiment results to provide data points on how the synthetic data generated by a teacher model can improve the performance of a student model. For evaluation methods, we used an LLM-as-a-judge approach, where a judge model compares responses from two different models and picks a better response. Additionally, we conducted a manual evaluation on a small subset to assess whether the LLM-as-a-judge and human judges have aligned preferences.</p><p>We carried out controlled experiments where we compared four different models as follows: 1,500 synthetic training samples for the 4 model were generated by Anthropic’s Claude 3 Sonnet, and we created three synthetic samples per one original reference document (3 samples * 500 original reference documents = 1,500 synthetic samples).</p><table border=\"1px\" cellpadding=\"10px\"><tbody><tr><td width=\"634\">Anthropic’s Claude Instant without any customization</td></tr><tr><td width=\"634\">Anthropic’s Claude Instant fine-tuned with 500 original training samples</td></tr><tr><td width=\"169\"></td><td width=\"634\">Anthropic’s Claude Instant fine-tuned with 2,000 original training samples</td></tr><tr><td width=\"169\"></td><td width=\"634\">Anthropic’s Claude Instant fine-tuned with 500 original training samples plus 1,500 synthetic training samples</td></tr></tbody></table><p>LLM output evaluation is an important step in developing generative AI applications, but it is expensive and takes considerable time if done manually. An alternative solution to systematically evaluate output quality in large volume is the LLM-as-a-judge approach, where an LLM is used to evaluate another LLM’s responses.</p><p>For our use case, we used Anthropic’s Claude 3 Sonnet and Meta Llama 3 70B as the judges. We asked the LLM judges to compare outputs from two different models and choose one over the other or state a tie. The following chart summarizes the judges’ decisions. Each number represents the percentage of times when the respective model was selected as providing a better answer, excluding tie cases. The test set contained 343 samples.</p><p>As shown in the preceding chart, the Anthropic’s Claude 3 Sonnet judge preferred the response from the fine-tuned model with synthetic examples over the Anthropic’s Claude Instant base model (84.8% preference) and the fine-tuned model with original 500 samples (72.3% preference). However, the judge concluded that the fine-tuned model with 2,000 original examples was preferred over the fine-tuned model with synthetic examples (32.3% preference). This aligns with the expectation that when large, high-quality original data is available, it’s better to use the large training data that accurately reflects the target data distribution.</p><p>The Meta Llama judge reached a similar conclusion. As shown in the preceding chart, it preferred the response from the fine-tuned model with synthetic samples over the Anthropic’s Claude Instant base model (75.6% preference) and the fine-tuned model with original 500 examples (76.4% preference), but the fine-tuned model with 2,000 original examples was the ultimate winner.</p><p>To complement the LLM-as-a-judge result, we conducted manual evaluation with two human judges. We asked the two human evaluators to perform the same pairwise comparison task as the LLM judge, but for 20 examples. The following chart summarizes the results.</p><p>As shown in the preceding chart, the two human evaluators reached a similar conclusion, reinforcing the LLM-as-a-judge result. The fine-tuned model with synthetic examples produced outputs that were more preferable than the Anthropic’s Claude Instant base model and the fine-tuned model with the original 500 examples; however, it didn’t outperform the fine-tuned model with the 2,000 original examples.</p><p>These comparative evaluation results from both the LLM judges and human judges strongly demonstrate the power and potential of using data synthesis when training data is scarce. Moreover, by using high-quality data from the teacher model, we can effectively train the student model, which is lightweight and cost-effective for deployment in a production environment.</p><h3>Amazon Bedrock evaluations</h3><p>Running LLM-as-a-judge and human evaluation has become much easier with Amazon Bedrock. Model evaluation on Amazon Bedrock allows you to evaluate, compare, and select the best FMs for your use case. Human evaluation workflows can use your own employees or an AWS-managed team as reviewers. For more information on how to set up a human evaluation workflow, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-evaluation-type-human.html\" target=\"_blank\" rel=\"noopener\">Creating your first model evaluation that uses human workers</a>. The latest feature, LLM-as-a-judge, is now in preview and allows you to assess multiple quality dimensions including correctness, helpfulness, and responsible AI criteria such as answer refusal and harmfulness. For step-by-step instructions, see <a href=\"https://aws.amazon.com/blogs/aws/new-rag-evaluation-and-llm-as-a-judge-capabilities-in-amazon-bedrock/\" target=\"_blank\" rel=\"noopener\">New RAG evaluation and LLM-as-a-judge capabilities in Amazon Bedrock</a>.</p><p>Make sure to delete the following resources to avoid incurring cost:</p><ul><li>Provisioned throughput for the custom model</li><li>The training_bucket and output_bucket S3 buckets</li></ul><p>In this post, we explored how to use Amazon Bedrock to generate synthetic training data using a large teacher language model and fine-tune a smaller student model with synthetic data. We provided instructions on generating synthetic data using the Amazon Bedrock InvokeModel API and fine-tuning the student model using an Amazon Bedrock custom model. Our evaluation results, based on both an LLM-as-a-judge approach and human evaluation, demonstrated the effectiveness of synthetic data in improving the student model’s performance when original training data is limited.</p><p>Although fine-tuning with a large amount of high-quality original data remains the ideal approach, our findings highlight the promising potential of synthetic data generation as a viable solution when dealing with data scarcity. This technique can enable more efficient and cost-effective model customization for domain-specific or specialized use cases.</p><p>If you’re interested in working with the AWS Generative AI Innovation Center and learning more about LLM customization and other generative AI use cases, visit <a href=\"https://aws.amazon.com/ai/generative-ai/innovation-center/\" target=\"_blank\" rel=\"noopener\">Generative AI Innovation Center</a>.</p><p> is a Deep Learning Architect at the AWS Generative AI Innovation Center, where she specializes in model customization and optimization. She has extensive hands-on experience in solving customers’ business use cases by utilizing generative AI as well as traditional AI/ML solutions. Sujeong holds a M.S. degree in Data Science from New York University.</p><p><strong><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/01/31/Arijit-Intro-2.jpg\" alt=\"\" width=\"100\" height=\"116\">Arijit Ghosh Chowdhury</strong> is a Scientist with the AWS Generative AI Innovation Center, where he works on model customization and optimization. In his role, he works on applied research in fine-tuning and model evaluations to enable GenAI for various industries. He has a Master’s degree in Computer Science from the University of Illinois at Urbana Champaign, where his research focused on question answering, search and domain adaptation.</p><p> is a Senior Applied Scientist at Amazon Generative AI Innovation Center where he helps expedite the variety of use cases of AWS customers. Before joining Amazon, Sungmin was a postdoctoral research fellow at Harvard Medical School. He holds Ph.D. in Computer Science from New York University. Outside of work, Sungmin enjoys hiking, reading and cooking.</p><p> is an Applied Scientist II at the AWS Generative AI Innovation Center, where she develops generative AI solutions for AWS customers. Her expertise encompasses designing and implementing innovative AI-driven and deep learning techniques, focusing on natural language processing, computer vision, multi-modal learning, and graph learning. Yiyue holds a Ph.D. in Computer Science from the University of Notre Dame, where her research centered on advanced machine learning and deep learning methodologies. Outside of work, she enjoys sports, hiking, and traveling.</p><p> is a Machine Learning Engineer at the AWS Generative AI Innovation Center, where he works on model customization and optimization for LLMs. He also builds tools to help his team tackle various aspects of the LLM development life cycle—including fine-tuning, benchmarking, and load-testing—that accelerating the adoption of diverse use cases for AWS customers. He holds an M.S. degree in Computer Science from UC Davis.</p><p> is a Senior Manager of Model Customization at the AWS Generative AI Innovation Center. Her team specializes in helping customers develop differentiating Generative AI solutions using their unique and proprietary data to achieve key business outcomes. She holds a Ph.D in Physics from the University of Iowa, with a focus on astronomical X-ray analysis and instrumentation development. Outside of work, she can be found hiking, mountain biking, and skiing around the mountains in Colorado.</p>","contentLength":28436,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Achieve ~2x speed-up in LLM inference with Medusa-1 on Amazon SageMaker AI","url":"https://aws.amazon.com/blogs/machine-learning/achieve-2x-speed-up-in-llm-inference-with-medusa-1-on-amazon-sagemaker-ai/","date":1739382093,"author":"Daniel Zagyva","guid":129,"unread":true,"content":"<p><em>This blog post is co-written with Moran Beladev, Manos Stergiadis, and Ilya Gusev from Booking.com.</em></p><p><a href=\"https://aws.amazon.com/what-is/large-language-model/\" target=\"_blank\" rel=\"noopener\">Large language models</a> (LLMs) have revolutionized the field of natural language processing with their ability to understand and generate humanlike text. Trained on broad, generic datasets spanning a wide range of topics and domains, LLMs use their parametric knowledge to perform increasingly complex and versatile tasks across multiple business use cases. Furthermore, companies are increasingly investing resources in customizing LLMs through few-shot learning and fine-tuning to optimize their performance for specialized applications.</p><p>However, the impressive performance of LLMs comes at the cost of significant computational requirements, driven by their large number of parameters and autoregressive decoding process which is sequential in nature. This combination makes achieving low latency a challenge for use cases such as real-time text completion, simultaneous translation, or conversational voice assistants, where subsecond response times are critical.</p><p>Researchers developed <a href=\"https://arxiv.org/abs/2401.10774\" target=\"_blank\" rel=\"noopener\">Medusa</a>, a framework to speed up LLM inference by adding extra heads to predict multiple tokens simultaneously. This post demonstrates how to use Medusa-1, the first version of the framework, to speed up an LLM by fine-tuning it on <a href=\"https://aws.amazon.com/sagemaker-ai/\" target=\"_blank\" rel=\"noopener\">Amazon SageMaker AI</a> and confirms the speed up with deployment and a simple load test. Medusa-1 achieves an inference speedup of around two times without sacrificing model quality, with the exact improvement varying based on model size and data used. In this post, we demonstrate its effectiveness with a 1.8 times speedup observed on a sample dataset.</p><h2>Introduction to Medusa and its benefits for LLM inference speed</h2><p>LLMs generate text in a sequential manner, which involves autoregressive sampling, with each new token conditional on the previous ones. Generating K tokens necessitates K sequential executions of the model. This token-by-token processing introduces an inherent latency and computational overhead because the model needs to perform a separate forward pass for each new token in the output sequence. The following diagram from <a href=\"https://www.researchgate.net/publication/371123751_Role-Play_with_Large_Language_Models\" target=\"_blank\" rel=\"noopener\">Role-Play with Large Language Models</a> illustrates this flow.</p><p>Speculative decoding tackles this challenge by using a smaller, faster draft model to generate multiple potential token continuations in parallel, which are then verified by a larger, more accurate target model. This parallelization speeds up text generation while maintaining the quality of the target model because the verification task is faster than autoregressive token generation. For a detailed explanation of the concept, refer to the paper <a href=\"https://arxiv.org/abs/2302.01318\" target=\"_blank\" rel=\"noopener\">Accelerating Large Language Model Decoding with Speculative Sampling</a>. The speculative decoding technique can be implemented using the <a href=\"https://aws.amazon.com/blogs/machine-learning/achieve-up-to-2x-higher-throughput-while-reducing-costs-by-50-for-generative-ai-inference-on-amazon-sagemaker-with-the-new-inference-optimization-toolkit-part-1/\" target=\"_blank\" rel=\"noopener\">inference optimization toolkit</a> on <a href=\"https://aws.amazon.com/sagemaker-ai/jumpstart/\" target=\"_blank\" rel=\"noopener\">Amazon SageMaker Jumpstart</a>.</p><p>The paper <a href=\"https://arxiv.org/abs/2401.10774\" target=\"_blank\" rel=\"noopener\">Medusa: Simple LLM Inference Acceleration Framework with Multiple Decoding Heads</a> introduced Medusa as an alternative to speculative decoding. Instead of adding a separate draft model, it adds extra decoding heads to the LLM that generate candidate continuations simultaneously. These candidates are then evaluated in parallel using a tree-based attention mechanism. This parallel processing reduces the number of sequential steps needed, leading to faster inference times. The main advantage of Medusa over speculative decoding is that it eliminates the need to acquire and maintain a separate draft model while achieving higher speedups. For example, when tested on the <a href=\"https://arxiv.org/abs/2402.14762\" target=\"_blank\" rel=\"noopener\">MT-Bench dataset</a>, the paper reports that Medusa-2 (the second version of Medusa) speeds up inference time by 2.8 times. This outperforms speculative decoding, which only manages to speed up inference time by 1.5 times on the same dataset.</p><p>The Medusa framework currently supports Llama and Mistral models. Although it offers significant speed improvements, it does come with a memory trade-off (similar to speculative decoding). For instance, adding five Medusa heads to the 7-billion-parameter Mistral model increases the total parameter count by 750 million (150 million per head), which means these additional parameters must be stored in GPU memory, leading to a higher memory requirement. However, in most cases, this increase doesn’t necessitate switching to a higher GPU memory instance. For example, you can still use an  instance with 24 GB of GPU memory to host your 7-billion-parameter Llama or Mistral model with extra Medusa heads.</p><p>Training Medusa heads requires additional development time and computational resources, which should be factored into project planning and resource allocation. Another important limitation to mention is that the current framework, when deployed on an Amazon SageMaker AI endpoint, only supports a batch size of one—a configuration typically used for low-latency applications.</p><p>The following diagram from the original Medusa paper authors’ <a href=\"https://github.com/FasterDecoding/Medusa\" target=\"_blank\" rel=\"noopener\">FasterDecoding repository</a> gives a visual Medusa framework overview.</p><p>There are two main variants of Medusa:</p><ol><li> – Requires a two-stage approach where you first fine-tune your LLM and then add Medusa heads and train them on top of your frozen fine-tuned LLM</li><li> – Introduced later as an improvement, fine-tunes both the additional heads and the backbone LLM parameters together, enabling potentially even further latency speedups</li></ol><p>The Medusa paper reports that across models of varying sizes, you can achieve inference speedups of around two times for Medusa-1 and around three times for Medusa-2. With Medusa-1, the predictions are identical to those of the originally fine-tuned LLM. In contrast, with Medusa-2, we might observe slightly different results compared to simple fine-tuning of the LLM because both the heads and the backbone LLM parameters are updated together. In this post, we focus on Medusa-1.</p><p>We cover the following steps in our solution:</p><ul><li>Load and prepare the dataset</li><li>Fine-tune an LLM using a SageMaker AI training job</li><li>Train Medusa heads on top of a frozen fine-tuned LLM using a SageMaker AI training job</li><li>Deploy the fine-tuned LLM with Medusa heads on a SageMaker AI endpoint</li><li>Demonstrate LLM inference speedup</li></ul><p>By following this solution, you can accelerate LLM inference in your applications, leading to faster response times and improved user experience.</p><p>To build the solution yourself, there are the following prerequisites:</p><h3>Load and prepare the dataset</h3><p>Now that you have cloned the <a href=\"https://github.com/aws-samples/speedup-llm-inference-with-medusa-framework-on-amazon-sagemaker\">GitHub repository</a> and opened the  notebook, you will load and prepare the dataset in the notebook. We encourage you to read this post while running the code in the notebook. For this post, we use a dataset called <a href=\"https://huggingface.co/datasets/b-mc2/sql-create-context\" target=\"_blank\" rel=\"noopener\">sql-create-context</a>, which contains samples of natural language instructions, schema definitions and the corresponding SQL query. It contains 78,577 examples of natural language queries, SQL CREATE TABLE statements, and SQL queries answering the question using the CREATE statement as context. For demonstration purposes, we select 3,000 samples and split them into train, validation, and test sets.</p><p>You need to run the “Load and prepare the dataset” section of the  to prepare the dataset for fine-tuning. We also included a data exploration script to analyze the length of input and output tokens. After data exploration, we prepare the train, validation, and test sets and upload them to <a href=\"https://aws.amazon.com/s3/\" target=\"_blank\" rel=\"noopener\">Amazon Simple Storage Service</a> (Amazon S3).</p><h3>Fine-tune an LLM using SageMaker AI training job</h3><p>We use the <a href=\"https://huggingface.co/HuggingFaceH4/zephyr-7b-beta\" target=\"_blank\" rel=\"noopener\">Zephyr 7B β</a> model as our backbone LLM. Zephyr is a series of language models trained to act as helpful assistants, and Zephyr 7B β is a fine-tuned version of <a href=\"https://huggingface.co/mistralai/Mistral-7B-v0.1\" target=\"_blank\" rel=\"noopener\">Mistral-7B-v0.1</a>, trained on a mix of publicly available and synthetic datasets using <a href=\"https://arxiv.org/abs/2305.18290\" target=\"_blank\" rel=\"noopener\">Direct Preference Optimization</a>.</p><p>To launch a SageMaker AI training job, we need to use the PyTorch or Hugging Face estimator. SageMaker AI starts and manages all the necessary <a href=\"https://aws.amazon.com/ec2/\" target=\"_blank\" rel=\"noopener\">Amazon Elastic Compute Cloud</a> (Amazon EC2) instances for us, supplies the appropriate containers, downloads data from our S3 bucket to the container and uploads and runs the specified training script, in our case . We select the hyperparameters based on the <a href=\"https://arxiv.org/pdf/2305.14314\" target=\"_blank\" rel=\"noopener\">QLoRA paper</a>, but we encourage you to experiment with your own combinations. To expedite the execution of this code, we set the number of epochs to 1. However, for better results, it’s generally recommended to set the number of epochs to at least 2 or 3.</p><div><pre><code>from sagemaker.pytorch.estimator import PyTorch\nfrom sagemaker.debugger import TensorBoardOutputConfig\nimport time\nimport os\n\ndef get_current_time():\n    return time.strftime(\"%Y-%m-%d-%H-%M-%S\", time.localtime())\n\ndef create_estimator(hyperparameters_dict, job_name, role, sess, train_scipt_path):\n    metric=[\n        {\"Name\": \"loss\", \"Regex\": r\"'loss':\\s*([0-9.]+)\"},\n        {\"Name\": \"epoch\", \"Regex\": r\"'epoch':\\s*([0-9.]+)\"},\n    ]\n\n    tensorboard_s3_output_path = os.path.join(\n       \"s3://\", sess.default_bucket(), job_name, 'tensorboard'\n    )\n    print(\"Tensorboard output path:\", tensorboard_s3_output_path)\n\n    tensorboard_output_config = TensorBoardOutputConfig(\n        s3_output_path=tensorboard_s3_output_path,\n        container_local_output_path=hyperparameters_dict['logging_dir']\n    )\n    estimator = PyTorch(\n        sagemaker_session    = sess,\n        entry_point          = train_scipt_path,    # train script\n        source_dir           = 'train',      # directory which includes all the files needed for training\n        instance_type        = 'ml.g5.4xlarge',   # instances type used for the training job, \"local_gpu\" for local mode\n        metric_definitions   = metric,\n        instance_count       = 1,                 # the number of instances used for training\n        role                 = role,              # Iam role used in training job to access AWS ressources, e.g. S3\n        volume_size          = 300,               # the size of the EBS volume in GB\n        framework_version      = '2.1.0',             # the pytorch_version version used in the training job\n        py_version           = 'py310',           # the python version used in the training job\n        hyperparameters      =  hyperparameters_dict,  # the hyperparameters passed to the training job\n        disable_output_compression = True,        # not compress output to save training time and cost\n        tensorboard_output_config = tensorboard_output_config\n    )\n    return estimator\n    \n# hyperparameters, which are passed into the training job\nsft_hyperparameters = {\n  ### SCRIPT PARAMETERS ###\n  'train_dataset_path': '/opt/ml/input/data/train/train_dataset.json', # path where sagemaker will save training dataset\n  'eval_dataset_path': '/opt/ml/input/data/eval/eval_dataset.json', # path where sagemaker will save evaluation dataset\n  'model_id': model_id,\n  'max_seq_len': 256,                               # max sequence length for model and packing of the dataset\n  'use_qlora': True,                                 # use QLoRA model\n  ### TRAINING PARAMETERS ###\n  'num_train_epochs': 1,                             # number of training epochs\n  'per_device_train_batch_size': 1,                  # batch size per device during training\n  'gradient_accumulation_steps': 16,                  # number of steps before performing a backward/update pass\n  'gradient_checkpointing': True,                    # use gradient checkpointing to save memory\n  'optim': \"adamw_8bit\",                             # use fused adamw 8bit optimizer\n  'logging_steps': 15,                               # log every 10 steps\n  'save_strategy': \"steps\",                          # save checkpoint every epoch\n  'save_steps': 15,\n  'save_total_limit': 2,\n  'eval_strategy': \"steps\",\n  'eval_steps': 15,\n  'learning_rate': 1e-4,                             # learning rate, based on QLoRA paper\n  'bf16': True,                                      # use bfloat16 precision\n  'max_grad_norm': 10,                              # max gradient norm based on QLoRA paper\n  'warmup_ratio': 0.03,                              # warmup ratio based on QLoRA paper\n  'lr_scheduler_type': \"constant\",                   # use constant learning rate scheduler\n  'output_dir': '/opt/ml/checkpoints/',              # Temporary output directory for model checkpoints\n  'merge_adapters': True,                            # merge LoRA adapters into model for easier deployment\n  'report_to': \"tensorboard\",                        # report metrics to tensorboard\n  'logging_dir': \"/opt/ml/output/tensorboard\"        # tensorboard logging directory\n}\n \nsft_job_name = f\"sft-qlora-text-to-sql-{get_current_time()}\"\ndata = {\n    'train': train_dataset_path,\n    'eval': eval_dataset_path\n}\n\nsft_estimator = create_estimator(sft_hyperparameters, sft_job_name, role, sess, \"fine_tune_llm.py\")\n\nsft_estimator.fit(job_name=sft_job_name, inputs=data, wait=False)</code></pre></div><p>When our training job has completed successfully after approximately 1 hour, we can use the fine-tuned model artifact for the next step, training the Medusa heads on top of it. To visualize the training metrics in Tensorboard, you can follow the guidance in this documentation: <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/debugger-htb-access-tb-data.html\" target=\"_blank\" rel=\"noopener\">Load and visualize output tensors using the TensorBoard application</a></p><h3>Train Medusa heads on top of frozen fine-tuned LLM using a SageMaker AI training job</h3><p>For training Medusa heads, we can reuse the functions previously mentioned to launch the training job. We selected hyperparameters based on a combination of what the Medusa paper reported and what we found to be best performing after a few experiments. We set the number of Medusa heads to 5 and used the 8-bit AdamW optimizer, as recommended by the paper. For simplicity, we maintained a constant learning rate of 1e-4 with a constant scheduler, similar to the previous fine-tuning step. Although the paper recommends an increased learning rate and a cosine scheduler, we found that our chosen combination of hyperparameters performed well on this dataset. However, we encourage you to experiment with your own hyperparameter settings to potentially achieve even better results.</p><div><pre><code># hyperparameters, which are passed into the training job\nmedusa_hyperparameters = {\n  ### SCRIPT PARAMETERS ###\n  'train_dataset_path': '/opt/ml/input/data/train/train_dataset.json', # path where sagemaker will save training dataset\n  'eval_dataset_path': '/opt/ml/input/data/eval/eval_dataset.json', # path where sagemaker will save evaluation dataset\n  'model_path': '/opt/ml/input/data/fine-tuned-model/',\n  'max_seq_len': 256,                               # max sequence length for model and packing of the dataset\n  'medusa_num_heads': 5,\n  ### TRAINING PARAMETERS ###\n  'num_train_epochs': 3,                             # number of training epochs\n  'per_device_train_batch_size': 1,                  # batch size per device during training\n  'gradient_accumulation_steps': 16,                  # number of steps before performing a backward/update pass\n  'gradient_checkpointing': True,                    # use gradient checkpointing to save memory\n  'optim': \"adamw_8bit\",                             # use fused adamw 8bit optimizer\n  'logging_steps': 15,                               # log every 10 steps\n  'save_strategy': \"steps\",                          # save checkpoint every epoch\n  'save_steps': 15,\n  'save_total_limit':2,\n  'eval_strategy': \"steps\",\n  'eval_steps': 15,\n  'learning_rate': 1e-4,                             # learning rate\n  'bf16': True,                                      # use bfloat16 precision\n  'max_grad_norm': 10,                              # max gradient norm based on QLoRA paper\n  'warmup_ratio': 0.03,                              # warmup ratio based on QLoRA paper\n  'lr_scheduler_type': \"constant\",                   # use constant learning rate scheduler\n  'output_dir': '/opt/ml/checkpoints/',              # Temporary output directory for model checkpoints\n  'report_to': \"tensorboard\",                        # report metrics to tensorboard\n  'logging_dir': \"/opt/ml/output/tensorboard\"        # tensorboard logging directory\n}\n\nmedusa_train_job_name = f\"medusa-text-to-sql-{get_current_time()}\"\ndata = {\n    'train': train_dataset_path,\n    'eval': eval_dataset_path,\n    'fine-tuned-model': fine_tuned_model_path\n}\n\nmedusa_estimator = create_estimator(medusa_hyperparameters, medusa_train_job_name, role, sess, \"train_medusa_heads.py\")\n\nmedusa_estimator.fit(job_name=medusa_train_job_name, inputs=data, wait=False)</code></pre></div><p>We found that after 3 epochs, the evaluation loss of Medusa heads was converging, which can be observed in the TensorBoard graph in the following image.</p><p>Besides the hyperparameters, the main difference is that we pass  as the training entrypoint, where we first add Medusa heads, then freeze the fine-tuned LLM, and we create custom MedusaSFTTrainer class, which is a subclass of the transformers SFTTrainer.</p><div><pre><code># Add medusa heads and freeze base model\nadd_medusa_heads(\n    model,\n    medusa_num_heads=script_args.medusa_num_heads,\n)\nfreeze_layers(model)\nmodel.config.torch_dtype = torch_dtype\nmodel.config.use_cache = False\n\nlogger.info(\"Finished loading model and medusa heads\")\n\ntokenizer = AutoTokenizer.from_pretrained(script_args.model_path, use_fast=True)\ntokenizer.pad_token = tokenizer.eos_token\n\n################\n# Training\n################\ntrainer = MedusaSFTTrainer(\n    model=model,\n    args=training_args,\n    train_dataset=train_dataset,\n    eval_dataset=eval_dataset,\n    max_seq_length=script_args.max_seq_length,\n    tokenizer=tokenizer,\n    dataset_kwargs={\n        \"add_special_tokens\": False,  # We template with special tokens\n        \"append_concat_token\": False,  # No need to add additional separator token\n    },\n    medusa_num_heads=script_args.medusa_num_heads,\n    medusa_heads_coefficient=script_args.medusa_heads_coefficient,\n    medusa_decay_coefficient=script_args.medusa_decay_coefficient,\n    medusa_scheduler=script_args.medusa_scheduler,\n    train_only_medusa_heads=script_args.train_only_medusa_heads,\n    medusa_lr_multiplier=script_args.medusa_lr_multiplier\n)\ntrainer.train()</code></pre></div><p>In the  function, we add the residual blocks of the Medusa heads, and also override the forward pass for our model to make sure not to train the frozen backbone LLM:</p><div><pre><code>def add_medusa_heads(\n    model,\n    medusa_num_heads,\n):\n    \"\"\"\n    Args:\n        model (nn.Module): The base language model to be used.\n        medusa_num_heads (int, optional): Number of additional tokens to predict\n    \"\"\"\n    hidden_size = model.lm_head.weight.shape[-1]\n    vocab_size = model.lm_head.weight.shape[0]\n    model.config.medusa_num_layers = 1\n    model.config.medusa_num_heads = medusa_num_heads\n    model.medusa_num_heads = medusa_num_heads\n    # Create a list of Medusa heads\n    model.medusa_heads = nn.ModuleList(\n        [\n            nn.Sequential(\n                ResBlock(hidden_size),\n                nn.Linear(hidden_size, vocab_size, bias=False),\n            )\n            for _ in range(medusa_num_heads)\n        ]\n    )\n\n    # Ensure medusa_head's dtype and device align with the base_model\n    model.medusa_heads.to(model.dtype).to(model.device)\n    logger.info(f\"Loading medusa heads in {str(model.dtype)} to device {model.device}\")\n\n    for i in range(medusa_num_heads):\n        # Initialize the weights of each medusa_head using the base model's weights\n        model.medusa_heads[i][-1].weight.data[:] = model.lm_head.weight.data[:]\n\n    def forward(\n        self,\n        input_ids: torch.LongTensor = None,\n        attention_mask: Optional[torch.Tensor] = None,\n        position_ids: Optional[torch.LongTensor] = None,\n        past_key_values: Optional[List[torch.FloatTensor]] = None,\n        inputs_embeds: Optional[torch.FloatTensor] = None,\n        labels: Optional[torch.LongTensor] = None,\n        use_cache: Optional[bool] = None,\n        output_attentions: Optional[bool] = None,\n        output_hidden_states: Optional[bool] = None,\n        return_dict: Optional[bool] = None,\n        train_only_medusa_heads: bool = False,\n    ):\n        \"\"\"Forward pass of the MedusaModel.\n        Returns:\n            torch.Tensor: A tensor containing predictions from all Medusa heads.\n            (Optional) Original predictions from the base model's LM head.\n        \"\"\"\n        maybe_grad = torch.no_grad() if train_only_medusa_heads else nullcontext()\n        with maybe_grad:\n            outputs = self.model(\n                input_ids=input_ids,\n                attention_mask=attention_mask,\n                position_ids=position_ids,\n                past_key_values=past_key_values,\n                inputs_embeds=inputs_embeds,\n                use_cache=use_cache,\n                output_attentions=output_attentions,\n                output_hidden_states=output_hidden_states,\n                return_dict=return_dict,\n            )\n            hidden_states = outputs[0]\n            medusa_logits = [self.lm_head(hidden_states)]\n        for i in range(self.medusa_num_heads):\n            medusa_logits.append(self.medusa_heads[i](hidden_states))\n        return torch.stack(medusa_logits, dim=0)\n\n    model.forward = types.MethodType(forward, model)</code></pre></div><p>After the model training is finished (which takes 1 hour), we prepare the model artefacts for deployment and upload it to Amazon S3. Your final model artifact contains both the original fine-tuned model from the previous step under the  prefix and the trained Medusa heads in a file named .</p><h3>Deploy the fine-tuned LLM with Medusa heads on a SageMaker AI endpoint</h3><p>First, we create a SageMaker AI HuggingFaceModel object and then deploy the model to an endpoint with the following function:</p><div><pre><code>import json\nfrom sagemaker.huggingface import HuggingFaceModel, get_huggingface_llm_image_uri\n\n\ndef deploy_model(endpoint_name, instance_type, model_s3_path=None, hf_model_id=None):\n    llm_image = get_huggingface_llm_image_uri(\n      \"huggingface\",\n      version=\"2.2.0\",\n      session=sess,\n    )\n\n    print(f\"llm image uri: {llm_image}\")\n\n    model_data = None\n    if model_s3_path:\n        model_data = {'S3DataSource': {'S3Uri': model_s3_path, 'S3DataType': 'S3Prefix', 'CompressionType': 'None'}}\n        hf_model_id = \"/opt/ml/model\"\n    else:\n        assert hf_model_id, \"You need to provide either pretrained HF model id, or S3 model data to deploy\"\n    config = {\n      'HF_MODEL_ID': hf_model_id,  # path to where sagemaker stores the model\n      'SM_NUM_GPUS': json.dumps(1),  # Number of GPU used per replica\n      'MAX_INPUT_LENGTH': json.dumps(1024),  # Max length of input text\n      'MAX_TOTAL_TOKENS': json.dumps(2048),  # Max length of the generation (including input text)\n    }\n\n    llm_model = HuggingFaceModel(\n      name=endpoint_name,\n      role=role,\n      image_uri=llm_image,\n      model_data=model_data,\n      env=config\n    )\n\n    deployed_llm = llm_model.deploy(\n      endpoint_name=endpoint_name,\n      initial_instance_count=1,\n      instance_type=instance_type,\n      container_startup_health_check_timeout=300,\n    )\n    return deployed_llm</code></pre></div><p>We deploy three LLMs on three SageMaker AI endpoints:</p><ol><li>Base LLM which isn’t fine-tuned</li><li>The LLM that we fine-tuned</li><li>The fine-tuned LLM that also has trained Medusa heads</li></ol><p>You can deploy the three models in parallel by using a function that we included in the notebook, or you can deploy the models one by one by running the code below:</p><div><pre><code>base_deployed_llm = deploy_model( f\"base-{get_current_time()}\", instance_type=\"ml.g5.4xlarge\", model_s3_path=None, hf_model_id=model_id )\nsft_deployed_llm = deploy_model( f\"sft-{get_current_time()}\", instance_type=\"ml.g5.4xlarge\", model_s3_path=fine_tuned_model_path )\nmedusa_deployed_llm = deploy_model( f\"medusa-{get_current_time()}\", instance_type=\"ml.g5.4xlarge\", model_s3_path=medusa_trained_model_path )\n</code></pre></div><p>After the status for each endpoint becomes , which should take around 15 minutes, we can invoke them for inference. We send the following input:</p><div><pre><code>“You are a text to SQL query translator. Users will ask you questions in English and you will generate a SQL query based on the provided SCHEMA. SCHEMA: CREATE TABLE table_name_32 (time VARCHAR, heat VARCHAR, name VARCHAR)\nWhat was Liu Limin's time in heat 4?“</code></pre></div><p>We can observe the following responses:</p><ol><li>The base LLM response contains extra words that aren’t needed:</li></ol><div><pre><code>“To retrieve the time of Liu Limin in heat 4 based on the provided SCHEMA, we need to write a SQL query. Since the table name is not provided, let 's assume it's \"my_table\".  Assuming the table has a primary key (which is not mentioned in the SCHEMA), we can join the table with itself to compare the heat and name of Liu Limin in heat 4 with all the records in the table.  Here's the SQL query:  ``sql SELECT t1.time FROM my_table t1 JOIN my_table t2 ON t1.name = t2.name AND t2.heat = 4 WHERE t1.name = 'Liu Limin' AND t1.heat &lt;&gt; 4; `  Explanation:  1. We're selecting the time` column from the first table (t1) in the FROM clause. 2. We're joining the table with itself (my_table t1 JOIN my_table t2) to compare the name and heat of Liu Limin in heat 4 with all the records in the table. 3. We're filtering the results using the WHERE clause. We're selecting only the records where the name is 'Liu Limin' and the heat is not equal to 4 (i.e., not heat 4). This is to ensure that we're selecting the time of Liu Limin in heat 3.  Note: This query assumes that the table has a unique primary key. If the table doesn't have a primary key, you may need to add additional conditions to the JOIN and WHERE clauses to ensure that we're selecting the correct records.“</code></pre></div><ol start=\"2\"><li>The fine-tuned LLM response is improved significantly, and contains only the required output:</li></ol><div><pre><code>'SELECT time FROM table_name_32 WHERE heat = 4 AND name = \"liu limin\"'</code></pre></div><ol start=\"3\"><li>The fine-tuned LLM with trained Medusa heads provides the exact same response as the fine-tuned model, demonstrating that Medusa-1, by design, maintains the output (quality) of the original model:</li></ol><div><pre><code>'SELECT time FROM table_name_32 WHERE heat = 4 AND name = \"liu limin\"'</code></pre></div><h3>Demonstrate LLM inference speedup</h3><p>To measure the inference speed improvements, we compare the response times of the deployed fine-tuned LLM and the fine-tuned LLM with Medusa heads on 450 test observations with the following code:</p><div><pre><code>import time\nimport numpy as np\nfrom tqdm import tqdm\n\ndef request(sample, deployed_llm):\n    prompt = tokenizer.apply_chat_template(sample, tokenize=False, add_generation_prompt=True)\n    outputs = deployed_llm.predict({\n      \"inputs\": prompt,\n      \"parameters\": {\n        \"max_new_tokens\": 512,\n        \"do_sample\": False,\n        \"return_full_text\": False,\n      }\n    })\n    return {\"role\": \"assistant\", \"content\": outputs[0][\"generated_text\"].strip()}\n\ndef predict(deployed_llm, test_dataset):\n    predicted_answers = []\n    latencies = []\n\n    for sample in tqdm(test_dataset):\n        start_time = time.time()\n        predicted_answer = request(sample[\"messages\"][:2], deployed_llm)\n        end_time = time.time()\n\n        latency = end_time - start_time\n        latencies.append(latency)\n        predicted_answers.append(predicted_answer)\n\n    # Calculate p90 and average latencies\n    p90_latency = np.percentile(latencies, 90)\n    avg_latency = np.mean(latencies)\n\n    print(f\"P90 Latency: {p90_latency:.2f} seconds\")\n    print(f\"Average Latency: {avg_latency:.2f} seconds\")\n\n    return predicted_answers</code></pre></div><p>First, we run predictions using the fine-tuned LLM:</p><div><pre><code>sft_predictions = predict(sft_deployed_llm, test_dataset)\nP90 Latency: 1.28 seconds\nAverage Latency: 0.95 seconds</code></pre></div><p>Then, we run predictions using the fine-tuned LLM with Medusa heads:</p><div><pre><code>medusa_predictions = predict(medusa_deployed_llm, test_dataset)\nP90 Latency: 0.80 seconds\nAverage Latency: 0.53 seconds</code></pre></div><p>The prediction runs should take around 8 and 4 minutes respectively. We can observe that the average latency decreased from 950 to 530 milliseconds, which is an improvement of 1.8 times. You can achieve even higher improvements if your dataset contains longer inputs and outputs. In our dataset, we only had an average of 18 input tokens and 30 output tokens.</p><p>We want to once again highlight that, with this technique, the output quality is fully maintained, and all the prediction outputs are the same. The model responses for the test set of 450 observations are the same for both with Medusa heads and without Medusa heads:</p><div><pre><code>match_percentage = sum(a[\"content\"] == b[\"content\"] for a, b in zip(sft_predictions, medusa_predictions)) / len(sft_predictions) * 100\nprint(f\"Predictions with the fine-tuned model with medusa heads are the same as without medusa heads: {match_percentage:.2f}% of test set \")\n\nPredictions with fine-tuned model with medusa heads are the same as without medusa heads: 100.00% of test set </code></pre></div><p>You might notice in your run that a few observations aren’t exactly matching, and you might get a 99% match due to small errors in floating point operations caused by optimizations on GPUs.</p><p>At the end of this experiment, don’t forget to delete the SageMaker AI endpoints you created:</p><div><pre><code>base_deployed_llm.delete_model()\nbase_deployed_llm.delete_endpoint()\nsft_deployed_llm.delete_model()\nsft_deployed_llm.delete_endpoint()\nmedusa_deployed_llm.delete_model()\nmedusa_deployed_llm.delete_endpoint()</code></pre></div><p>In this post, we demonstrated how to fine-tune and deploy an LLM with Medusa heads using the Medusa-1 technique on Amazon SageMaker AI to accelerate LLM inference. By using this framework and SageMaker AI scalable infrastructure, we showed how to achieve up to twofold speedups in LLM inference while maintaining model quality. This solution is particularly beneficial for applications requiring low-latency text generation, such as customer service chat assistants, content creation, and recommendation systems.</p><p>As a next step, you can explore fine-tuning your own LLM with Medusa heads on your own dataset and benchmark the results for your specific use case, using the provided <a href=\"https://github.com/aws-samples/speedup-llm-inference-with-medusa-framework-on-amazon-sagemaker\" target=\"_blank\" rel=\"noopener\">GitHub repository</a>.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/05/ml_17442_dzagyva.jpg\" alt=\"\" width=\"100\" height=\"133\"> is a Senior ML Engineer at AWS Professional Services. He specializes in developing scalable, production-grade machine learning solutions for AWS customers. His experience extends across different areas, including natural language processing, generative AI and machine learning operations.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/05/ml_17442_adokic.jpg\" alt=\"\" width=\"100\" height=\"129\"> is a Senior Data Scientist at AWS Professional Services. She enjoys supporting customers to build innovative AI/ML solutions on AWS and she is excited about business transformations through the power of data.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/05/ml_17442_mbeladev.png\" alt=\"\" width=\"100\" height=\"100\"> is a Senior ML Manager at Booking.com. She is leading the content intelligence track which is focused on building, training and deploying content models (computer vision, NLP and generative AI) using the most advanced technologies and models. Moran is also a PhD candidate, researching applying NLP models on social graphs.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/05/ml_17442_mstergiadis.jpg\" alt=\"\" width=\"100\" height=\"100\"> is a Senior ML Scientist at Booking.com. He specializes in generative NLP and has experience researching, implementing and deploying large deep learning models at scale.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/05/ml_17442_igusev.jpg\" alt=\"\" width=\"100\" height=\"158\"> is a Senior Machine Learning Engineer at Booking.com. He leads the development of the several LLM systems inside Booking.com. His work focuses on building production ML systems that help millions of travelers plan their trips effectively.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/05/ml_17442_lvandermaas-727x1024-1.jpg\" alt=\"\" width=\"100\" height=\"141\"> is a Machine Learning Engineer at AWS Professional Services. He works closely with customers building their machine learning solutions on AWS, specializes in natural language processing, experimentation and responsible AI, and is passionate about using machine learning to drive meaningful change in the world.</p>","contentLength":31295,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"LLM-as-a-judge on Amazon Bedrock Model Evaluation","url":"https://aws.amazon.com/blogs/machine-learning/llm-as-a-judge-on-amazon-bedrock-model-evaluation/","date":1739381817,"author":"Adewale Akinfaderin","guid":128,"unread":true,"content":"<p>The evaluation of large language model (LLM) performance, particularly in response to a variety of prompts, is crucial for organizations aiming to harness the full potential of this rapidly evolving technology. The introduction of an  framework represents a significant step forward in simplifying and streamlining the model evaluation process. This approach allows organizations to assess their AI models’ effectiveness using pre-defined metrics, making sure that the technology aligns with their specific needs and objectives. By adopting this method, companies can more accurately gauge the performance of their AI systems, making informed decisions about model selection, optimization, and deployment. This not only enhances the reliability and efficiency of AI applications, but also contributes to a more strategic and informed approach to technology adoption within the organization.</p><p><a href=\"https://aws.amazon.com/bedrock\" target=\"_blank\" rel=\"noopener\">Amazon Bedrock</a>, a fully managed service offering high-performing foundation models from leading AI companies through a single API, has recently introduced two significant evaluation capabilities: <a href=\"https://aws.amazon.com/blogs/aws/new-rag-evaluation-and-llm-as-a-judge-capabilities-in-amazon-bedrock/\" target=\"_blank\" rel=\"noopener\">LLM-as-a-judge under Amazon Bedrock Model Evaluation and RAG evaluation for Amazon Bedrock Knowledge Bases</a>. Both features use the LLM-as-a-judge technique behind the scenes but evaluate different things. This blog post explores LLM-as-a-judge on Amazon Bedrock Model Evaluation, providing comprehensive guidance on feature setup, evaluating job initiation through both the console and Python SDK and APIs, and demonstrating how this innovative evaluation feature can enhance generative AI applications across multiple metric categories including quality, user experience, instruction following, and safety.</p><p>Before we explore the technical aspects and implementation details, let’s examine the key features that make LLM-as-a-judge on Amazon Bedrock Model Evaluation particularly powerful and distinguish it from traditional evaluation methods. Understanding these core capabilities will help illuminate why this feature represents a significant advancement in AI model evaluation.</p><h2>Key features of LLM-as-a-judge</h2><ol><li><strong>Automated intelligent evaluation</strong>: LLM-as-a-judge uses pre-trained models to evaluate responses automatically, providing human-like evaluation quality with up to 98% cost savings. The system dramatically reduces evaluation time from weeks to hours while maintaining consistent evaluation standards across large datasets.</li><li><strong>Comprehensive metric categories</strong>: The evaluation system covers four key metric areas: quality assessment (correctness, completeness, faithfulness), user experience (helpfulness, coherence, relevance), instruction compliance (following instructions, professional style), and safety monitoring (harmfulness, stereotyping, refusal handling).</li><li>: The feature integrates directly with Amazon Bedrock and remains compatible with existing Amazon Bedrock Model Evaluation features. Users can access the functionality through the AWS Management Console for Amazon Bedrock and quickly integrate their custom datasets for evaluation purposes.</li><li>: The system supports the evaluation of models hosted on Amazon Bedrock, custom fine-tuned models, and imported models. Users can seamlessly connect their evaluation datasets through <a href=\"https://aws.amazon.com/s3\" target=\"_blank\" rel=\"noopener\">Amazon Simple Storage Service (Amazon S3)</a> buckets, making the evaluation process streamlined and efficient.</li><li>: Amazon Bedrock provides pre-selected, high-quality evaluation models with optimized prompt engineering for accurate assessments. Users don’t need to bring external judge models, because the Amazon Bedrock team maintains and updates a selection of judge models and associated evaluation judge prompts.</li><li>: The feature enables organizations to perform comprehensive model evaluations at scale without the traditional costs and time investments associated with human evaluation. The automated process maintains high-quality assessments while significantly reducing operational overhead.</li></ol><p>These features create a powerful evaluation framework that helps organizations optimize their AI model performance while maintaining high standards of quality and safety, all within their secure AWS environment.</p><p>Now that you understand the key features of LLM-as-a-judge, let’s examine how to implement and use this capability within Amazon Bedrock Model Evaluation. This section provides a comprehensive overview of the architecture and walks through each component, demonstrating how they work together to deliver accurate and efficient model evaluations.</p><p>LLM-as-a-judge on Amazon Bedrock Model Evaluation provides a comprehensive, end-to-end solution for assessing and optimizing AI model performance. This automated process uses the power of LLMs to evaluate responses across multiple metric categories, offering insights that can significantly improve your AI applications. Let’s walk through the key components of this solution as shown in the following diagram:</p><p>LLM-as-a-judge on Amazon Bedrock Model Evaluation follows a streamlined workflow that enables systematic model evaluation. Here’s how each component works together in the evaluation process:</p><ul><li>: The process begins with a prepared dataset containing prompts that will be used to test the model’s performance. The evaluation can be conducted with or without ground truth responses—while including ground truth provides additional comparison points, it’s entirely optional and not required for successful evaluation.</li><li>: The prompt dataset is converted into JSONL format, which is specifically structured for LLM-as-a-judge evaluation jobs. This format promotes proper processing of evaluation data.</li><li>: The prepared JSONL file is uploaded to an S3 bucket, serving as the secure storage location for the evaluation data.</li><li>: The Amazon Bedrock LLM-as-a-judge model evaluation job processes the stored data, running comprehensive assessments across the selected metric categories (including quality, user experience, instruction following, and safety).</li><li><strong>Automated report generation</strong>: Upon completion, the system generates detailed evaluation reports containing metrics, scores, and insights at both aggregate and individual response levels.</li><li>: Data scientists or machine learning engineers analyze the generated reports to derive actionable insights and make informed decisions.</li></ul><p>With this solution architecture in mind, let’s explore how to implement LLM-as-a-judge model evaluations effectively, making sure that you get the most valuable insights from your assessment process.</p><p>To use the LLM-as-a-judge model evaluation, make sure that you have satisfied the following requirements:</p><ul><li>Selected  and  models enabled in Amazon Bedrock. You can confirm that the models are enabled for your account on the  page of the Amazon Bedrock console.</li><li>If you’re using a custom model instead of an on-demand model for your generator model, make sure that you have sufficient quota for running a <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/prov-throughput.html\" target=\"_blank\" rel=\"noopener\">Provisioned Throughput</a> during inference. \n  <ul><li>Go to the AWS Service Quotas console, and check the following quotas: \n    <ul><li>Model units no-commitment Provisioned Throughputs across custom models.</li><li>Model units per provisioned model for [your custom model name].</li><li>Both of these fields need to have enough quota to support your Provisioned Throughput model unit. Request a quota increase if necessary to accommodate your expected inference workload.</li></ul></li></ul></li></ul><p>When preparing your dataset for LLM-as-a-judge model evaluation jobs, each prompt must include specific key-value pairs. Here are the required and optional fields:</p><ul><li>: This key indicates the input for various tasks. It can be used for general text generation where the model needs to provide a response, question-answering tasks where the model must answer a specific question, text summarization tasks where the model needs to summarize a given text, or classification tasks where the model must categorize the provided text.</li><li><strong>referenceResponse (used for specific metrics with ground truth)</strong>: This key contains the ground truth or correct response. It serves as the reference point against which the model’s responses will be evaluated if it is provided.</li><li>: This key is used to generate evaluation scores reported by category, helping organize and segment evaluation results for better analysis.</li></ul><ul><li>Each line must be a valid JSON object</li><li>The file must use JSONL format</li><li>The dataset should be stored in an Amazon S3 bucket</li></ul><p>Example JSONL format without ground truth ( is optional):</p><div><pre><code>{\n    \"prompt\": \"What is machine learning?\"\n    \"category\": \"technical\"\n}\n{\n    \"prompt\": \"Summarize climate change impacts\",\n    \"category\": \"environmental\"\n}\n</code></pre></div><p>Example JSONL format with ground truth ( is optional):</p><div><pre><code>{\n    \"prompt\": \"What is machine learning?\",\n    \"referenceResponse\": \"Machine learning is a subset of artificial intelligence that enables systems to learn and improve from experience without being explicitly programmed. It uses algorithms and statistical models to analyze and draw inferences from patterns in data, allowing computers to perform specific tasks without explicit instructions.\",\n    \"category\": \"technical\"\n}\n{\n    \"prompt\": \"Summarize climate change impacts\",\n    \"referenceResponse\": \"Climate change leads to rising global temperatures, extreme weather events, sea level rise, and disruption of ecosystems. These changes result in more frequent natural disasters, threats to food security, loss of biodiversity, and various public health challenges. The impacts affect agriculture, coastal communities, and vulnerable populations disproportionately.\",\n    \"category\": \"environmental\"\n}</code></pre></div><h2>Start an LLM-as-a-judge model evaluation job using the console</h2><p>You can use LLM-as-a-judge on Amazon Bedrock Model Evaluation to assess model performance through a user-friendly console interface. Follow these steps to start an evaluation job:</p><ol><li>In the Amazon Bedrock console, choose and then select . On the page, choose the </li></ol><ol start=\"2\"><li>Choose  and select <strong>Automatic: LLM-as-a-judge</strong>.</li><li>Enter a name and description and select an . This model will be used as a judge to evaluate the response of a prompt or model from your generative AI application.</li></ol><ol start=\"4\"><li>Choose  and select the model to be used for generating responses in this evaluation job.</li></ol><ol start=\"5\"><li>Select the metrics you want to use to evaluate the model response (such as helpfulness, correctness, faithfulness, relevance, and harmfulness).</li></ol><ol start=\"6\"><li>Select the  for  and for . You can use theoption.</li></ol><ol start=\"7\"><li>Select or create an IAM service role with the <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-evaluation-type-judge.html\">proper permissions</a>. This includes service access to Amazon Bedrock, the S3 buckets in the evaluation job, and the models being used in the job. If you create a new IAM role in the evaluation setup, the service will automatically give the role the proper permissions for the job. Specify the output S3 bucket and choose .</li></ol><ol start=\"8\"><li>You will be able to see the evaluation job is .&nbsp;Wait for the job status to change to .</li></ol><ol start=\"9\"><li>When complete, select the job to see its details. The following is the metrics summary (such as 0.83 for helpfulness, 1.00 for correctness, 1.00 for faithfulness, 1.00 for relevance, and 0.00 for harmfulness).</li></ol><ol start=\"10\"><li>To view generation metrics details, scroll down in the model evaluation report and choose any individual metric (like helpfulness or correctness) to see its detailed breakdown.</li></ol><ol start=\"11\"><li>To see each record’s prompt input, generation output, ground truth, and individual scores, choose a metric and select “Prompt details”. Hover over any individual score to view its detailed explanation.</li></ol><h2>Start an LLM-as-a-judge evaluation job using Python SDK and APIs</h2><p>To use the Python SDK for creating an LLM-as-a-judge model evaluation job, use the following steps. First, set up the required configurations:</p><div><pre><code>import boto3\nfrom datetime import datetime\n\n# Generate unique name for the job\njob_name = f\"Model-evaluation-{datetime.now().strftime('%Y-%m-%d-%H-%M-%S')}\"\n\n# Configure your knowledge base and model settings\nevaluator_model = \"mistral.mistral-large-2402-v1:0\"\ngenerator_model = \"amazon.nova-pro-v1:0\"\nrole_arn = \"arn:aws:iam::&lt;YOUR_ACCOUNT_ID&gt;:role/&lt;YOUR_IAM_ROLE&gt;\"\n\n# Specify S3 locations for evaluation data and output\ninput_data = \"s3://&lt;YOUR_BUCKET&gt;/evaluation_data/input.jsonl\"\noutput_path = \"s3://&lt;YOUR_BUCKET&gt;/evaluation_output/\"\n\n# Create Bedrock client\nbedrock_client = boto3.client('bedrock')</code></pre></div><p>To create an LLM-as-a-judge model evaluation job:</p><div><pre><code>def create_llm_judge_evaluation(\n    client,\n    job_name: str,\n    role_arn: str,\n    input_s3_uri: str,\n    output_s3_uri: str,\n    evaluator_model_id: str,\n    generator_model_id: str,\n    dataset_name: str = None,\n    task_type: str = \"General\" # must be General for LLMaaJ\n):    \n    # All available LLM-as-judge metrics\n    llm_judge_metrics = [\n        \"Builtin.Correctness\",\n        \"Builtin.Completeness\", \n        \"Builtin.Faithfulness\",\n        \"Builtin.Helpfulness\",\n        \"Builtin.Coherence\",\n        \"Builtin.Relevance\",\n        \"Builtin.FollowingInstructions\",\n        \"Builtin.ProfessionalStyleAndTone\",\n        \"Builtin.Harmfulness\",\n        \"Builtin.Stereotyping\",\n        \"Builtin.Refusal\"\n    ]\n\n    # Configure dataset\n    dataset_config = {\n        \"name\": dataset_name or \"CustomDataset\",\n        \"datasetLocation\": {\n            \"s3Uri\": input_s3_uri\n        }\n    }\n\n    try:\n        response = client.create_evaluation_job(\n            jobName=job_name,\n            roleArn=role_arn,\n            applicationType=\"ModelEvaluation\",\n            evaluationConfig={\n                \"automated\": {\n                    \"datasetMetricConfigs\": [\n                        {\n                            \"taskType\": task_type,\n                            \"dataset\": dataset_config,\n                            \"metricNames\": llm_judge_metrics\n                        }\n                    ],\n                    \"evaluatorModelConfig\": {\n                        \"bedrockEvaluatorModels\": [\n                            {\n                                \"modelIdentifier\": evaluator_model_id\n                            }\n                        ]\n                    }\n                }\n            },\n            inferenceConfig={\n                \"models\": [\n                    {\n                        \"bedrockModel\": {\n                            \"modelIdentifier\": generator_model_id\n                        }\n                    }\n                ]\n            },\n            outputDataConfig={\n                \"s3Uri\": output_s3_uri\n            }\n        )\n        return response\n        \n    except Exception as e:\n        print(f\"Error creating evaluation job: {str(e)}\")\n        raise\n        \n # Create evaluation job\ntry:\n    llm_as_judge_response = create_llm_judge_evaluation(\n        client=bedrock_client,\n        job_name=job_name,\n        role_arn=ROLE_ARN,\n        input_s3_uri=input_data,\n        output_s3_uri=output_path,\n        evaluator_model_id=evaluator_model,\n        generator_model_id=generator_model,\n        task_type=\"General\"\n    )\n    print(f\"✓ Created evaluation job: {llm_as_judge_response['jobArn']}\")\nexcept Exception as e:\n    print(f\"✗ Failed to create evaluation job: {str(e)}\")\n    raise\n</code></pre></div><p>To monitor the progress of your evaluation job:</p><div><pre><code># Get job ARN based on job type\nevaluation_job_arn = llm_as_judge_response['jobArn']\n# Check job status\ncheck_status = bedrock_client.get_evaluation_job(jobIdentifier=evaluation_job_arn) \nprint(f\"Job Status: {check_status['status']}\")</code></pre></div><p>You can also compare multiple foundation models to determine which one works best for your needs. By using the same evaluator model across all comparisons, you’ll get consistent benchmarking results to help identify the optimal model for your use case.</p><div><pre><code># Generator Models\nGENERATOR_MODELS = [\n    \"anthropic.claude-3-haiku-20240307-v1:0\",\n    \"amazon.nova-micro-v1:0\"\n]\n\n# Consistent Evaluator\nEVALUATOR_MODEL = \"anthropic.claude-3-haiku-20240307-v1:0\"\n\ndef run_model_comparison(\n    generator_models: List[str],\n    evaluator_model: str\n) -&gt; List[Dict[str, Any]]:\n    evaluation_jobs = []\n    \n    for generator_model in generator_models:\n        job_name = f\"llmaaj-{generator_model.split('.')[0]}-{evaluator_model.split('.')[0]}-{datetime.now().strftime('%Y-%m-%d-%H-%M-%S')}\"\n        \n        try:\n            response = create_llm_judge_evaluation(\n                client=bedrock_client,\n                job_name=job_name,\n                role_arn=ROLE_ARN,\n                input_s3_uri=input_data,\n                output_s3_uri=f\"{output_path}/{job_name}/\",\n                evaluator_model_id=evaluator_model,\n                generator_model_id=generator_model,\n                task_type=\"General\"\n            )\n            \n            job_info = {\n                \"job_name\": job_name,\n                \"job_arn\": response[\"jobArn\"],\n                \"generator_model\": generator_model,\n                \"evaluator_model\": evaluator_model,\n                \"status\": \"CREATED\"\n            }\n            evaluation_jobs.append(job_info)\n            \n            print(f\"✓ Created job: {job_name}\")\n            print(f\"  Generator: {generator_model}\")\n            print(f\"  Evaluator: {evaluator_model}\")\n            print(\"-\" * 80)\n            \n        except Exception as e:\n            print(f\"✗ Error with {generator_model}: {str(e)}\")\n            continue\n            \n    return evaluation_jobs\n\n# Run model comparison\nevaluation_jobs = run_model_comparison(GENERATOR_MODELS, EVALUATOR_MODEL)</code></pre></div><h3>Correlation analysis for LLM-as-a-judge evaluations</h3><p>You can use the <a href=\"https://en.wikipedia.org/wiki/Spearman%27s_rank_correlation_coefficient\" target=\"_blank\" rel=\"noopener\">Spearman’s rank correlation coefficient</a> to compare evaluation results between different generator models using LLM-as-a-judge in Amazon Bedrock. After retrieving the evaluation results from your S3 bucket, containing evaluation scores across various metrics, you can begin the correlation analysis.</p><p>Using , compute the correlation coefficient between pairs of generator models, filtering out constant values or error messages to have a valid statistical comparison. The resulting correlation coefficients help identify how similarly different models respond to the same prompts. A coefficient closer to 1.0 indicates stronger agreement between the models’ responses, while values closer to 0 suggest more divergent behavior. This analysis provides valuable insights into model consistency and helps identify cases where different models might produce significantly different outputs for the same input.</p><div><pre><code>import json\nimport boto3\nimport numpy as np\nfrom scipy import stats\n\ndef read_and_organize_metrics_from_s3(bucket_name, file_key):\n    s3_client = boto3.client('s3')\n    metrics_dict = {}\n    \n    try:\n        response = s3_client.get_object(Bucket=bucket_name, Key=file_key)\n        content = response['Body'].read().decode('utf-8')\n        \n        for line in content.strip().split('\\n'):\n            if line:\n                data = json.loads(line)\n                if 'automatedEvaluationResult' in data and 'scores' in data['automatedEvaluationResult']:\n                    for score in data['automatedEvaluationResult']['scores']:\n                        metric_name = score['metricName']\n                        if 'result' in score:\n                            metric_value = score['result']\n                            if metric_name not in metrics_dict:\n                                metrics_dict[metric_name] = []\n                            metrics_dict[metric_name].append(metric_value)\n        return metrics_dict\n    \n    except Exception as e:\n        print(f\"Error: {e}\")\n        return None\n\ndef get_spearmanr_correlation(scores1, scores2):\n    if len(set(scores1)) == 1 or len(set(scores2)) == 1:\n        return \"undefined (constant scores)\", \"undefined\"\n    \n    try:\n        result = stats.spearmanr(scores1, scores2)\n        return round(float(result.statistic), 4), round(float(result.pvalue), 4)\n    except Exception as e:\n        return f\"error: {str(e)}\", \"undefined\"\n\n# Extract metrics\nbucket_name = \"&lt;EVALUATION_OUTPUT_BUCKET&gt;\"\nfile_key1 = \"&lt;EVALUATION_FILE_KEY1&gt;\"\nfile_key2 = \"&lt;EVALUATION_FILE_KEY2&gt;\"\n\nmetrics1 = read_and_organize_metrics_from_s3(bucket_name, file_key1)\nmetrics2 = read_and_organize_metrics_from_s3(bucket_name, file_key2)\n\n# Calculate correlations for common metrics\ncommon_metrics = set(metrics1.keys()) &amp; set(metrics2.keys())\n\nfor metric_name in common_metrics:\n    scores1 = metrics1[metric_name]\n    scores2 = metrics2[metric_name]\n    \n    if len(scores1) == len(scores2):\n        correlation, p_value = get_spearmanr_correlation(scores1, scores2)\n        \n        print(f\"\\nMetric: {metric_name}\")\n        print(f\"Number of samples: {len(scores1)}\")\n        print(f\"Unique values in Model 1 scores: {len(set(scores1))}\")\n        print(f\"Unique values in Model 2 scores: {len(set(scores2))}\")\n        print(f\"Model 1 scores range: [{min(scores1)}, {max(scores1)}]\")\n        print(f\"Model 2 scores range: [{min(scores2)}, {max(scores2)}]\")\n        print(f\"Spearman correlation coefficient: {correlation}\")\n        print(f\"P-value: {p_value}\")\n    else:\n        print(f\"\\nMetric: {metric_name}\")\n        print(\"Error: Different number of samples between models\")</code></pre></div><h2>Best practices for LLM-as-a-judge implementation</h2><p>You can also compare multiple foundation models to determine which one works best for your needs. By using the same evaluator model across all comparisons, you’ll get consistent, scalable results. The following best practices will help you establish standardized benchmarking when comparing different foundation models.</p><ul><li>Create diverse test datasets that represent real-world use cases and edge cases. For large workloads (more than 1,000 prompts), use stratified sampling to maintain comprehensive coverage while managing costs and completion time. Include both simple and complex prompts to test model capabilities across different difficulty levels.</li><li>Choose evaluation metrics that align with your specific business objectives and application requirements. Balance quality metrics (correctness, completeness) with user experience metrics (helpfulness, coherence). Include safety metrics when deploying customer-facing applications.</li><li>Maintain consistent evaluation conditions when comparing different models. Use the same evaluator model across comparisons for standardized benchmarking. Document your evaluation configuration and parameters for reproducibility.</li><li>Schedule regular evaluation jobs to track model performance over time. Monitor trends across different metric categories to identify areas for improvement. Set up performance baselines and thresholds for each metric.</li><li>Optimize batch sizes based on your evaluation needs and cost constraints. Consider using smaller test sets for rapid iteration and larger sets for comprehensive evaluation. Balance evaluation frequency with resource utilization.</li><li>Maintain detailed records of evaluation jobs, including configurations and results. Track improvements and changes in model performance over time. Document any modifications made based on evaluation insights. The optional job description field can help you here.</li><li>Use evaluation results to guide model selection and optimization. Implement feedback loops to continuously improve prompt engineering. Regularly update evaluation criteria based on emerging requirements and user feedback.</li><li>Design your evaluation framework to accommodate growing workloads. Plan for increased complexity as you add more models or use cases. Consider automated workflows for regular evaluation tasks.</li></ul><p>These best practices help establish a robust evaluation framework using LLM-as-a-judge on Amazon Bedrock. For deeper insights into the scientific validation of these practices, including case studies and correlation with human judgments, stay tuned for our upcoming technical deep-dive blog post.</p><p>LLM-as-a-judge on Amazon Bedrock Model Evaluation represents a significant advancement in automated model assessment, offering organizations a powerful tool to evaluate and optimize their AI applications systematically. This feature combines the efficiency of automated evaluation with the nuanced understanding typically associated with human assessment, enabling organizations to scale their quality assurance processes while maintaining high standards of performance and safety.</p><p>The comprehensive metric categories, flexible implementation options, and seamless integration with existing AWS services make it possible for organizations to establish robust evaluation frameworks that grow with their needs. Whether you’re developing conversational AI applications, content generation systems, or specialized enterprise solutions, LLM-as-a-judge provides the necessary tools to make sure that your models align with both technical requirements and business objectives.</p><p>We’ve provided detailed implementation guidance, from initial setup to best practices, to help you use this feature effectively. The accompanying code samples and configuration examples in this post demonstrate how to implement these evaluations in practice. Through systematic evaluation and continuous improvement, organizations can build more reliable, accurate, and trustworthy AI applications.</p><p>We encourage you to explore LLM-as-a-judge capabilities in the Amazon Bedrock console and discover how automatic evaluation can enhance your AI applications. To help you get started, we’ve prepared a Jupyter notebook with practical examples and code snippets that you can find on our <a href=\"https://github.com/aws-samples/amazon-bedrock-samples/tree/main/evaluation-observe/bedrock-llm-as-judge-evaluation\" target=\"_blank\" rel=\"noopener\">GitHub repository</a>.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/06/wale_picture_blog.png\" alt=\"\" width=\"100\" height=\"100\"> is a Sr. Data Scientist–Generative AI, Amazon Bedrock, where he contributes to cutting edge innovations in foundational models and generative AI applications at AWS. His expertise is in reproducible and end-to-end AI/ML methods, practical implementations, and helping global customers formulate and develop scalable solutions to interdisciplinary problems. He has two graduate degrees in physics and a doctorate in engineering.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/06/ishan.jpg\" alt=\"\" width=\"100\" height=\"99\"> is a Generative AI Data Scientist at Amazon Web Services, where he helps customers build innovative and responsible generative AI solutions and products. With a strong background in AI/ML, Ishan specializes in building Generative AI solutions that drive business value. Outside of work, he enjoys playing volleyball, exploring local bike trails, and spending time with his wife and dog, Beau.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/06/Badgephoto.jpeg\" alt=\"\" width=\"100\" height=\"115\"> is a Senior Product Manager on Amazon Bedrock, the AWS Generative AI developer service. He works at the intersection of AI and human interaction with the goal of creating and improving generative AI products and services to meet our needs. Previously, Jesse held engineering team leadership roles at Apple and Lumileds, and was a senior scientist in a Silicon Valley startup. He has an M.S. and Ph.D. from the University of Florida, and an MBA from the University of California, Berkeley, Haas School of Business.</p>","contentLength":26547,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"From concept to reality: Navigating the Journey of RAG from proof of concept to production","url":"https://aws.amazon.com/blogs/machine-learning/from-concept-to-reality-navigating-the-journey-of-rag-from-proof-of-concept-to-production/","date":1739381272,"author":"Vivek Mittal","guid":127,"unread":true,"content":"<p>Generative AI has emerged as a transformative force, captivating industries with its potential to create, innovate, and solve complex problems. However, the journey from a proof of concept to a production-ready application comes with challenges and opportunities. Moving from proof of concept to production is about creating scalable, reliable, and impactful solutions that can drive business value and user satisfaction.</p><p>One of the most promising developments in this space is the rise of <a href=\"https://aws.amazon.com/what-is/retrieval-augmented-generation/\" target=\"_blank\" rel=\"noopener\">Retrieval Augmented Generation (RAG)</a> applications. RAG is the process of optimizing the output of a foundation model (FM), so it references a knowledge base outside of its training data sources before generating a response.</p><p>The following diagram illustrates a sample architecture.</p><p>In this post, we explore the movement of RAG applications from their proof of concept or minimal viable product (MVP) phase to full-fledged production systems. When transitioning a RAG application from a proof of concept to a production-ready system, optimization becomes crucial to make sure the solution is reliable, cost-effective, and high-performing. Let’s explore these optimization techniques in greater depth, setting the stage for future discussions on hosting, scaling, security, and observability considerations.</p><p>The diagram below illustrates the tradeoffs to consider for a production-ready RAG application.</p><p>The success of a production-ready RAG system is measured by its quality, cost, and latency. Machine learning (ML) engineers must make trade-offs and prioritize the most important factors for their specific use case and business requirements. For example, consider the use case of generating personalized marketing content for a luxury fashion brand. The brand might be willing to absorb the higher costs of using a more powerful and expensive FMs to achieve the highest-quality classifications, because misclassifications could lead to customer dissatisfaction and damage the brand’s reputation. Consider another use case of generating personalized product descriptions for an ecommerce site. The retailer might be willing to accept slightly longer latency to reduce infrastructure and operational costs, as long as the generated descriptions remain reasonably accurate and compelling. The optimal balance of quality, cost, and latency can vary significantly across different applications and industries.</p><p>Let’s look into practical guidelines on how you can enhance the overall quality of your RAG workflow, including the quality of the retriever and quality of the result generator using <a href=\"https://aws.amazon.com/bedrock/knowledge-bases/\" target=\"_blank\" rel=\"noopener\">Amazon Bedrock Knowledge Bases</a> and other features of <a href=\"https://aws.amazon.com/bedrock/\" target=\"_blank\" rel=\"noopener\">Amazon Bedrock</a>. Amazon Bedrock Knowledge Bases provides a fully managed capability that helps you implement the entire RAG workflow from ingestion to retrieval and prompt augmentation without having to build custom integrations to data sources and manage data flows.</p><p>An effective evaluation framework is crucial for assessing and optimizing RAG systems as they move from proof of concept to production. These frameworks typically include overall metrics for a holistic assessment of the entire RAG pipeline, as well as specific diagnostic metrics for both the retrieval and generation components. This allows for targeted improvements in each phase of the system. By implementing a robust evaluation framework, developers can continuously monitor, diagnose, and enhance their RAG systems, achieving optimal performance across quality, cost, and latency dimensions as the application scales to production levels. <a href=\"https://aws.amazon.com/bedrock/evaluations/\" target=\"_blank\" rel=\"noopener\">Amazon Bedrock Evaluations</a> can help you evaluate your retrieval or end-to-end RAG workflow in Amazon Bedrock Knowledge Bases. In the following sections, we discuss these specific metrics in different phases of the RAG workflow in more detail.</p><p>For better retrieval performance, the way the data is stored in the <a href=\"https://aws.amazon.com/blogs/machine-learning/dive-deep-into-vector-data-stores-using-amazon-bedrock-knowledge-bases/\" target=\"_blank\" rel=\"noopener\">vector store</a> has a big impact. For example, your input document might include tables within the PDF. In such cases, using an FM to parse the data will provide better results. You can use <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-chunking-parsing.html#kb-advanced-parsing\" target=\"_blank\" rel=\"noopener\">advanced parsing options</a> supported by Amazon Bedrock Knowledge Bases for parsing non-textual information from documents using FMs. Many organizations store their data in structured formats within data warehouses and data lakes. Amazon Bedrock Knowledge Bases offers a feature that lets you connect your RAG workflow to <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-build-structured.html\" target=\"_blank\" rel=\"noopener\">structured data stores</a>. This fully managed out-of-the-box RAG solution can help you natively query structured data from where it resides.</p><p>Another important consideration is the way your source document is split up into chunks. If your document would benefit from inherent relationships within your document, it might be wise to use <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-chunking-parsing.html#kb-hiearchical-chunking\" target=\"_blank\" rel=\"noopener\">hierarchical chunking</a>, which allows for more granular and efficient retrieval. Some documents benefit from <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-chunking-parsing.html#kb-semantic-chunking\" target=\"_blank\" rel=\"noopener\">semantic chunking</a> by preserving the contextual relationship in the chunks, helping make sure that the related information stays together in logical chunks. You can also use your own custom <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-chunking-parsing.html#kb-custom-transformation\" target=\"_blank\" rel=\"noopener\">chunking strategy</a> for your RAG application’s unique requirements.</p><p>RAG applications process user queries by searching across a large set of documents. However, in many situations, you might need to retrieve documents with specific attributes or content. You can use <a href=\"https://aws.amazon.com/blogs/machine-learning/amazon-bedrock-knowledge-bases-now-supports-metadata-filtering-to-improve-retrieval-accuracy/\" target=\"_blank\" rel=\"noopener\">metadata filtering</a> to narrow down search results by specifying inclusion and exclusion criteria. Amazon Bedrock Knowledge Bases now also supports <a href=\"https://aws.amazon.com/about-aws/whats-new/2024/12/amazon-bedrock-knowledge-bases-auto-generated-query-filters-improved-retrieval/\" target=\"_blank\" rel=\"noopener\">auto generated query filters</a>, which extend the existing capability of manual metadata filtering by allowing you to narrow down search results without the need to manually construct complex filter expressions. This improves retrieval accuracy by making sure the documents are relevant to the query.</p><p>Writing an effective query is just as important as any other consideration for generation accuracy. You can add a <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-templates-and-examples.html\" target=\"_blank\" rel=\"noopener\">prompt</a> providing instructions to the FM to provide an appropriate answer to the user. For example, a legal tech company would want to provide instructions to restrict the answers to be based on the input documents and not based on general information known to the FM. <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html\" target=\"_blank\" rel=\"noopener\">Query decomposition</a> by splitting the input query into multiple queries is also helpful in retrieval accuracy. In this process, the subqueries with less semantic complexity might find more targeted chunks. These chunks can then be pooled and ranked together before passing them to the FM to generate a response.</p><p><a href=\"https://aws.amazon.com/about-aws/whats-new/2024/12/amazon-bedrock-rerank-api-accuracy-rag-applications/\" target=\"_blank\" rel=\"noopener\">Reranking</a>, as a post-retrieval step, can significantly improve response quality. This technique uses LLMs to analyze the semantic relevance between the query and retrieved documents, reordering them based on their pertinence. By incorporating reranking, you make sure that only the most contextually relevant information is used for generation, leading to more accurate and coherent responses.</p><p>Adjusting <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/inference-parameters.html\" target=\"_blank\" rel=\"noopener\">inference parameters</a>, such as temperature and top-k/p sampling, can help in further refining the output.</p><p>You can use Amazon Bedrock Knowledge Bases to <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html\" target=\"_blank\" rel=\"noopener\">configure and customize</a> queries and response generation. You can also improve the relevance of your query responses with a <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/rerank.html\" target=\"_blank\" rel=\"noopener\">reranker model</a> in Amazon Bedrock.</p><p>The key metrics for retriever quality are <a href=\"https://aws.amazon.com/blogs/machine-learning/evaluate-the-reliability-of-retrieval-augmented-generation-applications-using-amazon-bedrock/\" target=\"_blank\" rel=\"noopener\">context precision</a>, <a href=\"https://aws.amazon.com/blogs/machine-learning/evaluate-the-reliability-of-retrieval-augmented-generation-applications-using-amazon-bedrock/\" target=\"_blank\" rel=\"noopener\">context recall</a>, and <a href=\"https://aws.amazon.com/blogs/machine-learning/evaluate-the-reliability-of-retrieval-augmented-generation-applications-using-amazon-bedrock/\" target=\"_blank\" rel=\"noopener\">context relevance</a>. Context precision measures how well the system ranks relevant pieces of information from the given context. It considers the question, ground truth, and context. Context recall provides the percentage of ground truth claims or key information covered by the retrieved context. Context relevance measures whether the retrieved passages or chunks are relevant for answering the given query, excluding extraneous details. Together, these three metrics offer insight into how effectively the retriever is able to surface the most relevant and focused source material to support a high-quality response.</p><p>Generator quality can be assessed through several key metrics. <a href=\"https://github.com/amazon-science/RAGChecker/blob/main/tutorial/ragchecker_tutorial_en.md#generator-metrics\" target=\"_blank\" rel=\"noopener\">Context utilization</a> examines how effectively the generator uses relevant information from the provided source material. <a href=\"https://github.com/amazon-science/RAGChecker/blob/main/tutorial/ragchecker_tutorial_en.md#generator-metrics\" target=\"_blank\" rel=\"noopener\">Noise sensitivity</a> gauges the generator’s propensity to include inaccurate details from the retrieved content. <a href=\"https://github.com/amazon-science/RAGChecker/blob/main/tutorial/ragchecker_tutorial_en.md#generator-metrics\" target=\"_blank\" rel=\"noopener\">Hallucination</a> measures the extent to which the generator produces incorrect claims not present in the source data. <a href=\"https://github.com/amazon-science/RAGChecker/blob/main/tutorial/ragchecker_tutorial_en.md#generator-metrics\" target=\"_blank\" rel=\"noopener\">Self-knowledge</a> reflects the proportion of accurate statements generated that can’t be found in the retrieved chunks. Finally, <a href=\"https://github.com/amazon-science/RAGChecker/blob/main/tutorial/ragchecker_tutorial_en.md#generator-metrics\" target=\"_blank\" rel=\"noopener\">faithfulness</a> evaluates how closely the generator’s output aligns with the information contained in the source material.</p><p>For measuring the overall generation quality, the key metrics include measuring the <a href=\"https://github.com/amazon-science/RAGChecker/blob/main/tutorial/ragchecker_tutorial_en.md#overall-metrics\" target=\"_blank\" rel=\"noopener\">precision</a>, <a href=\"https://github.com/amazon-science/RAGChecker/blob/main/tutorial/ragchecker_tutorial_en.md#overall-metrics\" target=\"_blank\" rel=\"noopener\">recall</a>, and <a href=\"https://aws.amazon.com/blogs/machine-learning/evaluate-the-reliability-of-retrieval-augmented-generation-applications-using-amazon-bedrock/\" target=\"_blank\" rel=\"noopener\">answer similarity</a>. Precision suggests the proportion of the correct claims in model’s response, whereas recall suggests the proportion of the ground truth claims covered by the model’s response. Answer similarity compares the meaning and content of a generated answer with a reference or ground truth answer. It evaluates how closely the generated answer matches the intended meaning of the ground truth answer.</p><p>Establishing a feedback loop with an evaluation framework against these quality metrics allows for continuous improvement, where the system can learn from user interactions and refine its performance over time. By optimizing these quality metrics, the RAG system can be designed to deliver reliable, cost-effective, and high-performing results for users.</p><p>Implementing responsible AI practices is crucial for maintaining ethical and safe deployment of RAG systems. This includes using guardrails to filter harmful content, deny certain topics, mask sensitive information, and ground responses in verified sources to reduce hallucinations.</p><p>Cost considers the compute resources and infrastructure required to run the system, and latency evaluates the response times experienced by end-users. To optimize cost and latency, implement <a href=\"https://aws.amazon.com/blogs/database/improve-speed-and-reduce-cost-for-generative-ai-workloads-with-a-persistent-semantic-cache-in-amazon-memorydb/\" target=\"_blank\" rel=\"noopener\">caching strategies</a> to reduce the need for expensive model inferences. Efficient <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/batch-inference.html\" target=\"_blank\" rel=\"noopener\">query batching</a>&nbsp;can also improve overall throughput and reduce resource usage. Balance performance and resource usage to find the ideal configuration that meets your application’s requirements.</p><p>Use tools like Amazon Bedrock Knowledge Bases so you can take advantage of fully managed support for the end-to-end RAG workflow. It supports many of the <a href=\"https://aws.amazon.com/about-aws/whats-new/2024/07/knowledge-bases-amazon-bedrock-advanced-rag-capabilities/\" target=\"_blank\" rel=\"noopener\">advanced RAG capabilities</a> we discussed earlier. By addressing these optimization techniques, you can transition your RAG-powered proof of concept to a robust, production-ready system that delivers high-quality, cost-effective, and low-latency responses to your users.</p><p>In addition to the server or compute layer, you will also need to consider an orchestration tool, testing environments, and a continuous integration and delivery (CI/CD) pipeline to streamline your application deployment. Having a feedback loop established based on the quality metrics along with a CI/CD pipeline is an important first step to creating self-healing architectures.</p><p>As your application grows, you will need to make sure your infrastructure can scale to meet the increasing demand. This can involve containerization with Docker or choosing serverless options, implementing load balancing, setting up auto scaling, and choosing between on-premises, cloud, or hybrid solutions. It also includes unique scaling requirements of your frontend application and backend generative AI workflow, as well as the use of content delivery networks (CDNs) and disaster recovery and backup strategies.</p><p>The following is a sample architecture for a secure and scalable RAG-based web application. This architecture uses Amazon ECS for hosting the service, <a href=\"https://aws.amazon.com/cloudfront/\" target=\"_blank\" rel=\"noopener\">Amazon CloudFront</a> as a CDN, <a href=\"https://aws.amazon.com/waf/\" target=\"_blank\" rel=\"noopener\">AWS WAF</a> as a firewall, and <a href=\"https://aws.amazon.com/memorydb/\" target=\"_blank\" rel=\"noopener\">Amazon MemoryDB</a> for providing a semantic cache.</p><p>By carefully considering these aspects of hosting and scaling your infrastructure, you can build a resilient and adaptable system to support your growing web application or service. Stay tuned for more detailed information on these topics in upcoming blog posts.</p><h2>Data privacy, security, and observability</h2><p>Maintaining data privacy and security is of utmost importance. This includes implementing security measures at each layer of your application, from encrypting data in transit to setting up robust authentication and authorization controls. It also involves focusing on compute and storage security, as well as network security. Compliance with relevant regulations and regular security audits are essential. Securing your generative AI system is another crucial aspect. By default, Amazon Bedrock Knowledge Bases encrypts the traffic using AWS managed <a href=\"http://aws.amazon.com/kms\" target=\"_blank\" rel=\"noopener\">AWS Key Management Service</a> (AWS KMS) keys. You can also choose customer managed KMS keys for more control over encryption keys. For more information on application security, refer to <a href=\"https://aws.amazon.com/blogs/machine-learning/safeguard-a-generative-ai-travel-agent-with-prompt-engineering-and-amazon-bedrock-guardrails/\" target=\"_blank\" rel=\"noopener\">Safeguard a generative AI travel agent with prompt engineering and Amazon Bedrock Guardrails</a>.</p><p>Comprehensive logging, monitoring, and maintenance are crucial to maintaining a healthy infrastructure. This includes setting up structured logging, centralized log management, real-time monitoring, and strategies for system updates and migrations.</p><p>By addressing these critical areas, you can build a secure and resilient infrastructure to support your growing web application or service. Stay tuned for more in-depth coverage of these topics in upcoming blog posts.</p><p>To successfully transition a RAG application from a proof of concept to a production-ready system, you should focus on optimizing the solution for reliability, cost-effectiveness, and high performance. Key areas to address include enhancing retriever and generator quality, balancing cost and latency, and establishing a robust and secure infrastructure.</p><p>By using purpose-built tools like Amazon Bedrock Knowledge Bases to streamline the end-to-end RAG workflow, organizations can successfully transition their RAG-powered proofs of concept into high-performing, cost-effective, secure production-ready solutions that deliver business value.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/07/vivek_phonetool.jpeg\" alt=\"\" width=\"100\" height=\"133\"> is a Solution Architect at Amazon Web Services, where he helps organizations architect and implement cutting-edge cloud solutions. With a deep passion for Generative AI, Machine Learning, and Serverless technologies, he specializes in helping customers harness these innovations to drive business transformation. He finds particular satisfaction in collaborating with customers to turn their ambitious technological visions into reality.</p><p>&nbsp;is a Sr. Enterprise Solutions Architect at AWS, experienced in Software Engineering, Enterprise Architecture, and AI/ML. He is deeply passionate about exploring the possibilities of generative AI. He collaborates with customers to help them build well-architected applications on the AWS platform, and is dedicated to solving technology challenges and assisting with their cloud journey.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/07/mani.jpeg\" alt=\"\" width=\"100\" height=\"133\">&nbsp;is a Tech Lead – Generative AI Specialists, author of the book Applied Machine Learning and High-Performance Computing on AWS, and a member of the Board of Directors for Women in Manufacturing Education Foundation Board. She leads machine learning projects in various domains such as computer vision, natural language processing, and generative AI. She speaks at internal and external conferences such AWS re:Invent, Women in Manufacturing West, YouTube webinars, and GHC 23. In her free time, she likes to go for long runs along the beach.</p>","contentLength":15255,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Current state of machine learning and intelligent systems","url":"https://www.datasciencecentral.com/current-state-of-machine-learning-and-intelligent-systems/","date":1739378698,"author":"Dan Wilson","guid":60,"unread":true,"content":"<p>Interview with Dr. Andrea Isoni – SHOW 16 Intelligent systems are evolving faster than ever, and keeping up with the latest advancements requires expertise, foresight, and a deep understanding of both the technological and regulatory landscapes. In&nbsp;AI Think Tank Podcast – Show 16, I had the pleasure of sitting down with&nbsp;Dr. Andrea Isoni, Director and…&nbsp;<a href=\"https://www.datasciencecentral.com/current-state-of-machine-learning-and-intelligent-systems/\" rel=\"bookmark\">Read More »</a></p>","contentLength":375,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Meta’s New AI: Outrageously Good!","url":"https://www.youtube.com/watch?v=m6aaQoPv5r8","date":1739372626,"author":"Two Minute Papers","guid":328,"unread":true,"content":"<article>❤️ Check out Lambda here and sign up for their GPU Cloud: https://lambdalabs.com/papers\n\n📝 The paper \"VideoJAM: Joint Appearance-Motion Representations for Enhanced Motion Generation in Video Models\" is available here:\nhttps://hila-chefer.github.io/videojam-paper.github.io/\n\nVs Veo2: https://x.com/TomLikesRobots/status/1888279188336963725\n\n📝 My paper on simulations that look almost like reality is available for free here:\nhttps://rdcu.be/cWPfD \n\nOr this is the orig. Nature Physics link with clickable citations:\nhttps://www.nature.com/articles/s41567-022-01788-5\n\n🙏 We would like to thank our generous Patreon supporters who make Two Minute Papers possible:\nBenji Rabhan, B Shang, Christian Ahlin, Gordon Child, John Le, Juan Benet, Kyle Davis, Loyal Alchemist, Lukas Biewald, Michael Tedder, Owen Skarpness, Richard Sundvall, Steef, Taras Bobrovytsky, Thomas Krcmar, Tybie Fitzhugh, Ueli GallizziIf you wish to appear here or pick up other perks, click here: https://www.patreon.com/TwoMinutePapers\n\nMy research: https://cg.tuwien.ac.at/~zsolnai/\nX/Twitter: https://twitter.com/twominutepapers\nThumbnail design: Felícia Zsolnai-Fehér - http://felicia.hu</article>","contentLength":1174,"flags":null,"enclosureUrl":"https://www.youtube.com/v/m6aaQoPv5r8?version=3","enclosureMime":"","commentsUrl":null},{"title":"5 LLM Prompting Techniques Every Developer Should Know","url":"https://www.kdnuggets.com/5-llm-prompting-techniques-every-developer-should-know","date":1739372427,"author":"Bala Priya C","guid":249,"unread":true,"content":"<article>Want to make the most out of large language models? Check out these prompting techniques you can start using today.</article>","contentLength":115,"flags":null,"enclosureUrl":"https://www.kdnuggets.com/wp-content/uploads/llm-prompting.png","enclosureMime":"","commentsUrl":null},{"title":"Top 5 Freelancer Websites Better Than Fiverr and Upwork","url":"https://www.kdnuggets.com/top-5-freelancer-websites-better-fiverr-upwork","date":1739365235,"author":"Abid Ali Awan","guid":248,"unread":true,"content":"<article>Discover freelancing platforms that care about you, not just your money, offering low commission rate, better policies, and higher earning potential.</article>","contentLength":149,"flags":null,"enclosureUrl":"https://www.kdnuggets.com/wp-content/uploads/awan_top_5_freelancer_websites_better_fiverr_upwork_4.png","enclosureMime":"","commentsUrl":null},{"title":"The difference between metrics and scorers","url":"https://www.youtube.com/watch?v=67KMDSitw1M","date":1739356864,"author":"probabl","guid":369,"unread":true,"content":"<article>You can easily write custom metric functions for scikit-learn, but you need to take an extra step if you want to use those metrics in a hyperparameter search. To add a number there, you need to use a scorer instead. The goal of this video is to explain the difference and to show how to leverage the `make_scorer` helper utility here.\n\nWebsite: https://probabl.ai/\nLinkedIn: https://www.linkedin.com/company/probabl\nBluesky: https://bsky.app/profile/probabl.bsky.social\nTwitter: https://x.com/probabl_ai\nDiscord: https://discord.probabl.ai\n\nWe also host a podcast called Sample Space, which you can find on your favourite podcast player. All the links can be found here:\nhttps://rss.com/podcasts/sample-space/\n\n#probabl</article>","contentLength":719,"flags":null,"enclosureUrl":"https://www.youtube.com/v/67KMDSitw1M?version=3","enclosureMime":"","commentsUrl":null},{"title":"Meta SAM 2.1 is now available in Amazon SageMaker JumpStart","url":"https://aws.amazon.com/blogs/machine-learning/meta-sam-2-1-is-now-available-in-amazon-sagemaker-jumpstart/","date":1739315351,"author":"Marco Punio","guid":126,"unread":true,"content":"<p><em>This blog post is co-written with George Orlin from Meta.</em></p><p>Today, we are excited to announce that Meta’s <a href=\"https://ai.meta.com/sam2/\" target=\"_blank\" rel=\"noopener\">Segment Anything Model (SAM) 2.1</a> vision segmentation model is publicly available through <a href=\"https://aws.amazon.com/sagemaker/jumpstart/\" target=\"_blank\" rel=\"noopener\">Amazon SageMaker JumpStart</a> to deploy and run inference. Meta SAM 2.1 provides state-of-the-art video and image segmentation capabilities in a single model. This cutting-edge model supports long-context processing, complex segmentation scenarios, and fine-grained analysis, making it ideal for automating processes for various industries such as medical imaging in healthcare, satellite imagery for environment monitoring, and object segmentation for autonomous systems. Meta SAM 2.1 is well suited for zero-shot object segmentation and accurate object detection based on simple prompts such as point coordinates and bounding boxes in a frame for video tracking and image masking.</p><p>This model was predominantly trained on AWS, and AWS will also be the first cloud provider to make it available to customers. In this post, we walk through how to discover and deploy the Meta SAM 2.1 model using SageMaker JumpStart.</p><p>Meta SAM 2.1 is a state-of-the-art vision segmentation model designed for high-performance computer vision tasks, enabling advanced object detection and segmentation workflows. Building upon its <a href=\"https://segment-anything.com/\" target=\"_blank\" rel=\"noopener\">predecessor</a>, version 2.1 introduces enhanced segmentation accuracy, robust generalization across diverse datasets, and scalability for production-grade applications. These features enable AI researchers and developers in computer vision, image processing, and data-driven research to improve tasks that require detailed analysis segmentation across multiple fields.</p><p>Meta SAM 2.1 has a streamlined architecture that is optimized for integration with popular model-serving frameworks like TorchServe and can be deployed on <a href=\"https://aws.amazon.com/sagemaker-ai\" target=\"_blank\" rel=\"noopener\">Amazon SageMaker AI</a> to power real-time or batch inference pipelines. Meta SAM 2.1 empowers organizations to achieve precise segmentation outcomes in vision-centric workflows with minimal configuration and maximum efficiency.</p><p>Meta SAM 2.1 offers multiple variants—Tiny, Small, Base Plus, and Large—available now on SageMaker JumpStart, balancing model size, speed, and segmentation performance to cater to diverse application needs.</p><h2>SageMaker JumpStart overview</h2><p>SageMaker JumpStart offers access to a broad selection of publicly available foundation models (FMs). These pre-trained models serve as powerful starting points that can be deeply customized to address specific use cases. You can now use state-of-the-art model architectures, such as language models, computer vision models, and more, without having to build them from scratch.</p><p>With SageMaker JumpStart, you can deploy models in a secure environment. Models hosted on JumpStart can be provisioned on dedicated SageMaker Inference instances, including <a href=\"https://aws.amazon.com/machine-learning/trainium/\" target=\"_blank\" rel=\"noopener\">AWS Trainium</a> and <a href=\"https://aws.amazon.com/machine-learning/inferentia/\" target=\"_blank\" rel=\"noopener\">AWS Inferentia</a> based instances, and are isolated within your virtual private cloud (VPC). This enforces data security and compliance, because the models operate under your own VPC controls, rather than in a shared public environment. After deploying an FM, you can further customize and fine-tune it using the extensive capabilities of SageMaker AI, including SageMaker Inference for deploying models and container logs for improved observability. With SageMaker AI, you can streamline the entire model deployment process.</p><p>Make sure you have the following prerequisites to deploy Meta SAM 2.1 and run inference:</p><h2>Discover Meta SAM 2.1 in SageMaker JumpStart</h2><p>SageMaker JumpStart provides FMs through two primary interfaces: SageMaker Studio and the <a href=\"https://github.com/aws/sagemaker-python-sdk\" target=\"_blank\" rel=\"noopener\">SageMaker Python SDK.</a> This provides multiple options to discover and use hundreds of models for your specific use case.</p><p>SageMaker Studio is a comprehensive IDE that offers a unified, web-based interface for performing all aspects of the machine learning (ML) development lifecycle. From preparing data to building, training, and deploying models, SageMaker Studio provides purpose-built tools to streamline the entire process. In SageMaker Studio, you can access SageMaker JumpStart to discover and explore the extensive catalog of FMs available for <a href=\"https://aws.amazon.com/blogs/machine-learning/reduce-model-deployment-costs-by-50-on-average-using-sagemakers-latest-features/\" target=\"_blank\" rel=\"noopener\">deployment to inference capabilities on SageMaker Inference</a>.</p><p>You can access the SageMaker JumpStart UI through either <a href=\"https://aws.amazon.com/sagemaker/unified-studio/\" target=\"_blank\" rel=\"noopener\">Amazon SageMaker Unified Studio</a> or SageMaker Studio. To deploy Meta SAM 2.1 using the SageMaker JumpStart UI, complete the following steps:</p><p>In SageMaker Unified Studio, on the menu, choose .</p><p>If you’re already on the SageMaker Studio console, choose  in the navigation pane.</p><p>You will be prompted to create a project, after which you can begin deployment.</p><p>Alternatively, you can use the SageMaker Python SDK to programmatically access and use SageMaker JumpStart models. This approach allows for greater flexibility and integration with existing AI/ML workflows and pipelines. By providing multiple access points, SageMaker JumpStart helps you seamlessly incorporate pre-trained models into your AI/ML development efforts, regardless of your preferred interface or workflow.</p><h2>Deploy Meta SAM 2.1 for inference using SageMaker JumpStart</h2><p>On the SageMaker JumpStart landing page, you can discover the public pre-trained models offered by SageMaker AI. You can choose the Meta model provider tab to discover the Meta models available.</p><p>If you’re using SageMaker Studio and don’t see the SAM 2.1 models, update your SageMaker Studio version by shutting down and restarting. For more information about version updates, refer to <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/studio-tasks-update-apps.html\" target=\"_blank\" rel=\"noopener\">Shut down and Update Studio Classic Apps</a>.</p><p>You can choose the model card to view details about the model such as license, data used to train, and how to use. You can also find two buttons,  and , which help you use the model.</p><p>When you choose , you should be prompted to the next screen to choose an endpoint name and instance type to initiate deployment.</p><p>Upon defining your endpoint settings, you can proceed to the next step to use the model.</p><h2>Deploy Meta SAM 2.1 vision segmentation model for inference using the Python SDK</h2><p>When you choose , model deployment will start. Alternatively, you can deploy through the example notebook by choosing . The notebook provides end-to-end guidance on how to deploy the model for inference and clean up resources.</p><p>To deploy using a notebook, you start by selecting an appropriate model, specified by the . You can deploy any of the selected models on SageMaker AI.</p><p>You can deploy a Meta SAM 2.1 vision segmentation model using SageMaker JumpStart with the following SageMaker Python SDK code:</p><div><pre><code>from sagemaker.jumpstart.model import JumpStartModel \nmodel = JumpStartModel(model_id = \"meta-vs-sam-2-1-hiera-tiny\") \npredictor = model.deploy()</code></pre></div><p>This deploys the model on SageMaker AI with default configurations, including default instance type and default VPC configurations. You can change these configurations by specifying non-default values in <a href=\"https://sagemaker.readthedocs.io/en/stable/api/inference/model.html#sagemaker.jumpstart.model.JumpStartModel\" target=\"_blank\" rel=\"noopener\">JumpStartModel</a>. After it’s deployed, you can run inference against the deployed endpoint through the SageMaker predictor. There are three tasks that are available with this endpoint: automatic mask generator, image predictor, and video predictor. We provide a code snippet for each later in this post. To use the predictor, a certain payload schema needs to be followed. The endpoint has sticky sessions enabled, so to start inference, you need to send a  payload:</p><div><pre><code>def start_session(asset_type, asset_path):\n\n    asset_base64 = None\n    \n     with open(image_path, 'rb') as f:\n            asset_base64 = base64.b64encode(f.read()).decode('utf-8')\n    \n    response = predictor.invoke_endpoint(\n        EndpointName=endpoint_name,\n        ContentType='application/json',\n        Body=json.dumps({\n                    \"type\": \"start_session\",\n                    \"input_type\": asset_type,\n                    \"path\": asset_base64 \n                }),\n        SessionId=\"NEW_SESSION\",\n    )\n    \n    session_id = response.headers.get(\"x-amzn-sagemaker-new-session-id\")\n    \n    return session_id\n</code></pre></div><p>The  invocation needs an input media type of either image or video and the base64 encoded data of the media. This will launch a session with an instance of the model and load the media to be segmented.</p><p>To close a session, send a  invocation:</p><div><pre><code>def close_session(session_id):\n    response = predictor.invoke_endpoint(\n        EndpointName=endpoint_name,\n        ContentType='application/json',\n        Body=json.dumps({\n                    \"type\": \"close_session\",\n                    \"session_id\": session_id\n                }),\n        SessionId=session_id,\n    )\n    \n    session_id = response.headers.get(\"x-amzn-sagemaker-closed-session-id\")\n    \n    return session_id\n</code></pre></div><p>If <code>x-amzn-sagemaker-closed-session-id</code> exists as a header, then the session has been successfully closed.</p><p>To continue a session and retrieve the session ID of the existing session, the response header will have the <code>x-amzn-sagemaker-session-id</code> key with the current session ID for any operation that is not  or . Operations that aren’t  or  need to be invoked with a response stream. This is due to the size of the resulting payload being larger than what SageMaker real-time endpoints can return.</p><p>This is a basic example of interacting with the SAM 2.1 SageMaker JumpStart endpoint with sticky sessions. The following examples for each of the tasks reference these operations without repeating them. The returned data is of mime type JSONL. For more complete examples, refer to the example notebooks for Meta SAM 2.1 on SageMaker Jumpstart.</p><h2>Recommended instances and benchmarks</h2><p>The following table lists all the Meta SAM 2.1 models available in SageMaker JumpStart along with the , default instance types, and maximum number of total tokens (sum of number of input tokens and number of generated tokens) supported for each of these models. For increased context length, you can modify the default instance type in the SageMaker JumpStart UI.</p><table border=\"1px\" cellpadding=\"5px\"><tbody><tr></tr><tr><td width=\"83\">meta-vs-sam-2-1-hiera-tiny</td><td width=\"161\">ml.g6.24xlarge (5.5 MB total image or video size)</td><td width=\"267\"></td></tr><tr><td width=\"83\">meta-vs-sam-2-1-hiera-small</td><td width=\"161\">ml.g6.24xlarge (5.5 MB total image or video size)</td><td width=\"267\"></td></tr><tr><td width=\"83\">meta-vs-sam-2-1-hiera-base-plus</td><td width=\"161\">ml.g6.24xlarge (5.5 MB total image or video size)</td><td width=\"267\"></td></tr><tr><td width=\"83\">meta-vs-sam-2-1-hiera-large</td><td width=\"161\">ml.g6.24xlarge (5.5 MB total image or video size)</td><td width=\"267\"></td></tr></tbody></table><h2>Meta SAM 2.1 use cases: Inference and prompt examples</h2><p>After you deploy the model using SageMaker JumpStart, you should be able to see a reference Jupyter notebook that references the parser and helper functions needed to begin using Meta SAM 2.1. After you follow those cells in the notebook, you should be ready to begin using the model’s vision segmentation capabilities.</p><p>Meta SAM 2.1 offers support for three different tasks (automatic mask generator, image predictor, video predictor) to generate masks for various objects in images, including object tracking in videos. In the following examples, we demonstrate how to use the automatic mask generator and image predictor on a JPG of a truck. This  file is stored in the  bucket; you can access it with the following code:</p><div><pre><code>s3_bucket = f\"jumpstart-cache-prod-{region}\"\nkey_prefix = \"inference-notebook-assets\"\n\ndef download_from_s3(key_filenames):\n    for key_filename in key_filenames:\n        s3.download_file(s3_bucket, f\"{key_prefix}/{key_filename}\", key_filename)\n        \ntruck_jpg = \"truck.jpg\"\n\n#Download images.\ndownload_from_s3(key_filenames=[truck_jpg])\ndisplay(Image(filename=truck_jpg))\n</code></pre></div><p>After you have your image and it is encoded, you can create masks for objects in the image. For use cases where you want to generate masks for every object in the image, you can use the automatic mask generator task.</p><p>The automatic mask generator is great for AI researchers for computer vision tasks and applications such as medical imaging and diagnostics to automatically segment regions of interest like tumors or specific organs to provide more accurate diagnostic support. Additionally, the automatic mask generator can be particularly useful in the autonomous vehicle space, in which it can segment out elements in a camera like pedestrians, vehicles, and other objects. Let’s use the automatic mask generator to generate masks for all the objects in .</p><p>The following code is the prompt to generate masks for your base64 encoded image:</p><div><pre><code># Start session\nsession_id = start_session(\"image\", truck_jpg)\n    \n# Generate and visualize masks with basic parameters\nresponse = runtime_client.invoke_endpoint_with_response_stream(\n        EndpointName=endpoint_name,\n        ContentType='application/json',\n        Body=json.dumps({\n            \"type\": \"generate_automatic_masks\",\n            \"session_id\": session_id,\n            \"points_per_side\": 32,\n            \"min_mask_region_area\": 100\n        }),\n        SessionId=session_id,\n        Accept=\"application/jsonlines\"\n    )\n    \n# Parse response stream\nparser = StreamParser()\nfor event in response['Body']:\n    parser.write(event)\n\nmasks = parser.get_responses()\n\n# End session\nend_session(session_id)\n</code></pre></div><p>We receive the following output (parsed and visualized).</p><p>Additionally, you can choose which objects in the provided image you want to create a mask for by adding points within that object for Meta SAM 2.1 to create. A use case for the image predictor can be valuable for tasks related to design and modeling by automating processes that typically require manual efforts. For example, the image predictor can automate turning 2D images into 3D models by analyzing 2D images of blueprints, sketches, or floor plans and generating preliminary 3D models. This is one of many examples of how the image predictor can act as a bridge between 2D and 3D construction across many different tasks. We use the following image with the points that we used to prompt Meta SAM 2.1 for masking the object.</p><p>The following code is used to prompt Meta SAM 2.1 and plot the coordinates:</p><div><pre><code># Start session\nsession_id = start_session(\"image\", truck_jpg)\n\npoints = [\n            {\"type\": \"point\", \"coordinates\": [500, 375], \"label\": 1},\n            {\"type\": \"point\", \"coordinates\": [1125, 625], \"label\": 1}\n         ]\n    \n# Add multiple points\nresponse = runtime_client.invoke_endpoint_with_response_stream(\n        EndpointName=endpoint_name,\n        ContentType='application/json',\n        Body=json.dumps({\n            \"type\": \"add_points\",\n            \"session_id\": session_id,\n            \"points\": [p[\"coordinates\"] for p in points],\n            \"labels\": [p[\"label\"] for p in points],\n            \"clear_old_points\": clear_old_point,\n        }),\n        SessionId=session_id,\n        Accept=\"application/jsonlines\"\n    )\n\n# Parse response stream\nparser = StreamParser()\nfor event in response['Body']:\n    parser.write(event)\n\n# Intermediate Response\nmasks = parser.get_responses()\n    \nresponse = runtime_client.invoke_endpoint_with_response_stream(\n        EndpointName=endpoint_name,\n        ContentType='application/json',\n        Body=json.dumps({\n            \"type\": \"predict\",\n            \"session_id\": session_id,\n            \"multimask_output\": True,\n            \"return_logits\": True\n        }),\n        SessionId=session_id,\n        Accept=\"application/jsonlines\"\n    )\n\n# Parse response stream\nparser = StreamParser()\nfor event in response['Body']:\n    parser.write(event)\n\nmasks = parser.get_responses()\n\n# End session\nend_session(session_id)\n</code></pre></div><p>We receive the following output (parsed and visualized).</p><p>We now demonstrate how to prompt Meta SAM 2.1 for object tracking on video. One use case would be for ergonomic data collection and training purposes. You can use the video predictor to analyze the movement and posture of humans in real time, serving as a way to reduce injury and improve performance by setting alarms for bad posture or movements. Let’s start by accessing the  file [1] from the  S3 bucket defined in the following code:</p><div><pre><code>basketball_mp4 = \"basketball-layup.mp4\"\n\n#Download video\ndownload_from_s3(key_filenames=[basketball_mp4])\ndisplay(Video(filename=basketball_mp4))</code></pre></div><p>The following code shows how you can set up the prompt format to track objects in the video. The first object will use coordinates to track and not track, and the second object will track one coordinate.</p><div><pre><code># Start session\nsession_id = start_session(\"video\", basketball_mp4)\n\n# Object 1\nprompts1 = [\n        {\"type\": \"point\", \"coordinates\": [1478, 649], \"label\": 1},\n        {\"type\": \"point\", \"coordinates\": [1433, 689], \"label\": 0},\n    ]\n    \n# Extract points and labels\npoints = []\nlabels = []\nfor prompt in prompts1:\n    if prompt[\"type\"] == \"point\":\n        points.append(prompt[\"coordinates\"])\n        labels.append(prompt[\"label\"])\n\nrequest = {\n        \"type\": \"add_points\",\n        \"session_id\": session_id,\n        \"frame_index\": 0,\n        \"object_id\": 1,\n        \"points\": points,\n        \"labels\": labels,\n        \"clear_old_points\": True,\n    }\n    \n# Add multiple points\nresponse = runtime_client.invoke_endpoint_with_response_stream(\n        EndpointName=endpoint_name,\n        ContentType='application/json',\n        Body=json.dumps(request),\n        SessionId=session_id,\n        Accept=\"application/jsonlines\"\n    )\n\n# Parse response stream\nparser = StreamParser()\nfor event in response['Body']:\n    parser.write(event)\n\n# Intermediate Response\nmasks = parser.get_responses()\n\n# Object 2\nprompts2 = [{\"type\": \"point\", \"coordinates\": [1433, 689], \"label\": 1}]\n\n# Extract points and labels\npoints = []\nlabels = []\nfor prompt in prompts2:\n    if prompt[\"type\"] == \"point\":\n        points.append(prompt[\"coordinates\"])\n        labels.append(prompt[\"label\"])\n\nrequest = {\n        \"type\": \"add_points\",\n        \"session_id\": session_id,\n        \"frame_index\": 0,\n        \"object_id\": 2,\n        \"points\": points,\n        \"labels\": labels,\n        \"clear_old_points\": True,\n    }\n    \n# Add multiple points\nresponse = runtime_client.invoke_endpoint_with_response_stream(\n        EndpointName=endpoint_name,\n        ContentType='application/json',\n        Body=json.dumps(request),\n        SessionId=session_id,\n        Accept=\"application/jsonlines\"\n    )\n\n# Parse response stream\nparser = StreamParser()\nfor event in response['Body']:\n    parser.write(event)\n\n# Intermediate Response\nmasks = parser.get_responses()\n    \nresponse = runtime_client.invoke_endpoint_with_response_stream(\n        EndpointName=endpoint_name,\n        ContentType='application/json',\n        Body=json.dumps({\n            \"type\": \"propagate_in_video\",\n            \"session_id\": session_id,\n            \"start_frame_index\": 0,\n        }),\n        SessionId=session_id,\n        Accept=\"application/jsonlines\"\n    )\n\n# Parse response stream\nparser = StreamParser()\nfor event in response['Body']:\n    parser.write(event)\n\nmasks = parser.get_responses()\n\n# End session\nend_session(session_id)\n</code></pre></div><p>We receive the following output (parsed and visualized).</p><p>Here we can see that Meta SAM 2.1 Tiny was able to successfully track the objects based off the coordinates that were provided in prompt.</p><p>To avoid incurring unnecessary costs, when you’re done, delete the SageMaker AI endpoints using the following code:</p><div><pre><code>predictor.delete_model()\npredictor.delete_endpoint()</code></pre></div><p>Alternatively, to use the SageMaker AI console, complete the following steps:</p><ol><li>On the SageMaker AI console, under in the navigation pane, choose</li><li>Search for the embedding and text generation endpoints.</li><li>On the endpoint details page, choose .</li><li>Choose  again to confirm.</li></ol><p>In this post, we explored how SageMaker JumpStart empowers data scientists and ML engineers to discover, access, and deploy a wide range of pre-trained FMs for inference, including Meta’s most advanced and capable models to date. Get started with SageMaker JumpStart and Meta SAM 2.1 models today. For more information about SageMaker JumpStart, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/studio-jumpstart.html\" target=\"_blank\" rel=\"noopener\">SageMaker JumpStart pretrained models</a> and <a href=\"https://aws.amazon.com/sagemaker/jumpstart/getting-started/?sagemaker-jumpstart-cards.sort-by=item.additionalFields.priority&amp;sagemaker-jumpstart-cards.sort-order=asc&amp;awsf.sagemaker-jumpstart-filter-product-type=*all&amp;awsf.sagemaker-jumpstart-filter-text=*all&amp;awsf.sagemaker-jumpstart-filter-vision=*all&amp;awsf.sagemaker-jumpstart-filter-tabular=*all&amp;awsf.sagemaker-jumpstart-filter-audio-tasks=*all&amp;awsf.sagemaker-jumpstart-filter-multimodal=*all&amp;awsf.sagemaker-jumpstart-filter-RL=*all\" target=\"_blank\" rel=\"noopener\">Getting started with Amazon SageMaker JumpStart</a>.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2024/08/26/Marco-Punio.jpg\" alt=\"\" width=\"100\" height=\"134\"><a href=\"https://www.linkedin.com/in/marcpunio/\" target=\"_blank\" rel=\"noopener\">Marco Punio</a> is a Sr. Specialist Solutions Architect focused on generative AI strategy, applied AI solutions, and conducting research to help customers hyper-scale on AWS. As a member of the 3rd Party Model Provider Applied Sciences Solutions Architecture team at AWS, he is a Global Lead for the Meta – AWS Partnership and technical strategy. Based in Seattle, WA, Marco enjoys writing, reading, exercising, and building applications in his free time.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/11/deepak-rupakula-100.jpg\" alt=\"\" width=\"100\" height=\"140\"><a href=\"https://www.linkedin.com/in/deepak-rupakula-042b956/\" target=\"_blank\" rel=\"noopener\">Deepak Rupakula</a> is a Principal GTM lead in the specialists group at AWS. He focuses on developing GTM strategy for large language models like Meta across AWS services like Amazon Bedrock and Amazon SageMaker AI. With over 15 years of experience in the tech industry, his experience includes leadership roles in product management, customer success, and analytics.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/11/harish-rao-100.jpg\" alt=\"\" width=\"100\" height=\"122\"><a href=\"https://www.linkedin.com/in/harishvs/\" target=\"_blank\" rel=\"noopener\">Harish Rao</a> is a Senior Solutions Architect at AWS, specializing in large-scale distributed AI training and inference. He empowers customers to harness the power of AI to drive innovation and solve complex challenges. Outside of work, Harish embraces an active lifestyle, enjoying the tranquility of hiking, the intensity of racquetball, and the mental clarity of mindfulness practices.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/11/baladithya-balamurugan-100.jpg\" alt=\"\" width=\"100\" height=\"120\"><a href=\"https://www.linkedin.com/in/baladithyabalamurugan/\" target=\"_blank\" rel=\"noopener\">Baladithya Balamurugan</a> is a Solutions Architect at AWS focused on ML deployments for inference and using AWS Neuron to accelerate training and inference. He works with customers to enable and accelerate their ML deployments on services such as Amazon SageMaker AI and Amazon EC2. Based in San Francisco, Baladithya enjoys tinkering, developing applications, and building his homelab in his free time.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2020/12/01/Banu-Nagasundaram.jpg\" alt=\"\" width=\"101\" height=\"140\"><a href=\"https://www.linkedin.com/in/banunagasundaram/\" target=\"_blank\" rel=\"noopener\">Banu Nagasundaram</a> leads product, engineering, and strategic partnerships for Amazon SageMaker JumpStart, SageMaker AI’s machine learning and generative AI hub. She is passionate about building solutions that help customers accelerate their AI journey and unlock business value.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2024/09/10/naman.png\" alt=\"\" width=\"100\" height=\"133\"><a href=\"https://www.linkedin.com/in/namannandan/\" target=\"_blank\" rel=\"noopener\">Naman Nandan</a> is a software development engineer at AWS, specializing in enabling large-scale AI/ML inference workloads on Amazon SageMaker AI using TorchServe, a project jointly developed by AWS and Meta. In his free time, he enjoys playing tennis and going on hikes.</p>","contentLength":21819,"flags":null,"enclosureUrl":"https://d2908q01vomqb2.cloudfront.net/artifacts/DBSBlogs/ML-17926/basketball-layup-masked.mp4","enclosureMime":"","commentsUrl":null},{"title":"Falcon 3 models now available in Amazon SageMaker JumpStart","url":"https://aws.amazon.com/blogs/machine-learning/falcon-3-models-now-available-in-amazon-sagemaker-jumpstart/","date":1739312187,"author":"Niithiyn Vijeaswaran","guid":125,"unread":true,"content":"<h2>Overview of the Falcon 3 family of models</h2><p>The Falcon 3 family, developed by Technology Innovation Institute (TII) in Abu Dhabi, represents a significant advancement in open source language models. This collection includes five base models ranging from 1 billion to 10 billion parameters, with a focus on enhancing science, math, and coding capabilities. The family consists of Falcon3-1B-Base, Falcon3-3B-Base, Falcon3-Mamba-7B-Base, Falcon3-7B-Base, and Falcon3-10B-Base along with their instruct variants.</p><p>These models showcase innovations such as efficient pre-training techniques, scaling for improved reasoning, and knowledge distillation for better performance in smaller models. Notably, the Falcon3-10B-Base model achieves state-of-the-art performance for models under 13 billion parameters in zero-shot and few-shot tasks. The Falcon 3 family also includes various fine-tuned versions like Instruct models and supports different quantization formats, making them versatile for a wide range of applications.</p><p>Currently, SageMaker JumpStart offers the base versions of Falcon3-3B, Falcon3-7B, and Falcon3-10B, along with their corresponding instruct variants, as well as Falcon3-1B-Instruct.</p><h2>Get started with SageMaker JumpStart</h2><p>SageMaker JumpStart is a machine learning (ML) hub that can help accelerate your ML journey. With SageMaker JumpStart, you can evaluate, compare, and select pre-trained foundation models (FMs), including Falcon 3 models. These models are fully customizable for your use case with your data.</p><p>Deploying a Falcon 3 model through SageMaker JumpStart offers two convenient approaches: using the intuitive SageMaker JumpStart UI or implementing programmatically through the SageMaker Python SDK. Let’s explore both methods to help you choose the approach that best suits your needs.</p><h2>Deploy Falcon 3 using the SageMaker JumpStart UI</h2><p>Complete the following steps to deploy Falcon 3 through the JumpStart UI:</p><h2>Deploy Falcon 3 programmatically using the SageMaker Python SDK</h2><p>For teams looking to automate deployment or integrate with existing MLOps pipelines, you can use the SageMaker Python SDK:</p><div><pre><code>from sagemaker.serve.builder.model_builder import ModelBuilder\nfrom sagemaker.serve.builder.schema_builder import SchemaBuilder\nfrom sagemaker.jumpstart.model import ModelAccessConfig\nfrom sagemaker.session import Session\nimport logging\n\nsagemaker_session = Session()\n\nartifacts_bucket_name = sagemaker_session.default_bucket()\nexecution_role_arn = sagemaker_session.get_caller_identity_arn()\n\n\njs_model_id = \"huggingface-llm-falcon-3-10B-base\"\n\ngpu_instance_type = \"ml.g5.12xlarge\"  \n\nresponse = \"Hello, I'm a language model, and I'm here to help you with your English.\"\n\nsample_input = {\n    \"inputs\": \"Hello, I'm a language model,\",\n    \"parameters\": {\"max_new_tokens\": 128, \"top_p\": 0.9, \"temperature\": 0.6},\n}\n\nsample_output = [{\"generated_text\": response}]\n\nschema_builder = SchemaBuilder(sample_input, sample_output)\n\nmodel_builder = ModelBuilder(\n    model=js_model_id,\n    schema_builder=schema_builder,\n    sagemaker_session=sagemaker_session,\n    role_arn=execution_role_arn,\n    log_level=logging.ERROR\n)\n\nmodel= model_builder.build()\n\npredictor = model.deploy(model_access_configs={js_model_id:ModelAccessConfig(accept_eula=True)}, accept_eula=True)</code></pre></div><p>Run inference on the predictor:</p><div><pre><code>predictor.predict(sample_input)</code></pre></div><p>To clean up the model and endpoint, use the following code:</p><div><pre><code>predictor.delete_model()\npredictor.delete_endpoint()</code></pre></div><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2024/05/30/NIITHIYN_ARP-2-1.jpg\" alt=\"\" width=\"100\" height=\"100\">&nbsp;is a Generative AI Specialist Solutions Architect with the Third-Party Model Science team at AWS. His area of focus is generative AI and AWS AI Accelerators. He holds a Bachelor’s degree in Computer Science and Bioinformatics.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2024/11/27/ml-17555-karpmar.jpg\" alt=\"Marc Karp\" width=\"100\" height=\"114\"> is an ML Architect with the Amazon SageMaker Service team. He focuses on helping customers design, deploy, and manage ML workloads at scale. In his spare time, he enjoys traveling and exploring new places.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2024/11/27/ml-17555-raghu.png\" alt=\"Raghu\" width=\"100\" height=\"100\"> is a Senior ML Solutions Architect with the Amazon SageMaker Service team. He focuses on helping customers build, deploy, and migrate ML production workloads to SageMaker at scale. He specializes in machine learning, AI, and computer vision domains, and holds a master’s degree in Computer Science from UT Dallas. In his free time, he enjoys traveling and photography.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2020/12/01/Banu-Nagasundaram.jpg\" alt=\"\" width=\"101\" height=\"140\"> leads product, engineering, and strategic partnerships for SageMaker JumpStart, SageMaker’s machine learning and GenAI hub. She is passionate about building solutions that help customers accelerate their AI journey and unlock business value.</p>","contentLength":4499,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Building a virtual meteorologist using Amazon Bedrock Agents","url":"https://aws.amazon.com/blogs/machine-learning/building-a-virtual-meteorologist-using-amazon-bedrock-agents/","date":1739307184,"author":"Salman Ahmed","guid":124,"unread":true,"content":"<p>The integration of <a href=\"https://aws.amazon.com/ai/generative-ai/\" target=\"_blank\" rel=\"noopener\">generative AI</a> capabilities is driving transformative changes across many industries. Although weather information is accessible through multiple channels, businesses that heavily rely on meteorological data require robust and scalable solutions to effectively manage and use these critical insights and reduce manual processes. This solution demonstrates how to create an AI-powered virtual meteorologist that can answer complex weather-related queries in natural language. We use various AWS services to deploy a complete solution that you can use to interact with an API providing real-time weather information. In this solution, we use <a href=\"https://aws.amazon.com/bedrock/agents/\" target=\"_blank\" rel=\"noopener\">Amazon Bedrock Agents</a>.</p><p>Amazon Bedrock Agents helps to streamline workflows and automate repetitive tasks. Amazon Bedrock Agents can securely connect to your company’s data sources and augments the user’s request with accurate responses. You can use Amazon Bedrock Agents to architect an action schema tailored to your requirements, granting you control whenever the agent initiates the specified action. This versatile approach equips you to seamlessly integrate and execute business logic within your preferred backend service, fostering a cohesive combination of functionality and flexibility. There is also memory retention across the interaction allowing a more personalized user experience.</p><p>In this post, we present a streamlined approach to deploying an AI-powered agent by combining Amazon Bedrock Agents and a <a href=\"https://aws.amazon.com/what-is/foundation-models/\" target=\"_blank\" rel=\"noopener\">foundation model</a> (FM). We guide you through the process of configuring the agent and implementing the specific logic required for the virtual meteorologist to provide accurate weather-related responses. Additionally, we use various AWS services, including <a href=\"https://aws.amazon.com/amplify/\" target=\"_blank\" rel=\"noopener\">AWS Amplify</a> for hosting the front end, <a href=\"https://aws.amazon.com/lambda/\" target=\"_blank\" rel=\"noopener\">AWS Lambda</a> functions for handling request logic, <a href=\"https://aws.amazon.com/cognito/\" target=\"_blank\" rel=\"noopener\">Amazon Cognito</a> for user authentication, and <a href=\"https://aws.amazon.com/iam/\" target=\"_blank\" rel=\"noopener\">AWS Identity and Access Management</a> (IAM) for controlling access to the agent.</p><p>The diagram gives an overview and highlights the key components. The architecture uses Amazon Cognito for user authentication and Amplify as the hosting environment for our front-end application. Amazon Bedrock Agents forwards the details from the user query to the action groups, which further invokes custom Lambda functions. Each action group and Lambda function handles a specific task:</p><ol><li> – Processes geographic coordinates (geo-coordinates) to get details about a specific location</li><li> Gathers weather information for the provided location</li><li> Obtains the current date and time</li></ol><p>You must have the following in place to complete the solution in this post:</p><h2>Deploy solution resources using AWS CloudFormation</h2><p>When you run the AWS CloudFormation template, the following resources are deployed (note that costs will be incurred for the AWS resources used):</p><ul><li>Lambda resources: \n  <ul><li>Function – <code>&lt;Stack name&gt;-geo-coordinates-&lt;auto-generated&gt;</code></li><li>Function – <code>&lt;Stack name&gt;-weather-&lt;auto-generated&gt;</code></li><li>Function – <code>&lt;Stack name&gt;-date-time-&lt;auto-generated&gt;</code></li></ul></li><li>Amazon Bedrock Agents: virtual-meteorologist \n  <ul><li>Action groups (1) – <code>obtain-latitude-longitude-from-place-name</code></li><li>Action groups (2) – <code>obtain-weather-information-with-coordinates</code></li><li>Action groups (3) – <code>get-current-date-time-from-timezone</code></li></ul></li></ul><p>After you deploy the CloudFormation template, copy the following from the tab on the <a href=\"https://console.aws.amazon.com/cloudformation\" target=\"_blank\" rel=\"noopener\">CloudFormation console</a> to be used during the configuration of your application after it’s deployed in AWS Amplify.</p><ul></ul><h2>Deploy the AWS Amplify application</h2><p>You need to manually deploy the Amplify application using the front-end code found on GitHub. Complete the following steps:</p><ol><li>Download the front-end code AWS-Amplify-Frontend.zip from <a href=\"https://github.com/aws-samples/virtual-meteorologist-using-amazon-bedrock-agents\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</li><li>Use the .zip file to manually <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/manual-deploys.html\" target=\"_blank\" rel=\"noopener\">deploy</a> the application in Amplify.</li><li>Return to the Amplify page and use the domain it automatically generated to access the application.</li></ol><h3>Use Amazon Cognito for user authentication</h3><p>Amazon Cognito is an identity service that you can use to authenticate and authorize users. We use Amazon Cognito in our solution to verify the user before they can use the application. We also use identity pool to provide temporary AWS credentials for the user while they interact with Amazon Bedrock API.</p><h3>Use Amazon Bedrock Agents to automate application tasks</h3><p>With Amazon Bedrock Agents, you can build and configure autonomous agents in your application. An agent helps your end users complete actions based on organization data and user input. Agents orchestrate interactions between FMs, data sources, software applications, and user conversations.</p><h3>Use action group to define actions that Amazon Bedrock agents perform</h3><p>An action group defines a set of related actions that an Amazon Bedrock agent can perform to assist users. When configuring an action group, you have options for handling user-provided information, including adding user input to the agent’s action group, passing data to a Lambda function for custom business logic, or returning control directly through the InvokeAgent response. In our application, we created three action groups to give the Amazon Bedrock agent these essential functionalities: retrieving coordinates for specific locations, obtaining current date and time information, and fetching weather data for given locations. These action groups enable the agent to access and process crucial information, enhancing its ability to respond accurately and comprehensively to user queries related to location-based services and weather conditions.</p><h3>Use Lambda for Amazon Bedrock action group</h3><p>As part of this solution, three Lambda functions are deployed to support the action groups defined for our Amazon Bedrock agent:</p><ol><li><strong>Location coordinates Lambda function</strong> – This function is triggered by the <code>obtain-latitude-longitude-from-place-name</code> action group. It takes a place name as input and returns the corresponding latitude and longitude coordinates. The function uses a geocoding service or database to perform this lookup.</li><li><strong>Date and time Lambda function</strong> – Invoked by the <code>get-current-date-time-from-timezone</code> action group, this function provides the current date and time information.</li><li><strong>Weather information Lambda function</strong> – This function is called by the <code>obtain-weather-information-with-coordinates</code> action group. It accepts geo-coordinates from the first Lambda function and returns current weather conditions and forecasts for the specified area. This Lambda function used a weather API to fetch up-to-date meteorological data.</li></ol><p>Each of these Lambda functions receives an input event containing relevant metadata and populated fields from the Amazon Bedrock agent’s API operation or function parameters. The functions process this input, perform their specific tasks, and return a response with the required information. This response is then used by the Amazon Bedrock agent to formulate its reply to the user’s query. By using these Lambda functions, our Amazon Bedrock agent gains the ability to access external data sources and perform complex computations, significantly enhancing its capabilities in handling user requests related to location, time, and weather information.</p><h3>Use AWS Amplify for front-end code</h3><p>Amplify offers a development environment for building secure, scalable mobile and web applications. Developers can focus on their code rather than worrying about the underlying infrastructure. Amplify also integrates with many Git providers. For this solution, we manually upload our front-end code using the method outlined earlier in this post.</p><p>Navigate to the URL provided after you created the application in Amplify. Upon accessing the application URL, you’ll be prompted to provide information related to Amazon Cognito and Amazon Bedrock Agents. This information is required to securely authenticate users and allow the front end to interact with the Amazon Bedrock agent. It enables the application to manage user sessions and make authorized API calls to AWS services on behalf of the user.</p><p>You can enter information with the values you collected from the CloudFormation stack outputs. You’ll be required to enter the following fields, as shown in the following screenshot:</p><ul></ul><p>You need to sign in with your username and password. A temporary password was automatically generated during deployment and sent to the email address you provided when launching the CloudFormation template. At first sign-in attempt, you’ll be asked to reset your password, as shown in the following video.</p><p>Now you can start asking questions in the application, for example, “Can we do barbecue today in Dallas, TX?” In a few seconds, the application will provide you detailed results mentioning if you can do barbecue in Dallas, TX. The following video shows this chat.</p><p>Here are a few sample queries to demonstrate the capabilities of your virtual meteorologist:</p><ol><li>“What’s the weather like in New York City today?”</li><li>“Should I plan an outdoor birthday party in Miami next weekend?”</li><li>“Will it snow in Denver on Christmas Day?”</li><li>“Can I go swimming on a beach in Chicago today?</li></ol><p>These queries showcase the agent’s ability to provide current weather information, offer advice based on weather forecasts, and predict future weather conditions. You can even ask a question related to an activity such as swimming, and it will answer based on the weather conditions if that activity is okay to do.</p><p>If you decide to discontinue using the virtual meteorologist, you can follow these steps to remove it, its associated resources deployed using AWS CloudFormation, and the Amplify deployment:</p><ol><li>Delete the CloudFormation stack: \n  <ol><li>On the AWS CloudFormation console, choose  in the navigation pane.</li><li>Locate the stack you created during the deployment process (you assigned a name to it).</li><li>Select the stack and choose .</li></ol></li><li>Delete the Amplify application and its resources. For instructions, refer to <a href=\"https://aws.amazon.com/getting-started/hands-on/build-web-app-s3-lambda-api-gateway-dynamodb/module-six/\" target=\"_blank\" rel=\"noopener\">Clean Up Resources</a>.</li></ol><p>This solution demonstrates the power of combining Amazon Bedrock Agents with other AWS services to create an intelligent, conversational weather assistant. By using AI and cloud technologies, businesses can automate complex queries and provide valuable insights to their users.</p><p>To learn more about Amazon Bedrock, refer to the following resources:</p><p>To learn more about the Anthropic’s Claude 3.5 Sonnet model, refer to the following resources:</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2024/10/16/salmanah.jpg\" alt=\"Salman Ahmed\" width=\"120\" height=\"160\"> is a Senior Technical Account Manager in AWS Enterprise Support. He enjoys helping customers in the travel and hospitality industry to design, implement, and support cloud infrastructure. With a passion for networking services and years of experience, he helps customers adopt various AWS networking services. Outside of work, Salman enjoys photography, traveling, and watching his favorite sports teams.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2024/10/16/sercast.jpg\" alt=\"Sergio Barraza\" width=\"120\" height=\"160\"> is a Senior Enterprise Support Lead at AWS, helping energy customers design and optimize cloud solutions. With a passion for software development, he guides energy customers through AWS service adoption. Outside work, Sergio is a multi-instrument musician playing guitar, piano, and drums, and he also practices Wing Chun Kung Fu.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2024/10/16/vatsravi.jpg\" alt=\"Ravi Kumar\" width=\"120\" height=\"160\"> is a Senior Technical Account Manager in AWS Enterprise Support who helps customers in the travel and hospitality industry to streamline their cloud operations on AWS. He is a results-driven IT professional with over 20 years of experience. In his free time, Ravi enjoys creative activities like painting. He also likes playing cricket and traveling to new places.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2024/10/16/goyalaws.jpg\" alt=\"Ankush Goyal\" width=\"120\" height=\"160\"> is a Enterprise Support Lead in AWS Enterprise Support who helps customers streamline their cloud operations on AWS. He is a results-driven IT professional with over 20 years of experience.</p>","contentLength":11490,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Amazon Q Business simplifies integration of enterprise knowledge bases at scale","url":"https://aws.amazon.com/blogs/machine-learning/amazon-q-business-simplifies-integration-of-enterprise-knowledge-bases-at-scale/","date":1739293892,"author":"Omar Elkharbotly","guid":123,"unread":true,"content":"<p>In this new era of emerging AI technologies, we have the opportunity to build AI-powered assistants tailored to specific business requirements. <a href=\"https://aws.amazon.com/q/business/\" target=\"_blank\" rel=\"noopener\">Amazon Q Business</a>, a new generative AI-powered assistant, can answer questions, provide summaries, generate content, and securely complete tasks based on data and information in an enterprise’s systems.</p><p>Large-scale data ingestion is crucial for applications such as document analysis, summarization, research, and knowledge management. These tasks often involve processing vast amounts of documents, which can be time-consuming and labor-intensive. However, ingesting large volumes of enterprise data poses significant challenges, particularly in orchestrating workflows to gather data from diverse sources.</p><p>In this post, we propose an end-to-end solution using Amazon Q Business to simplify integration of enterprise knowledge bases at scale.</p><h2>Enhancing AWS Support Engineering efficiency</h2><p>The AWS Support Engineering team faced the daunting task of manually sifting through numerous tools, internal sources, and AWS public documentation to find solutions for customer inquiries. For complex customer issues, the process was especially time-consuming, laborious, and at times extended the wait time for customers seeking resolutions. To address this, the team implemented a chat assistant using Amazon Q Business. This solution ingests and processes data from hundreds of thousands of support tickets, escalation notices, public AWS documentation, re:Post articles, and AWS blog posts.</p><p>By using Amazon Q Business, which simplifies the complexity of developing and managing ML infrastructure and models, the team rapidly deployed their chat solution. The Amazon Q Business pre-built <a href=\"https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/connectors-list.html\" target=\"_blank\" rel=\"noopener\">connectors</a> like <a href=\"http://aws.amazon.com/s3\" target=\"_blank\" rel=\"noopener\">Amazon Simple Storage Service</a> (Amazon S3), document retrievers, and upload capabilities streamlined data ingestion and processing, enabling the team to provide swift, accurate responses to both basic and advanced customer queries.</p><p>In this post, we propose an end-to-end solution using Amazon Q Business to address similar enterprise data challenges, showcasing how it can streamline operations and enhance customer service across various industries. First we discuss end-to-end large-scale data integration with Amazon Q Business, covering data preprocessing, security guardrail implementation, and Amazon Q Business best practices. Then we introduce the solution deployment using three <a href=\"http://aws.amazon.com/cloudformation\" target=\"_blank\" rel=\"noopener\">AWS CloudFormation</a> templates.</p><p>The following architecture diagram represents the high-level design of a solution proven effective in production environments for AWS Support Engineering. This solution uses the powerful capabilities of Amazon Q Business. We will walk through the implementation of key components, including configuring enterprise data sources to build our knowledge base, document indexing and boosting, and implementing comprehensive security controls.</p><ul><li> – An end-user who accesses Amazon Q Business applications with permissions granted by their administrator to perform their job duties</li><li> – A user who manages Amazon Q Business resources and determines feature access for service users within the organization</li><li> – A user responsible for creating and managing access policies for Amazon Q Business through <a href=\"https://aws.amazon.com/iam/identity-center/\" target=\"_blank\" rel=\"noopener\">AWS IAM Identity Center</a></li></ul><p>The following workflow details how a service user accesses the application:</p><ol><li>The service user initiates an interaction with the Amazon Q Business application, accessible through the web experience, which is an endpoint URL.</li><li>The service user’s permissions are authenticated using IAM Identity Center, an AWS solution that connects workforce users to AWS managed applications like Amazon Q Business. It enables end-user authentication and streamlines access management.</li><li>The authenticated service user submits queries in natural language to the Amazon Q Business application.</li><li>The Amazon Q Business application generates and returns answers drawing from the enterprise data uploaded to an S3 bucket, which is connected as a data source to Amazon Q Business. This S3 bucket data is continuously refreshed, making sure that Amazon Q Business accesses the most current information for query responses by using a retriever to pull data from the index.</li></ol><h2>Large-scale data ingestion</h2><p>Before ingesting the data to Amazon Q Business, the data might need transformation into <a href=\"https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/doc-types.html\" target=\"_blank\" rel=\"noopener\">formats</a> supported by Amazon Q Business. Furthermore, it might contain sensitive data or personally identifiable information (PII) requiring redaction. These <a href=\"https://docs.aws.amazon.com/whitepapers/latest/building-data-lakes/data-ingestion-methods.html\" target=\"_blank\" rel=\"noopener\">data ingestion</a> challenges create a need to orchestrate tasks like transformation, redaction, and secure ingestion.</p><p>To facilitate orchestration, this solution incorporates <a href=\"https://aws.amazon.com/step-functions/\" target=\"_blank\" rel=\"noopener\">AWS Step Functions</a>. Step Functions provides a visual workflow service to orchestrate tasks and workloads resiliently and efficiently through built-in AWS integrations and error handling. The solution uses the Step Functions <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/state-map.html\" target=\"_blank\" rel=\"noopener\">Map state</a>, which allows for parallel processing of multiple items in a dataset, thereby efficiently orchestrating workflows and speeding up overall processing.</p><p>The following diagram illustrates an example architecture for ingesting data through an endpoint interfacing with a large corpus.</p><p>Step Functions orchestrates AWS services like <a href=\"https://aws.amazon.com/pm/lambda/\" target=\"_blank\" rel=\"noopener\">AWS Lambda</a> and organization APIs like DataStore to ingest, process, and store data securely. The workflow includes the following steps:</p><ol><li>The Prepare Map Input Lambda function prepares the required input for the Map state. For example, the Datastore API might require certain input like date periods to query data. This step can be used to define the date periods to be used by the Map state as an input.</li><li>The Ingest Data Lambda function fetches data from the Datastore API—which can be in or outside of the virtual private cloud (VPC)—based on the inputs from the Map state. To handle large volumes, the data is split into smaller chunks to mitigate Lambda function overload. This enables Step Functions to manage the workload, retry failed chunks, and isolate failures to individual chunks instead of disrupting the entire ingestion process.</li><li>The fetched data is put into an S3 data store bucket for processing.</li><li>The Process Data Lambda function redacts sensitive data through <a href=\"https://aws.amazon.com/comprehend/\" target=\"_blank\" rel=\"noopener\">Amazon Comprehend</a>. Amazon Comprehend provides real-time APIs, such as <a href=\"https://docs.aws.amazon.com/comprehend/latest/APIReference/API_DetectPiiEntities.html\" target=\"_blank\" rel=\"noopener\">DetectPiiEntities</a> and <a href=\"https://docs.aws.amazon.com/comprehend/latest/APIReference/API_DetectEntities.html\" target=\"_blank\" rel=\"noopener\">DetectEntities</a>, which use natural language processing (NLP) machine learning (ML) models to identify text portions for redaction. When Amazon Comprehend detects PII, the terms will be redacted and replaced by a character of your choice (such as *). You can also use regular expressions to remove identifiers with predetermined formats.</li><li>Finally, the Lambda function creates two separate files: \n  <ol type=\"a\"><li>A sanitized data document in an Amazon Q Business <a href=\"https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/doc-types.html\" target=\"_blank\" rel=\"noopener\">supported format</a> that will be parsed to generate chat responses.</li><li>A JSON <a href=\"https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/s3-metadata.html\" target=\"_blank\" rel=\"noopener\">metadata</a> file for each document containing additional information to customize chat results for end-users and apply <a href=\"https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/metadata-boosting.html\" target=\"_blank\" rel=\"noopener\">boosting techniques</a> to enhance user experience (which we discuss more in the next section).</li></ol></li></ol><p>The following is the sample metadata file:</p><div><pre><code>{\n&nbsp;&nbsp; &nbsp;\"DocumentId\": \"qbusiness-ug.pdf.txt\",\n&nbsp;&nbsp; &nbsp;\"Attributes\": {\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;\"_created_at\": \"2024-10-29T20:27:45+00:00\",\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;\"_last_updated_at\": \"2024-10-29T20:27:45+00:00\",\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;\"_source_uri\": \"https://docs.aws.amazon.com/pdfs/amazonq/latest/qbusiness-ug/qbusiness-ug.pdf\",\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;\"author\": \"AWS\",\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;\"services\": [\"Q Business\"]\n&nbsp;&nbsp; &nbsp;},\n&nbsp;&nbsp; &nbsp;\"Title\": \"Amazon Q Business - User Guide\",\n&nbsp;&nbsp; &nbsp;\"ContentType\": \"plain/text\"\n}</code></pre></div><p>In the preceding JSON file, the  for each data document must be unique. All the other attributes are optional; however, the file has additional attributes like , , and  with values defined.</p><p>The two files are placed in a new S3 folder for Amazon Q to index. Additionally, the raw unprocessed data is deleted from the S3 bucket. You can further restrict access to documents uploaded to an S3 bucket for specific users or groups using <a href=\"https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/s3-user-management.html\" target=\"_blank\" rel=\"noopener\">Amazon S3 access control lists (ACLs)</a>.</p><p>Using the Amazon Q Business <a href=\"https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/supported-connectors.html\" target=\"_blank\" rel=\"noopener\">data source connector</a> feature, we integrated the S3 bucket with our application. This connector functionality enables the consolidation of data from multiple sources into a unified index for the Amazon Q Business application. The service offers various integration options, with Amazon S3 being one of the supported data sources.</p><p>When working with your specific dataset in Amazon Q Business, you can use relevance <a href=\"https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/metadata-boosting.html\" target=\"_blank\" rel=\"noopener\">tuning</a> to enhance the performance and accuracy of search results. This feature allows you to customize how Amazon Q Business prioritizes information within your ingested documents. For example, if your dataset includes product descriptions, customer reviews, and technical specifications, you can use relevance tuning to boost the importance of certain fields. You might choose to prioritize product names in titles, give more weight to recent customer reviews, or emphasize specific technical attributes that are crucial for your business. By adjusting these parameters, you can influence the ranking of search results to better align with your dataset’s unique characteristics and your users’ information needs, ultimately providing more relevant answers to their queries.</p><p>For the metadata file used in this example, we focus on boosting two key metadata attributes:  and . By assigning higher weights to these attributes, we made sure documents with specific titles or services received greater prominence in the search results, improving their visibility and relevance for the users</p><p>The following code is the sample CloudFormation template snippet to enable higher weights to  and :</p><div><pre><code>BoostOverrideConfiguration:\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;Fn::Sub: |\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"nativeIndexConfiguration\": {\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"indexId\": \"${QBusinessIndex.IndexId}\",\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"boostingOverride\": {\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"_document_title\": {\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"stringConfiguration\": {\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"boostingLevel\": \"MEDIUM\"\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"services\": {\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"stringListConfiguration\": {\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"boostingLevel\": \"HIGH\"\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</code></pre></div><h3>Amazon Q Business guardrails</h3><p>Implementing robust security measures is crucial to protect sensitive information. In this regard, Amazon Q Business <a href=\"https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/guardrails.html\" target=\"_blank\" rel=\"noopener\">guardrails</a> or chat controls proved invaluable, offering a powerful solution to maintain data privacy and security.</p><p>Amazon Q Business guardrails provide configurable rules designed to control the application’s behavior. These guardrails act as a safety net, minimizing access, processing, or revealing of sensitive or inappropriate information. By defining boundaries for the application’s operations, organizations can maintain compliance with internal policies and external regulations. You can enable global- or topic-level controls, which control how Amazon Q Business responds to specific topics in chat.</p><p>The following is the sample CloudFormation template snippet to enable topic-level controls:</p><div><pre><code>TopicConfigurations:\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;- name: topic\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;rules:\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- ruleType: CONTENT_BLOCKER_RULE\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ruleConfiguration:\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;contentBlockerRule:\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;systemMessageOverride: This message is blocked as it contains secure content\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;exampleChatMessages:\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- arn:*:ec2:us-east-1:123456789012:instance/i-abcdef123\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- arn:*:ec2:us-west-2:123456789012:vpc/bpc-abcdef123\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- arn:*:kms:eu-west-1:123456789012:key/12345678-1234-12345678-abc12345678\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- s3://bucket/prefix/file.csv\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- arn:*:s3::::bucket-name</code></pre></div><p>This topic-level control blocks the Amazon Q Business chat conversation that has AWS service Amazon Resource Names (ARNs). When similar chat messages have been detected by the Amazon Q Business application, the system will block the responses and return the message “This message is blocked as it contains secure content.”</p><p>For information about deploying the Amazon Q Business application with sample boosting and guardrails, refer to the <a href=\"https://github.com/aws-samples/amazon-q-business-simplified-integration-of-enterprise-knowledge-bases-at-scale\" target=\"_blank\" rel=\"noopener\">GitHub repo.</a></p><p>The following screenshot shows an example of the Amazon Q Business assistant chat landing page.<img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/06/QBusiness.jpg\" alt=\"Q Business landing Page\" width=\"1292\" height=\"660\"></p><p>The following screenshot illustrates the assistant’s behavior if a user includes text that matches one of the similarity-based examples specified in the guardrail topic control.</p><p>To enhance data security, you can deploy <a href=\"https://aws.amazon.com/macie/\" target=\"_blank\" rel=\"noopener\">Amazon Macie</a> classification jobs to scan for sensitive or PII data stored in S3 buckets. The following diagram illustrates a sample notification architecture to alert users on sensitive information that might be inadvertently stored. Macie uses machine learning to automatically discover, classify, and protect sensitive data stored in AWS. It focuses on identifying PII, intellectual property, and other sensitive data types to help organizations meet compliance requirements and protect their data from unauthorized access or breaches.</p><p>The workflow includes the following steps:</p><ol><li>Macie reviews the data store S3 bucket for sensitive information before being ingested.</li><li>An EventBridge rule invokes the Rectify &amp; Notify Lambda function.</li><li>The Lambda function processes the alert, remediates it by removing the affected files from the S3 bucket, and sends a notification using <a href=\"http://aws.amazon.com/sns\" target=\"_blank\" rel=\"noopener\">Amazon Simple Notification Service</a> (Amazon SNS) to the subscribed email addresses.</li></ol><p>This system enables rapid response to potential security alerts, allowing for immediate action to protect sensitive data.</p><p>The Macie detection and subsequent notification system can be demonstrated by uploading a new file to the S3 bucket, such as <code>sample-file-with-credentials.txt</code>, containing the PII data types monitored by Macie, such as fake temporary AWS credentials. After the file is uploaded to Amazon S3 and the scheduled Macie detection job discovers it, the Lambda function immediately removes the file and sends the following notification email to the SNS topic subscribers:</p><div><pre><code>Amazon Macie published a new Finding: \"The S3 object contains credentials data\"\nDescription: \"The S3 object contains credentials data such as AWS secret access keys or private keys.\"\nSeverity: {'score': 3, 'description': 'High'}\nType: SensitiveData:S3Object/Credentials\nCategory: CLASSIFICATION\nOrigin Type: \"SENSITIVE_DATA_DISCOVERY_JOB\"\nSensitive Data Categories: \"['CREDENTIALS']\"\nResources affected:\nBucket=\"&lt;BUCKET_NAME&gt;\",\nKey=\"processed/sample-file-with-credentials.txt\"\nTrying to delete S3 Object: &nbsp;s3://&lt;BUCKET_NAME&gt;/processed/sample-file-with-credentials.txt\nFile deletion succeeded.\n\n-------------\nFull Macie finding event:\n{\n&nbsp; &nbsp;...\n}</code></pre></div><p>Additionally, the findings are visible on the Macie console, as shown in the following screenshot.</p><h3>Additional recommendations</h3><p>To further enhance the security and reliability of the Amazon Q Business application, we recommend implementing the following measures. These additional security and logging implementations make sure the data is protected, alerts are sent in response to potential warnings, and timely actions can be taken for security incidents.</p><ul><li><strong>Amazon CloudWatch logging for Amazon Q Business </strong>– You can use <a href=\"https://aws.amazon.com/pm/cloudwatch/?gclid=EAIaIQobChMIyb-6xaHNiAMVjTrUAR3xqw4uEAAYASAAEgIAd_D_BwE&amp;trk=2dfe7cfe-88b0-4c42-844b-24167b0dc800&amp;sc_channel=ps&amp;ef_id=EAIaIQobChMIyb-6xaHNiAMVjTrUAR3xqw4uEAAYASAAEgIAd_D_BwE:G:s&amp;s_kwcid=AL!4422!3!658520966141!!!g!!!19852661915!149878722660\" target=\"_blank\" rel=\"noopener\">Amazon CloudWatch</a> logging for Amazon Q Business to save the logs for the data source connectors and document-level errors, focusing particularly on failed ingestion jobs. This practice is vital from a security perspective because it allows monitoring and quick identification of issues in the data ingestion process. By tracking failed jobs, potential data loss or corruption can be mitigated, maintaining the reliability and completeness of the knowledge base.</li><li><strong>Unauthorized access monitoring on Amazon S3</strong> – You can implement EventBridge rules to <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-log-s3-data-events.html\" target=\"_blank\" rel=\"noopener\">monitor mutating API actions on the S3 buckets</a>. These rules are configured to invoke SNS notifications when such actions are performed by unauthorized users. Enable <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/enable-server-access-logging.html\" target=\"_blank\" rel=\"noopener\">Amazon S3 server access logging </a>to store detailed access records in a designated bucket, which can be analyzed using <a href=\"http://aws.amazon.com/athena\" target=\"_blank\" rel=\"noopener\">Amazon Athena</a> for deeper insights. This approach provides real-time alerts for immediate response to potential security breaches, while also maintaining a detailed audit trail for thorough security analysis, making sure that only authorized entities can modify critical data.</li></ul><p>In the following sections, we walk through implementing the end-to-end solution. For this solution to work, the following prerequisites are needed:</p><ul><li>A new or existing AWS account that will be the data collection account</li></ul><h2>Configure the data ingestion</h2><p>In this post, we demonstrate the solution using publicly available documentation as our sample dataset. In your implementation, you can adapt this solution to work with your organization’s specific content sources, such as support tickets, JIRA issues, internal wikis, or other relevant documentation.</p><ul><li>Ingestion Lambda function</li><li>Processing Lambda function</li></ul><p>The data ingestion workflow in this example fetches and processes public data from the Amazon Q Business and <a href=\"https://aws.amazon.com/sagemaker/\" target=\"_blank\" rel=\"noopener\">Amazon SageMaker</a> official documentation in PDF format. Specifically, the Ingest Data Lambda function downloads the raw PDF documents, temporarily stores them in Amazon S3, and passes their Amazon S3 URLs to the Process Data Lambda function, which performs the PII redaction (if enabled) and stores the processed documents and their metadata to the S3 path indexed by the Amazon Q Business application.</p><p>You can adapt the Step Functions Lambda code for ingestion and processing according to your own internal data, making sure that the documents and metadata are in a valid format for Amazon Q Business to index, and are properly redacted for PII data.</p><h2>Configure IAM Identity Center</h2><p>You can only have one IAM Identity Center instance per account. If your account already has an Identity Center instance, skip this step and proceed to configuring the Amazon Q Business application.</p><p>You will need to add details for a user such as user name, email, first name, and surname.</p><p>After deploying the CloudFormation template, you will receive an email where you will need to accept the invitation and change the password for the user.</p><p>Before logging in, you will need to deploy the Amazon Q Business application.</p><h2>Configure the Amazon Q Business application</h2><p>You will need to add details such as the IAM Identity Center stack name deployed previously and the S3 bucket name provisioned by the data ingestion stack.</p><p>After you deploy the CloudFormation template, complete the following steps to manage user access:</p><ol><li>On the Amazon Q Business console, choose  in the navigation pane.</li><li>Choose the application you provisioned ().</li><li>Under , choose .</li><li>On the  tab, choose the user you specified when deploying the CloudFormation stack.</li><li>Under , choose  or .</li><li>Choose  and then </li></ol><p>Now you can log in using the user you have specified. You can find the URL for the web experience under .</p><p>If you are unable to log in, make sure that the user has been verified.</p><p>Before you can use the Amazon Q Business application, the data source needs to be synchronized. The application’s data source is configured to sync hourly. It might take some time to synchronize.</p><p>When the synchronization is complete, you should now be able to access the application and ask questions.</p><p>After you’re done testing the solution, you can delete the resources to avoid incurring additional charges. See the <a href=\"https://aws.amazon.com/q/business/pricing/\" target=\"_blank\" rel=\"noopener\">Amazon Q Business pricing page</a> for more information. Follow the instructions in the <a href=\"https://github.com/aws-samples/amazon-q-business-simplified-integration-of-enterprise-knowledge-bases-at-scale/blob/main/README.md\" target=\"_blank\" rel=\"noopener\">GitHub repository</a> to delete the resources and corresponding CloudFormation templates. Make sure to delete the CloudFormation stacks provisioned as follows:</p><ol><li>Delete the Amazon Q Business application stack.</li><li>Delete the IAM Identity Center stack.</li><li>Delete the data ingestion</li><li>For each deleted stack, check for any resources that were skipped in the deletion process, such as S3 buckets.</li></ol><p>Delete any skipped resources on the console.</p><p>In this post, we demonstrated how to build a knowledge base solution by integrating enterprise data with Amazon Q Business using Amazon S3. This approach helps organizations improve operational efficiency, reduce response times, and gain valuable insights from their historical data. The solution uses AWS security best practices to promote data protection while enabling teams to create a comprehensive knowledge base from various data sources.</p><p>Whether you’re managing support tickets, internal documentation, or other business content, this solution can handle multiple data sources and scale according to your needs, making it suitable for organizations of different sizes. By implementing this solution, you can enhance your operations with AI-powered assistance, automated responses, and intelligent routing of complex queries.</p><p>Try this solution with your own use case, and let us know about your experience in the comments section.</p><p> is a Senior Cloud Support Engineer at AWS, specializing in Data, Machine Learning, and Generative AI solutions. With extensive experience in helping customers architect and optimize their cloud-based AI/ML/GenAI workloads, Omar works closely with AWS customers to solve complex technical challenges and implement best practices across the AWS AI/ML/GenAI service portfolio. He is passionate about helping organizations leverage the full potential of cloud computing to drive innovation in generative AI and machine learning.</p><p> is a Principal Cloud Support Engineer at AWS, focused on Networking and Generative AI solutions. He has deep expertise in resolving complex, cross-domain technical challenges through systematic problem-solving methodologies. With a customer-obsessed mindset, he leverages emerging technologies to drive innovation and deliver exceptional customer experiences.</p><p> is a Principal Cloud Support Engineer at AWS. She specializes in solving complex customer issues on the AWS Cloud, focusing on infrastructure-as-code, container orchestration, and generative AI technologies. She collaborates with teams across AWS to design solutions that enhance the customer experience. Outside of work, Bhavani enjoys cooking and traveling.</p><p> is a Senior Cloud Support Engineer at AWS, specialized in Machine Learning technologies and Generative AI solutions, helping customers operate and optimize their ML workloads. With a deep passion for driving performance improvements, he dedicates himself to empowering both customers and teams through innovative ML-enabled solutions. Away from his technical pursuits, Mattia embraces his passion for travel and adventure.</p><p> is a Senior Cloud Support Engineer at AWS who specializes in Serverless technologies and development within the AWS cloud. Kevin has a passion for creating solutions through code while ensuring it is built on solid infrastructure. Outside of work, Kevin enjoys art and sport.</p><p> is a Senior Principal Engineer leading AWS. Tipu supports customers with designing and optimizing their cloud technology strategy as a senior principal engineer in AWS Support &amp; Managed Services. For over 15 years, he has designed, operated and supported diverse distributed systems at scale with a passion for operational excellence. He currently works on generative AI and operational excellence.</p>","contentLength":23230,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Faster distributed graph neural network training with GraphStorm v0.4","url":"https://aws.amazon.com/blogs/machine-learning/faster-distributed-graph-neural-network-training-with-graphstorm-v0-4/","date":1739293396,"author":"Theodore Vasiloudis","guid":122,"unread":true,"content":"<p>GraphStorm is a low-code enterprise graph machine learning (ML) framework that provides ML practitioners a simple way of building, training, and deploying graph ML solutions on industry-scale graph data. Although GraphStorm can run efficiently on single instances for small graphs, it truly shines when scaling to enterprise-level graphs in distributed mode using a cluster of <a href=\"http://aws.amazon.com/ec2\" target=\"_blank\" rel=\"noopener\">Amazon Elastic Compute Cloud</a> (Amazon EC2) instances or <a href=\"https://aws.amazon.com/sagemaker/\" target=\"_blank\" rel=\"noopener\">Amazon SageMaker</a>.</p><p>Today, AWS AI released GraphStorm v0.4. This release introduces integration with DGL-GraphBolt, a new graph storage and sampling framework that uses a compact graph representation and pipelined sampling to reduce memory requirements and speed up Graph Neural Network (GNN) training and inference. For the large-scale dataset examined in this post, the inference speedup is 3.6 times faster, and per-epoch training speedup is 1.4 times faster, with even larger speedups possible.</p><p>To achieve this, GraphStorm v0.4 with DGL-GraphBolt addresses two crucial challenges of graph learning:</p><ul><li> – GraphStorm v0.4 provides compact and distributed storage of graph structure and features, which may grow in the multi-TB range. For example, a graph with 1 billion nodes with 512 features per node and 10 billion edges will require more than 4 TB of memory to store, which necessitates distributed computation.</li><li> – In multi-layer GNNs, you need to sample neighbors of each node to propagate their representations. This can lead to exponential growth in the number of nodes sampled, potentially visiting the entire graph for a single node’s representation. GraphStorm v0.4 provides efficient, pipelined graph sampling.</li></ul><p>In this post, we demonstrate how GraphBolt enhances GraphStorm’s performance in distributed settings. We provide a hands-on example of using GraphStorm with GraphBolt on SageMaker for distributed training. Lastly, we share how to use <a href=\"https://aws.amazon.com/sagemaker/pipelines/\" target=\"_blank\" rel=\"noopener\">Amazon SageMaker Pipelines</a> with GraphStorm.</p><h2>GraphBolt: Pipeline-driven graph sampling</h2><p>GraphBolt is a new data loading and graph sampling framework developed by the <a href=\"https://www.dgl.ai/\" target=\"_blank\" rel=\"noopener\">DGL</a> team. It streamlines the operations needed to sample efficiently from a heterogeneous graph and fetch the corresponding features. GraphBolt introduces a new, more compact graph structure representation for heterogeneous graphs, called fused Compressed Sparse Column (fCSC). This can reduce the memory cost of storing a heterogeneous graph by up to 56%, allowing users to fit larger graphs in memory and potentially use smaller, more cost-efficient instances for GNN model training.</p><p>GraphStorm v0.4 seamlessly integrates with GraphBolt, allowing users to take advantage of its performance improvements in their GNN workflows. The user just needs to provide the additional argument  when launching graph construction and training jobs.</p><p>A common model development process is to perform model exploration locally on a subset of your full data, and when you’re satisfied with the results, train the full-scale model. This setup allows for cheaper exploration before training on the full dataset. GraphStorm and SageMaker Pipelines allows you to do that by creating a model pipeline you can run locally to retrieve model metrics, and when you’re ready, run your pipeline on the full data on SageMaker, and produce models, predictions, and graph embeddings to use in downstream tasks. In the next section, we show how to set up such pipelines for GraphStorm.</p><p>We demonstrate such a setup in the following diagram, where a user can perform model development and initial training on a single EC2 instance, and when they’re ready to train on their full data, hand off the heavy lifting to SageMaker for distributed training. Using SageMaker Pipelines to train models provides several benefits, like reduced costs, auditability, and lineage tracking.</p><h2>Set up the environment for SageMaker distributed training</h2><p>Setting up your environment should take around 10 minutes. First, set up your Python environment to run the examples:</p><div><div><div><pre><code>conda init\neval $SHELL\n# Create a new env for the post\nconda create --name gsf python=3.10\nconda activate gsf\n\n# Install dependencies for local scripts\npip install torch==2.3.0 --index-url https://download.pytorch.org/whl/cpu\npip install sagemaker boto3 ogb pyarrow\n# Verify installation, might take a few minutes for first run\npython -c \"import sagemaker; import torch\"\n\n# Clone the GraphStorm repository to access the example code\ngit clone https://github.com/awslabs/graphstorm.git ~/graphstorm</code></pre></div></div></div><h3>Build a GraphStorm SageMaker CPU image</h3><p>Next, build and push the GraphStorm PyTorch Docker image that you will use to run the graph construction, training, and inference jobs for smaller-scale data. Your role will need to be able to pull images from the <a href=\"https://gallery.ecr.aws/\" target=\"_blank\" rel=\"noopener\">Amazon ECR Public Gallery</a> and create <a href=\"http://aws.amazon.com/ecr/\" target=\"_blank\" rel=\"noopener\">Amazon Elastic Container Registry</a> (Amazon ECR) repositories and push images to your private ECR registry.</p><div><div><pre><code># Enter you account ID here\nACCOUNT_ID=&lt;aws-account-id&gt;\nREGION=us-east-1\n\ncd ~/graphstorm\nbash docker/build_graphstorm_image.sh --environment sagemaker --device cpu\nbash docker/push_graphstorm_image.sh -e sagemaker -r $REGION -a $ACCOUNT_ID -d cpu\n# This will create an ECR repository and push an image to\n# ${ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/graphstorm:sagemaker-cpu</code></pre></div></div><h3>Download and prepare datasets</h3><p>In this post, we use two citation datasets to demonstrate the scalability of GraphStorm. The Open Graph Benchmark (OGB) project hosts a number of graph datasets that can be used to benchmark the performance of graph learning systems. For a small-scale demo, we use the ogbn-arxiv dataset, and for a demonstration of GraphStorm’s large-scale learning capabilities, we use the ogbn-papers100M dataset.</p><h4>Prepare the ogbn-arxiv dataset</h4><p>Download the smaller-scale <a href=\"https://ogb.stanford.edu/docs/nodeprop/#ogbn-arxiv\" target=\"_blank\" rel=\"noopener\">ogbn-arxiv</a> dataset to run a local test before launching larger-scale SageMaker jobs on AWS. This dataset has approximately 170,000 nodes and 1.2 million edges. Use the following code to download the data and prepare it for GraphStorm:</p><div><div><pre><code># Provide the S3 bucket to use for output\nBUCKET_NAME=&lt;your-s3-bucket&gt;</code></pre></div></div><div><pre><code>cd ~/graphstorm/examples/sagemaker-pipelines-graphbolt\npython convert_arxiv_to_gconstruct.py \\\n--output-s3-prefix s3://$BUCKET_NAME/ogb-arxiv-input</code></pre></div><p>This will create the tabular graph data in Amazon S3, which you can verify by running the following code:</p><div><pre><code>aws s3 ls s3://$BUCKET_NAME/ogb-arxiv-input/ \nedges/\nnodes/\nsplits/\ngconstruct_config_arxiv.json</code></pre></div><p>Finally, upload GraphStorm training configuration files for arxiv to use for training and inference:</p><div><pre><code># Upload the training configurations to S3\naws s3 cp ~/graphstorm/training_scripts/gsgnn_np/arxiv_nc.yaml \\\ns3://$BUCKET_NAME/yaml/arxiv_nc_train.yaml\naws s3 cp ~/graphstorm/inference_scripts/np_infer/arxiv_nc.yaml \\\ns3://$BUCKET_NAME/yaml/arxiv_nc_inference.yaml</code></pre></div><h4>Prepare the ogbn-papers100M dataset on SageMaker</h4><p>The papers-100M dataset is a large-scale graph dataset, with 111 million nodes and 3.2 billion edges after adding reverse edges.</p><p>To download and preprocess the data as an <a href=\"https://sagemaker.readthedocs.io/en/stable/amazon_sagemaker_processing.html\" target=\"_blank\" rel=\"noopener\">Amazon SageMaker Processing</a> step, use the following code. You can launch and let the job run in the background while proceeding through the rest of the post, and return to this dataset later. The job should take approximately 45 minutes to run.</p><div><pre><code># Navigate to the example code\ncd ~/graphstorm/examples/sagemaker-pipelines-graphbolt\n\n# Build and push a Docker image to download and process the papers100M data\nbash build_and_push_papers100M_image.sh -a $ACCOUNT_ID -r $REGION\n\n# This creates an ECR repository and pushes an image to\n# $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/papers100m-processor\n\n# Run a SageMaker job to do the processing and upload the output to S3\nSAGEMAKER_EXECUTION_ROLE_ARN=&lt;your-sagemaker-execution-role-arn&gt;\naws configure set region $REGION\npython sagemaker_convert_papers100m.py \\\n--output-bucket $BUCKET_NAME \\\n--execution-role-arn $SAGEMAKER_EXECUTION_ROLE_ARN \\\n--region $REGION \\\n--instance-type ml.m5.4xlarge \\\n--image-uri $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/papers100m-processor</code></pre></div><p>This will produce the processed data in <code>s3://$BUCKET_NAME/ogb-papers100M-input</code>, which can then be used as input to GraphStorm. While this job is running, you can create the GraphStorm pipelines.</p><h2>Create a SageMaker pipeline</h2><div><pre><code># Navigate to the example code\ncd ~/graphstorm/examples/sagemaker-pipelines-graphbolt\n\nPIPELINE_NAME=\"ogbn-arxiv-gs-pipeline\"\n\nbash deploy_arxiv_pipeline.sh \\\n--account $ACCOUNT_ID\\\n--bucket-name $BUCKET_NAME --execution-role $SAGEMAKER_EXECUTION_ROLE_ARN \\\n--pipeline-name $PIPELINE_NAME \\\n--use-graphbolt false</code></pre></div><p>Running the preceding code will create a SageMaker pipeline configured to run three SageMaker jobs in sequence:</p><ul><li>A GConstruct job that converts the tabular file input to a binary partitioned graph on Amazon S3</li><li>A GraphStorm training job that trains a node classification model and saves the model to Amazon S3</li><li>A GraphStorm inference job that produces predictions for all nodes in the test set, and creates embeddings for all nodes</li></ul><p>To review the pipeline, navigate to <a href=\"https://us-east-1.console.aws.amazon.com/sagemaker/home?region=us-east-1#/studio-landing\" target=\"_blank\" rel=\"noopener\">SageMaker AI Studio</a>, choose the domain and user profile you used to create the pipeline, then choose .</p><p>In the navigation pane, choose . There should be a pipeline named . Choose the pipeline, which will take you to the  tab for the pipeline. Choose  to view the pipeline steps.</p><h3>Run the SageMaker pipeline locally for ogbn-arxiv</h3><p>The ogbn-arxiv dataset is small enough that you can run the pipeline locally. Run the following command to start a local execution of the pipeline:</p><div><pre><code># Allow the local containers to inherit AWS credentials\nexport USE_SHORT_LIVED_CREDENTIALS=1\npython ~/graphstorm/sagemaker/pipeline/execute_sm_pipeline.py \\\n--pipeline-name ogbn-arxiv-gs-pipeline \\\n--region us-east-1 \\\n--local-execution | tee arxiv-local-logs.txt</code></pre></div><p>We save the log output to . You will use that later to analyze the training speed.</p><p>Running the pipeline should take approximately 5 minutes. When the pipeline is complete, it will print a message like the following:</p><div><pre><code>Pipeline execution 655b9357-xxx-xxx-xxx-4fc691fcce94 SUCCEEDED</code></pre></div><p>You can inspect the mean epoch and evaluation time using the provided  script and the log file you created:</p><div><pre><code>python analyze_training_time.py --log-file arxiv-local-logs.txt\n\nReading logs from file: arxiv-local-logs.txt\n\n=== Training Epochs Summary ===\nTotal epochs completed: 10\nAverage epoch time: 4.70 seconds\n\n=== Evaluation Summary ===\nTotal evaluations: 11\nAverage evaluation time: 1.90 seconds</code></pre></div><p>These numbers will vary depending on your instance type; in this case, these are values reported on an m6in.4xlarge instance.</p><h3>Create a GraphBolt pipeline</h3><p>Now you have established a baseline for performance, you can create another pipeline that uses the GraphBolt graph representation to compare the performance.</p><p>You can use the same pipeline creation script, but change two variables, providing a new pipeline name and setting  to :</p><div><pre><code># Deploy a GraphBolt-enabled pipeline\nPIPELINE_NAME_GB=\"ogbn-arxiv-gs-graphbolt-pipeline\"\nbash deploy_arxiv_pipeline.sh \\\n--account $ACCOUNT_ID \\\n--bucket-name $BUCKET_NAME --execution-role $SAGEMAKER_EXECUTION_ROLE_ARN \\\n--pipeline-name $PIPELINE_NAME_GB \\\n--use-graphbolt true\n\n# Execute the pipeline locally\npython ~/graphstorm/sagemaker/pipeline/execute_sm_pipeline.py \\\n--pipeline-name $PIPELINE_NAME_GB \\\n--region us-east-1 \\\n--local-execution | tee arxiv-local-gb-logs.txt</code></pre></div><p>Analyzing the training logs, you can see the per-epoch time has dropped somewhat:</p><div><pre><code>python analyze_training_time.py --log-file arxiv-local-gb-logs.txt\n\nReading logs from file: arxiv-local-gb-logs.txt\n\n=== Training Epochs Summary ===\nTotal epochs completed: 10\nAverage epoch time: 4.21 seconds\n\n=== Evaluation Summary ===\nTotal evaluations: 11\nAverage evaluation time: 1.63 seconds</code></pre></div><p>For such a small graph, the performance gains are modest, around 13% per epoch time. With large data, the potential gains are much greater. In the next section, you will create a pipeline and train a model for papers-100M, a citation graph with 111 million nodes and 3.2 billion edges.</p><h2>Create a SageMaker pipeline for distributed training</h2><p>After the SageMaker processing job that prepares the papers-100M data has finished processing and the data is stored in Amazon S3, you can set up a pipeline to train a model on that dataset.</p><h3>Build the GraphStorm GPU image</h3><p>For this job, you will use large GPU instances, so you will build and push the GPU image this time:</p><div><pre><code>cd ~/graphstorm\n\nbash ./docker/build_graphstorm_image.sh --environment sagemaker --device gpu\n\nbash docker/push_graphstorm_image.sh -e sagemaker -r $REGION -a $ACCOUNT_ID -d gpu</code></pre></div><h3>Deploy and run pipelines for papers-100M</h3><p>Before you deploy your new pipeline, upload the training YAML configuration for papers-100M to Amazon S3:</p><div><pre><code>aws s3 cp \\\n~/graphstorm/training_scripts/gsgnn_np/papers100M_nc.yaml \\\ns3://$BUCKET_NAME/yaml/</code></pre></div><p>Now you are ready to deploy your initial pipeline for papers-100M:</p><div><pre><code># Navigate to the example code \ncd ~/graphstorm/examples/sagemaker-pipelines-graphbolt \nPIPELINE_NAME=\"ogb-papers100M-pipeline\" \nbash deploy_papers100M_pipeline.sh \\ \n    --account $ACCOUNT_ID \\\n    --bucket-name $BUCKET_NAME --execution-role $SAGEMAKER_EXECUTION_ROLE_ARN \\\n    --pipeline-name $PIPELINE_NAME \\ \n    --use-graphbolt false</code></pre></div><p>Run the pipeline on SageMaker and let it run in the background:</p><div><pre><code># Navigate to the example code\ncd ~/graphstorm/examples/sagemaker-pipelines-graphbolt\n\nPIPELINE_NAME=\"ogb-papers100M-pipeline\"\nbash deploy_papers100M_pipeline.sh \\\n--account $ACCOUNT_ID \\\n--bucket-name $BUCKET_NAME --execution-role $SAGEMAKER_EXECUTION_ROLE_ARN \\\n--pipeline-name $PIPELINE_NAME \\\n--use-graphbolt false</code></pre></div><p>Your account needs to meet the required quotas for the requested instances. For this post, the defaults are set to four  for training jobs and one  instance for a processing job. To adjust your SageMaker service quotas, you can use the <a href=\"https://us-east-1.console.aws.amazon.com/servicequotas/home/services/sagemaker/quotas\" target=\"_blank\" rel=\"noopener\">Service Quotas console</a>. To run both pipelines in parallel, i.e. without GraphBolt and with GraphBolt, you will need 8 x  and 2 x </p><p>Next, you can deploy and run another pipeline, with GraphBolt enabled:</p><div><pre><code># Deploy the GraphBolt-enabled pipeline\nPIPELINE_NAME_GB=\"ogb-papers100M-graphbolt-pipeline\"\nbash deploy_papers100M_pipeline.sh \\\n--account $ACCOUNT_ID\\\n--bucket-name $BUCKET_NAME --execution-role $SAGEMAKER_EXECUTION_ROLE_ARN \\\n--pipeline-name $PIPELINE_NAME_GB \\\n--use-graphbolt true\n\n# Execute the GraphBolt pipeline on SageMaker\npython ~/graphstorm/sagemaker/pipeline/execute_sm_pipeline.py \\\n--pipeline-name $PIPELINE_NAME_GB \\\n--region us-east-1 \\\n--async-execution</code></pre></div><h3>Compare performance for GraphBolt-enabled training</h3><p>After both pipelines are complete, which should take approximately 4 hours, you can compare the training times for both cases.</p><p>On the page of the SageMaker console, there should be two new pipelines named  and <code>ogb-papers100M-graphbolt-pipeline</code>. Choose ogb-papers100M-pipeline, which will take you to the  tab for the pipeline. Copy the name of the latest successful execution and use that to run the training analysis script:</p><div><pre><code>python analyze_training_time.py \\\n--pipeline-name $PIPELINE_NAME\\\n--execution-name execution-1734404366941</code></pre></div><p>Your output will look like the following code:</p><div><pre><code>== Training Epochs Summary ===\nTotal epochs completed: 15\nAverage epoch time: 73.95 seconds\n\n=== Evaluation Summary ===\nTotal evaluations: 15\nAverage evaluation time: 15.07 seconds</code></pre></div><p>Now do the same for the GraphBolt-enabled pipeline:</p><div><pre><code>python analyze_training_time.py \\\n--pipeline-name $PIPELINE_NAME_GB \\\n--execution-name execution-1734463209078</code></pre></div><p>You will see the improved per-epoch and evaluation times:</p><div><pre><code>== Training Epochs Summary ===\nTotal epochs completed: 15\nAverage epoch time: 54.54 seconds\n\n=== Evaluation Summary ===\nTotal evaluations: 15\nAverage evaluation time: 4.13 seconds</code></pre></div><p>Without loss in accuracy, the latest version of GraphStorm achieved a speedup of approximately 1.4 times faster per epoch for training, and a speedup of 3.6 times faster in evaluation time! Depending on the dataset, the speedups can be even greater, as shown by the DGL team’s <a href=\"https://www.dgl.ai/release/2024/03/06/release.html\" target=\"_blank\" rel=\"noopener\">benchmarking</a>.</p><p>This post showcased how GraphStorm 0.4, integrated with DGL-GraphBolt, significantly speeds up large-scale GNN training and inference, by 1.4 and 3.6 times faster, respectively, as measured on the papers-100M dataset. As shown in the <a href=\"https://www.dgl.ai/release/2024/01/26/release.html\" target=\"_blank\" rel=\"noopener\">DGL benchmarks</a>, even larger speedups are possible depending on the dataset.</p><p>We encourage ML practitioners working with large graph data to try GraphStorm. Its low-code interface simplifies building, training, and deploying graph ML solutions on AWS, allowing you to focus on modeling rather than infrastructure.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/04/badge-photo-small-copy.jpg\" alt=\"\" width=\"100\" height=\"133\"> is a Senior Applied Scientist at Amazon Web Services, where he works on distributed machine learning systems and algorithms. He led the development of GraphStorm Processing, the distributed graph processing library for GraphStorm and is a core developer for GraphStorm. He received his PhD in Computer Science from the KTH Royal Institute of Technology, Stockholm, in 2019.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/04/xiang.jpeg\" alt=\"\" width=\"100\" height=\"133\"> is a Senior Applied Scientist at Amazon Web Services, where he develops deep learning frameworks including GraphStorm, DGL, and DGL-KE. He led the development of Amazon Neptune ML, a new capability of Neptune that uses graph neural networks for graphs stored in a Neptune graph database. He is now leading the development of GraphStorm, an open source graph machine learning framework for enterprise use cases. He received his PhD in computer systems and architecture at the Fudan University, Shanghai, in 2014.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2024/12/30/florian.jpg\" alt=\"\" width=\"100\" height=\"133\"> is a Principal Technical Product Manager at AWS AI/ML research supporting science teams like the graph machine learning group, and ML Systems teams working on large scale distributed training, inference, and fault resilience. Before joining AWS, Florian lead technical product management for automated driving at Bosch, was a strategy consultant at McKinsey &amp; Company, and worked as a control systems and robotics scientist—a field in which he holds a PhD.</p>","contentLength":17809,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Creating a Useful Voice-Activated Fully Local RAG System","url":"https://www.kdnuggets.com/creating-useful-voice-activated-fully-local-rag-system","date":1739293249,"author":"Cornellius Yudha Wijaya","guid":247,"unread":true,"content":"<article>This article will explore initiating the RAG system and making it fully voice-activated.</article>","contentLength":88,"flags":null,"enclosureUrl":"https://www.kdnuggets.com/wp-content/uploads/kdn-wijaya-creating-useful-voice-activated-rag.png","enclosureMime":"","commentsUrl":null},{"title":"Insights from Cleric: Building an Autonomous AI SRE // Willem Pienaar // #290","url":"https://podcasters.spotify.com/pod/show/mlops/episodes/Insights-from-Cleric-Building-an-Autonomous-AI-SRE--Willem-Pienaar--290-e2unikg","date":1739291543,"author":"Demetrios","guid":260,"unread":true,"content":"<p><a href=\"https://www.linkedin.com/in/willempienaar/\" target=\"_blank\" rel=\"ugc noopener noreferrer\"></a> is the Co-Founder and CTO of<a href=\"https://podcasters.spotify.com/pod/show/mlops/episodes/cleric.io/\" target=\"_blank\" rel=\"ugc noopener noreferrer\"></a>. He previously worked at Tecton as a Principal Engineer. Willem Pienaar attended the Georgia Institute of Technology.</p><p>Insights from Cleric: Building an Autonomous AI SRE // MLOps Podcast #289 with Willem Pienaar, CTO &amp; Co-Founder of Cleric.// AbstractIn this MLOps Community Podcast episode, Willem Pienaar, CTO of Cleric, breaks down how they built an autonomous AI SRE that helps engineering teams diagnose production issues. We explore how Cleric builds knowledge graphs for system understanding, and uses existing tools/systems during investigations. We also get into some gnarly challenges around memory, tool integration, and evaluation frameworks, and some lessons learned from deploying to engineering teams.// BioWillem Pienaar, CTO of Cleric, is a builder with a focus on LLM agents, MLOps, and open source tooling. He is the creator of Feast, an open source feature store, and contributed to the creation of both the feature store and MLOps categories.Before starting Cleric, Willem led the open-source engineering team at Tecton and established the ML platform team at Gojek, where he built high-scale ML systems for the Southeast Asian Decacorn.// MLOps Swag/Merch<a href=\"https://shop.mlops.community/\" target=\"_blank\" rel=\"ugc noopener noreferrer\">https://shop.mlops.community/</a>// Related Links<a href=\"https://podcasters.spotify.com/pod/show/mlops/episodes/Insights-from-Cleric-Building-an-Autonomous-AI-SRE--Willem-Pienaar--290-e2unikg\" target=\"_blank\" rel=\"ugc noopener noreferrer\">Website: willem.co</a> --------------- ✌️Connect With Us ✌️ -------------Join our slack community:<a href=\"https://go.mlops.community/slack\" target=\"_blank\" rel=\"ugc noopener noreferrer\">https://go.mlops.community/slack</a>Follow us on Twitter:<a href=\"https://podcasters.spotify.com/pod/show/mlops/episodes/@mlopscommunity\" target=\"_blank\" rel=\"ugc noopener noreferrer\">@mlopscommunity</a>Sign up for the next meetup:<a href=\"https://go.mlops.community/register\" target=\"_blank\" rel=\"ugc noopener noreferrer\">https://go.mlops.community/register</a>Catch all episodes, blogs, newsletters, and more:<a href=\"https://mlops.community/\" target=\"_blank\" rel=\"ugc noopener noreferrer\">https://mlops.community/</a>Connect with Demetrios on LinkedIn:<a href=\"https://www.linkedin.com/in/dpbrinkm/\" target=\"_blank\" rel=\"ugc noopener noreferrer\">https://www.linkedin.com/in/dpbrinkm/</a>Connect with Willem on LinkedIn:<a href=\"https://www.linkedin.com/in/willempienaar/\" target=\"_blank\" rel=\"ugc noopener noreferrer\">https://www.linkedin.com/in/willempienaar/</a></p>","contentLength":1703,"flags":null,"enclosureUrl":"https://anchor.fm/s/174cb1b8/podcast/play/98338896/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2025-1-11%2F394679162-44100-2-e1c6c10bbd504.mp3","enclosureMime":"","commentsUrl":null},{"title":"Preparing for AI","url":"https://www.oreilly.com/radar/preparing-for-ai-2/","date":1739279713,"author":"Mike Loukides","guid":542,"unread":true,"content":"<p>When tools like GitHub Copilot first appeared, it was received wisdom that AI would make programming easier. It would be a boon to new programmers at the start of their careers, just learning a few new programming languages. Some of that is no doubt true: Large language models can answer questions, whip up a tutorial, turn descriptive comments into code, and even write short programs successfully. And large language models are getting better at the things they can’t yet do: understanding large codebases and writing code with fewer bugs. On the surface, it looks like things are getting easier for entry-level programmers.</p><p>That may be true, but I—and an increasing number of others—have argued that AI broadens the gap between junior and senior developers. As we grow into AI, we’re growing beyond “this makes programming easier.” As we grow into AI, we’re finding that programming is less about writing clever prompts and more about managing context. Writing about ChatGPT’s memory feature, Simon Willison <a rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\" href=\"https://simonwillison.net/2024/Oct/15/chatgpt-horoscopes/\" target=\"_blank\">said</a>, “Using LLMs effectively is entirely about controlling their context—thinking carefully about exactly what information is currently being handled by the model.” Forgive the anthropomorphism, but a conversation with a language model is just that: a conversation, where previous statements from both parties are part of the context. The context also includes the code you’re working on and any other documents or instructions (including sketches and diagrams) that the AI can access. In addition to the context that’s explicit in a chat session, a lot of context is implicit: assumptions, experiences, and other knowledge shared by the humans working on a project. That implicit context is a critical part of software development and also has to be made available to AI. Managing context is an important skill for any developer using AI, but it’s new, a skill junior developers have to acquire in addition to basic programming.</p><p>Writing more specifically about programming, Steve Yegge <a rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\" href=\"https://steve-yegge.medium.com/the-death-of-the-stubborn-developer-b5e8f78d326b\" target=\"_blank\">makes it clear</a> that chat-oriented programming (CHOP) isn’t the future; it’s the present. “You need to type fast, read fast, use tools well, and have the chops (ahem) to sling large quantities of text and context around manually.” Right now, we need better tools for doing this—and we will eventually have those tools. But they’re not here yet. Still, whether you’re a junior or senior developer, it’s a way of programming that you need to learn if you intend to be competitive. And context is key. Discussing the difference between GPT-4o and o1, Ben Hylak <a rel=\"noreferrer noopener\" aria-label=\"writes (opens in a new tab)\" href=\"https://www.latent.space/p/o1-skill-issue\" target=\"_blank\">writes</a> that, unlike 4o, “o1 will just take lazy questions at face value and doesn’t try to pull the context from you. Instead, you need to push as much context as you can into o1.” His point is that today’s most advanced models don’t really want prompts; they want product briefs, as thorough and complete as you can make them. AI can help software developers in many ways, but software developers still have to think through the problems they need to solve and determine how to solve them. Programming with AI requires teaching the AI what you want it to do. And describing how to solve a problem is a far more fundamental skill than being able to spit out Python or JavaScript at scale.</p><p>To prepare for AI, we all need to realize that we’re still in charge; we still need to understand and solve the problems we face. Sure, there are other skills involved. AI writes buggy code? So do humans—and AI seems to be getting better at writing correct code. Bruce Schneier and Nathan Sanders <a rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\" href=\"https://www.schneier.com/blog/archives/2025/01/ai-mistakes-are-very-different-from-human-mistakes.html\" target=\"_blank\">argue</a> that AI mistakes are different from human mistakes, if for no other reason than that they’re random rather than focused around a misunderstood concept. But regardless of the source or the reason, bugs need to be fixed, and debugging is a skill that takes years to learn. Debugging code that you didn’t write is even more difficult than debugging your own code. AI-generated bugs may not be a fundamentally bigger problem than human bugs, but for the time being humans will have to find them. (And managers will need to recognize that a job that devolves into bug-fixing, while essential, is likely to be demoralizing.) AI writes insecure code? Again, so do humans. Vulnerabilities are just another kind of bug: AI will get better at writing secure code over time, but we are still responsible for finding and fixing vulnerabilities.</p><p>So yes, the industry is changing—perhaps faster than it’s changed at any time in history. It’s not just lone programmers, bashing away at the keyboards (if it ever was). It’s software developers working with AI at every stage of product development, and with each other. It’s often been said that software development is a team sport. Now there’s another player on the team, and it’s a player that may not follow the same rulebook.</p><p>How do we prepare for the change coming our way? First, don’t ignore AI. Steve Yegge <a rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\" href=\"https://steve-yegge.medium.com/the-death-of-the-stubborn-developer-b5e8f78d326b\" target=\"_blank\">reports</a> that he’s seen companies where the senior developers won’t touch AI (“overhyped new-fangled junk”), while the juniors are excited to move forward. He’s also seen companies where the juniors are afraid that AI will “take their jobs,” while the seniors are rapidly adopting it. We need to be clear: If you’re ignoring AI, you’re resigning yourself to failure. If you’re afraid that AI will take your job, learning to use it well is a much better strategy than rejecting it. AI won’t take our jobs, but it will change the way we work.</p><p>Second, be realistic about what AI can do. Using AI well will make you more effective, but it’s not a shortcut. It does generate errors, both of the “this won’t compile” kind and the “results looks right, but there’s a subtle error in the output” kind. AI has become reasonably good at fixing the “doesn’t compile” bugs, but it’s not good at the subtle errors. Detecting and debugging subtle errors is hard; it’s important to remember <a rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\" href=\"https://www.laws-of-software.com/laws/kernighan/\" target=\"_blank\">Kernighan’s law</a>: Software is twice as hard to debug as it is to write. So if you write code that is as clever as you can be, you’re not smart enough to debug it. How does that apply when you need to debug AI-generated code, generated by a system that has seen everything on GitHub, Stack Overflow, and more? Do you understand it well enough to debug it? If you’re responsible for delivering professional-quality code, you won’t succeed by using AI as a shortcut. AI doesn’t mean that you don’t need to know your tools—including the dark corners of your programming languages. You are still responsible for delivering working software.</p><p>Third, train yourself to use AI effectively. O’Reilly author <a rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\" href=\"https://learning.oreilly.com/search/?q=author%3A%20%22Andrew%20Stellman%22&amp;suggested=true&amp;suggestionType=author&amp;originalQuery=andrew%20stellman&amp;rows=100&amp;language=en\" target=\"_blank\">Andrew Stellman</a><a href=\"https://www.oreilly.com/radar/bridging-the-ai-learning-gap/\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\"recommends several exercises (opens in a new tab)\">recommends several exercises</a> for learning to use AI effectively. Here are two: Take a program you’ve written, paste it into your favorite AI chat, and ask the AI to generate comments. Then look at the comments: Are they correct? Where is the AI wrong? Where did it misconstrue the intent? Stellman’s point is that you wrote the code; you understand it. You’re not second-guessing the AI. You’re learning that it can make mistakes and seeing the kinds of mistakes that it can make. A good next step is asking an AI assistant to generate unit tests, either for existing code or some new code (which leads to test-driven development). Unit tests are a useful exercise because testing logic is usually simple; it’s easy to see if the generated code is incorrect. And describing the test—describing the function that you’re testing, its arguments, the return type, and the expected results—forces you to think carefully about what you’re designing.</p><p>Learning how to describe a test in great detail is an important exercise because using generative AI isn’t about writing a quick prompt that gets it to spit out a function or a short program that’s likely to be correct. The hard part of computing has always been understanding exactly what we want to do. Whether it’s understanding users’ needs or understanding how to transform the data, that act of understanding is the heart of the software development process. And whatever else generative AI is capable of, one thing it can’t do is understand your problem. Using AI successfully requires describing your problem in detail, in a prompt that’s likely to be significantly longer than the code the AI generates. You can’t omit details, because the AI doesn’t know about the implicit assumptions we make all the time—including “I don’t really understand it, but I’m sure I can wing it when I get to that part of the program.” The more explicit you can be, the greater the probability of a correct result. Programming is the <a rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\" href=\"https://x.com/KevlinHenney/status/3361631527\" target=\"_blank\">act of describing a task in unambiguous detail</a>, regardless of whether the language is English or C++. The ability to understand a problem with all its ramifications, special cases, and potential pitfalls is part of what makes a senior software developer; it’s not something we expect of someone at the start of their career.</p><p>We will still want AI-generated source code to be well-structured. Left to itself, generated code tends to accumulate into a mountain of technical debt: badly structured code that nobody really understands and can’t be maintained. I’ve seen arguments that AI code doesn’t need to be well-structured; humans don’t need to understand it, only AI systems that can parse mind-numbingly convoluted logic do. That might be true in some hypothetical future, but at least in the near-term future, we don’t have those systems. It’s overly optimistic at best to assume that AI assistants will be able to work effectively with tangled spaghetti code. I don’t think AI can understand a mess significantly better than a human. It is definitely optimistic to believe that such code can be modified, either to add new features or to fix bugs, whether a human or an AI is doing the modification. One thing we’ve learned in the 70 or so years that software development has been around: Code has a very long lifetime. If you write mission-critical software now, it will probably be in use long after you’ve retired. Future generations of software developers—and AI assistants—will need to fix bugs and add features. A classic problem with badly structured code is that its developers have backed themselves into corners that make modification impossible without triggering a cascade of new problems. So part of understanding what we want to do, and describing it to a computer, is telling it the kind of structure we want: telling it how to organize code into modules, classes, and libraries, telling it how to structure data. The result needs to be maintainable—and, at least right now, that’s something we do better than AI. I don’t mean that you shouldn’t ask AI how to structure your code, or even to do the structuring for you; but in the end, structure and organization are your responsibility. If you simply ask AI how to structure your code and then follow its advice without thinking, then you’ll have as much success as when you simply ask AI to write the code and commit it without testing.</p><p>I stress understanding what we want to do because it’s been one of the weakest parts of the software development discipline. Understanding the problem looks in both directions: to the user, the customer, the person who wants you to build the software; and to the computer, the compiler, which will deal with whatever code you give it. We shouldn’t separate one from the other. We often say “garbage in, garbage out,” but frequently forget that “garbage in” includes badly thought-out problem descriptions as well as poor data or incorrect algorithms. What do we want the computer to do? I’ve seen many descriptions of what the future of programming might look like, but none of them assume that the AI will determine what we want it to do. What are the problems we need to solve? We need to understand them—thoroughly, in depth, in detail, and not in a single specification written when the project starts. That was one of the most important insights of the <a rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\" href=\"https://agilemanifesto.org/\" target=\"_blank\">Agile movement</a>: to value “individuals and interactions over processes and tools” and “customer collaboration over contract negotiation.” Agile was based on the recognition that you are unlikely to collect all the user’s requirements at the start of a project; instead, start building and use frequent demos as opportunities to collect more insight from the customer, building what they really want through frequent mid-course corrections. Being “agile” when AI is writing the code is a new challenge—but a necessary one. How will programmers manage those corrections when AI is writing the code? Through managing the context; through giving the AI enough information so that it can modify the code that needs changing while keeping the rest stable. Remember that iterations in an Agile process aren’t about fixing bugs; they’re about making sure the resulting software solves the users’ problem.</p><p>Understanding what we want to build is especially important right now. We’re at the start of one of the biggest rethinkings of software development that we’ve ever had. We’re talking about building kinds of software that we’ve never seen before: intelligent agents that solve problems for their users. How will we build those agents? We’ll need to understand what customers want in detail—and not the “I want to order groceries from Peapod” detail but at a higher, more abstract level: “I want software that can negotiate for me; I want software that can find the best deal; I want software that maximizes the probability of success; I want software that can plan my retirement.” What kinds of specifications will we need to do that correctly? If software is executing actions on behalf of a customer, it needs to ensure that those actions are performed correctly. If finances are involved, errors are close to intolerable. If security or safety are concerned, errors are really intolerable—but in many cases, we don’t know how to specify those requirements yet.</p><p>Which is not to say that we  know how to specify those requirements. We already know how to build some kinds of guardrails to keep AI on track. We already know how to build some evaluation suites that test AI’s reliability. But it is to say that all of these requirements will be part of the software developers’ job. And that, all things considered, the job of the software developer may be getting more difficult, not less.</p><p>With all of this in mind, let’s return to the so-called “junior developer”: the recent graduate who knows a couple of programming languages (more or less) and has written some relatively short programs and completed some medium-length projects. They may have little experience working on larger teams; they probably have little experience collecting requirements; they are likely to have significant experience using coding assistants like GitHub Copilot or Cursor. They are likely to go down unproductive rabbit holes when trying to solve a problem rather than realize that they’ve hit a dead end and looking for another approach. How do they grow from a “junior” developer to a “senior”? Is asking an AI questions sufficient? Let’s also consider a related question: How does a “senior” become senior? Trisha Gee makes a very underappreciated point in “<a rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\" href=\"https://www.oreilly.com/radar/rift-between-junior-and-senior-developers/\" target=\"_blank\">The Rift Between Juniors and Seniors</a>”: Part of what makes a senior software developer senior is mentoring juniors. Mentoring solidifies the senior’s knowledge as much as it helps the junior take the next step. You don’t really know anything well until you can teach it. In turn, seniors need juniors who can be taught.</p><p>Whether there’s a formal training program for junior developers or informal mentoring, we clearly need juniors precisely because we need seniors—and where will the next generation of seniors come from if not well-trained juniors? Forrest Brazeal <a rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\" href=\"https://newsletter.goodtechthings.com/p/the-death-of-the-modified-developer\" target=\"_blank\">makes the point</a>:</p><blockquote><p>If we can’t make room in our taxonomy of technical work for someone who still needs human training, we are just doing the same old thing IT has been doing for decades: borrowing from our future to cash in on the current hype.…And every experienced generalist starts out inexperienced. They start as a junior developer. That’s not where software engineering dies: it’s where it’s born.</p></blockquote><p>Yes—that’s where software engineering is born: not in learning programming languages or memorizing APIs but in practice, experience, and mentorship. We need to be reminded that software development isn’t just about generating code. The importance of writing code may diminish in the future, but as Stanford computer science professor Mehran Sahami said in a <a rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\" href=\"https://www.youtube.com/watch?v=J91_npj0Nfw\" target=\"_blank\">conversation</a> with Andrew Ng, “We taught you Python, but really we were trying to get you to understand how to take problems and think about them systematically.” Good programmers will have honed their skills in understanding the problem and goals, structuring the solution, providing necessary context to others, and coaching others to build their own skills in these areas. AI doesn’t change these essential skills—and no software developer, senior or junior, will go wrong by investing time in learning them. </p><p>As Tim O’Reilly writes, AI may be <a rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\" href=\"https://www.oreilly.com/radar/the-end-of-programming-as-we-know-it/\" target=\"_blank\">the end of programming as we know it</a>, but it is not the end of programming. It’s a new beginning. We’ll be designing and building new kinds of software that we couldn’t have imagined a few years ago. Software development is about understanding and solving problems, regardless of whether the programming language is Python or English, regardless of whether or not an AI assistant is used. It will be the software developers’ job to determine what we want, what we really need, and to describe that to our <a rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\" href=\"https://darioamodei.com/machines-of-loving-grace\" target=\"_blank\">machines of loving grace</a>.</p><ol><li>From personal communication; we will soon publish an article by Andrew Stellman that goes into more detail.</li></ol><p><em>Thanks to Nat Torkington, Andrew Stellman, Kevlin Henney, Tim O’Reilly, and Mary Treseler for comments, discussion, and even a few paragraphs. </em></p>","contentLength":18147,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"10 Little-Known Python Libraries That Will Make You Feel Like a Data Wizard","url":"https://www.kdnuggets.com/10-little-known-python-libraries-data-wizard","date":1739278813,"author":"Josep Ferrer","guid":246,"unread":true,"content":"<article>In this article, I will introduce you to 10 little-known Python libraries every data scientist should know.</article>","contentLength":107,"flags":null,"enclosureUrl":"https://www.kdnuggets.com/wp-content/uploads/Ferrer_10_little_known_libraries1.png","enclosureMime":"","commentsUrl":null},{"title":"Introducing the CrossValidationReport","url":"https://www.youtube.com/watch?v=R6dRAE83Y2c","date":1739277902,"author":"probabl","guid":368,"unread":true,"content":"<article>Skore version 0.6 introduces the `CrossValidationReport` that provides you with an `EstimatorReport` for each fold of your cross-validation, enabling you to inspect your estimator on each fold.\n\n------\nLinks:\n\nskore v0.6 documentation:\nhttps://skore.probabl.ai/0.6/index.html\n\nskore GitHub repository:\nhttps://github.com/probabl-ai/skore\n\nWebsite: https://probabl.ai/\nLinkedIn: https://www.linkedin.com/company/probabl\nTwitter: https://x.com/probabl_ai\nBluesky: https://bsky.app/profile/probabl.bsky.social\nDiscord: https://discord.probabl.ai\n\nWe also host a podcast called Sample Space, which you can find on your favourite podcast player. All the links can be found here:\nhttps://rss.com/podcasts/sample-space/\n\n#probabl</article>","contentLength":722,"flags":null,"enclosureUrl":"https://www.youtube.com/v/R6dRAE83Y2c?version=3","enclosureMime":"","commentsUrl":null},{"title":"Transforming credit decisions using generative AI with Rich Data Co and AWS","url":"https://aws.amazon.com/blogs/machine-learning/transforming-credit-decisions-using-generative-ai-with-rich-data-co-and-aws/","date":1739217934,"author":"Daniel Wirjo","guid":121,"unread":true,"content":"<p><em>This post is co-written with Gordon Campbell, Charles Guan, and Hendra Suryanto from RDC.&nbsp;</em></p><p>The mission of <a href=\"https://www.richdataco.com/\" target=\"_blank\" rel=\"noopener\">Rich Data Co (RDC)</a> is to broaden access to sustainable credit globally. Its software-as-a-service (SaaS) solution empowers leading banks and lenders with deep customer insights and AI-driven decision-making capabilities.</p><p>Making credit decisions using AI can be challenging, requiring data science and portfolio teams to synthesize complex subject matter information and collaborate productively. To solve this challenge, RDC used <a href=\"https://aws.amazon.com/ai/generative-ai/\" target=\"_blank\" rel=\"noopener\">generative AI</a>, enabling teams to use its solution more effectively:</p><ul><li> – Designed for data science teams, this agent assists teams in developing, building, and deploying AI models within a regulated environment. It aims to boost team efficiency by answering complex technical queries across the machine learning operations (MLOps) lifecycle, drawing from a comprehensive knowledge base that includes environment documentation, AI and data science expertise, and Python code generation.</li><li> – Designed for portfolio managers and analysts, this agent facilitates natural language inquiries about loan portfolios. It provides critical insights on performance, risk exposures, and credit policy alignment, enabling informed commercial decisions without requiring in-depth analysis skills. The assistant is adept at high-level questions (such as identifying high-risk segments or potential growth opportunities) and one-time queries, allowing the portfolio to be diversified.</li></ul><p>In this post, we discuss how RDC uses generative AI on <a href=\"https://aws.amazon.com/bedrock/\" target=\"_blank\" rel=\"noopener\">Amazon Bedrock</a> to build these assistants and accelerate its overall mission of democratizing access to sustainable credit.</p><h2>Solution overview: Building a multi-agent generative AI solution</h2><p>We began with a carefully crafted evaluation set of over 200 prompts, anticipating common user questions. Our initial approach combined prompt engineering and traditional <a href=\"https://aws.amazon.com/what-is/retrieval-augmented-generation/\" target=\"_blank\" rel=\"noopener\">Retrieval Augmented Generation (RAG)</a>. However, we encountered a challenge: accuracy fell below 90%, especially for more complex questions.</p><p>To overcome the challenge, we adopted an agentic approach, breaking down the problem into specialized use cases. This strategy equipped us to align each task with the most suitable <a href=\"https://aws.amazon.com/what-is/foundation-models/\" target=\"_blank\" rel=\"noopener\">foundation model (FM)</a> and tools. Our multi-agent framework is orchestrated using <a href=\"https://langchain-ai.github.io/langgraph/\" target=\"_blank\" rel=\"noopener\">LangGraph</a>, and it consisted of:</p><ol><li> – The orchestrator is responsible for routing user questions to the appropriate agent. In this example, we start with the data science or portfolio agent. However, we envision many more agents in the future. The orchestrator can also use user context, such as the user’s role, to determine routing to the appropriate agent.</li><li> – The agent is designed for a specialized task. It’s equipped with the appropriate FM for the task and the necessary tools to perform actions and access knowledge. It can also handle multiturn conversations and orchestrate multiple calls to the FM to reach a solution.</li><li> – Tools extend agent capabilities beyond the FM. They provide access to external data and APIs or enable specific actions and computation. To efficiently use the model’s context window, we construct a tool selector that retrieves only the relevant tools based on the information in the agent state. This helps simplify debugging in the case of errors, ultimately making the agent more effective and cost-efficient.</li></ol><p>This approach gives us the right tool for the right job. It enhances our ability to handle complex queries efficiently and accurately while providing flexibility for future improvements and agents.</p><p>The following image is a high-level architecture diagram of the solution.</p><h2>Data science agent: RAG and code generation</h2><p>To boost productivity of data science teams, we focused on rapid comprehension of advanced knowledge, including industry-specific models from a curated knowledge base. Here, RDC provides an integrated development environment (IDE) for Python coding, catering to various team roles. One role is model validator, who rigorously assesses whether a model aligns with bank or lender policies. To support the assessment process, we designed an agent with two tools:</p><ol><li> – <a href=\"https://aws.amazon.com/bedrock/knowledge-bases/\" target=\"_blank\" rel=\"noopener\">Amazon Bedrock Knowledge Bases</a> powers our intelligent content retrieval through a streamlined RAG implementation. The service automatically converts text documents to their vector representation using <a href=\"https://aws.amazon.com/bedrock/amazon-models/titan/\" target=\"_blank\" rel=\"noopener\">Amazon Titan Text Embeddings</a> and stores them in <a href=\"https://aws.amazon.com/opensearch-service/features/serverless/\" target=\"_blank\" rel=\"noopener\">Amazon OpenSearch Serverless</a>. Because the knowledge is vast, it performs <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-chunking.html\" target=\"_blank\" rel=\"noopener\">semantic chunking</a>, making sure that the knowledge is organized by topic and can fit within the FM’s context window. When users interact with the agent, <a href=\"https://aws.amazon.com/bedrock/knowledge-bases/\" target=\"_blank\" rel=\"noopener\">Amazon Bedrock Knowledge Bases</a> using OpenSearch Serverless provides fast, in-memory semantic search, enabling the agent to retrieve the most relevant chunks of knowledge for relevant and contextual responses to users.</li><li> – With code generation, we selected <a href=\"https://aws.amazon.com/bedrock/claude/\" target=\"_blank\" rel=\"noopener\">Anthropic’s Claude model on Amazon Bedrock</a> due to its inherent ability to understand and generate code. This tool is grounded to answer queries related to data science and can generate Python code for quick implementation. It’s also adept at troubleshooting coding errors.</li></ol><h2>Portfolio agent: Text-to-SQL and self-correction</h2><p>To boost the productivity of credit portfolio teams, we focused on two key areas. For portfolio managers, we prioritized high-level commercial insights. For analysts, we enabled deep-dive data exploration. This approach empowered both roles with rapid understanding and actionable insights, streamlining decision-making processes across teams.</p><p>Our solution required natural language understanding of structured portfolio data stored in <a href=\"https://aws.amazon.com/rds/aurora/\" target=\"_blank\" rel=\"noopener\">Amazon Aurora</a>. This led us to base our solution on a text-to-SQL model to efficiently bridge the gap between natural language and SQL.</p><p>To reduce errors and tackle complex queries beyond the model’s capabilities, we developed three tools using Anthropic’s Claude model on Amazon Bedrock for self-correction:</p><ol><li> – Verifies and corrects SQL queries, addressing common issues such as data type mismatches or incorrect function usage</li><li> – Validates query results, providing relevance and prompting retries or user clarification when needed</li><li> – Engages users for additional information when queries are too broad or lack detail, guiding the interaction based on database information and user input</li></ol><p>These tools operate in an agentic system, enabling accurate database interactions and improved query results through iterative refinement and user engagement.</p><p>To improve accuracy, we tested model fine-tuning, training the model on common queries and context (such as database schemas and their definitions). This approach reduces inference costs and improves response times compared to prompting at each call. Using <a href=\"https://aws.amazon.com/sagemaker-ai/jumpstart/\" target=\"_blank\" rel=\"noopener\">Amazon SageMaker JumpStart</a>, we <a href=\"https://aws.amazon.com/blogs/machine-learning/fine-tune-llama-3-for-text-generation-on-amazon-sagemaker-jumpstart/\" target=\"_blank\" rel=\"noopener\">fine-tuned Meta’s Llama model </a>by providing a set of anticipated prompts, intended answers, and associated context. Amazon SageMaker Jumpstart offers a cost-effective alternative to third-party models, providing a viable pathway for future applications. However, we didn’t end up deploying the fine-tuned model because we experimentally observed that prompting with Anthropic’s Claude model provided better generalization, especially for complex questions. To reduce operational overhead, we will also evaluate <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-build-structured.html\" target=\"_blank\" rel=\"noopener\">structured data retrieval on Amazon Bedrock Knowledge Bases</a>.</p><h2>Conclusion and next steps with RDC</h2><p>To expedite development, RDC collaborated with <a href=\"https://aws.amazon.com/startups\" target=\"_blank\" rel=\"noopener\">AWS Startups</a> and the <a href=\"https://aws.amazon.com/ai/generative-ai/innovation-center/\" target=\"_blank\" rel=\"noopener\">AWS Generative AI Innovation Center</a>. Through an iterative approach, RDC rapidly enhanced its generative AI capabilities, deploying the initial version to production in just 3 months. The solution successfully met the stringent security standards required in regulated banking environments, providing both innovation and compliance.</p><blockquote><p>“The integration of generative AI into our solution marks a pivotal moment in our mission to revolutionize credit decision-making. By empowering both data scientists and portfolio managers with AI assistants, we’re not just improving efficiency—we’re transforming how financial institutions approach lending.”</p><p><em>–Gordon Campbell, Co-Founder &amp; Chief Customer Officer at RDC</em></p></blockquote><p>RDC envisions generative AI playing a significant role in boosting the productivity of the banking and credit industry. By using this technology, RDC can provide key insights to customers, improve solution adoption, accelerate the model lifecycle, and reduce the customer support burden. Looking ahead, RDC plans to further refine and expand its AI capabilities, exploring new use cases and integrations as the industry evolves.</p><p>For more information about how to work with RDC and AWS and to understand how we’re supporting banking customers around the world to use AI in credit decisions, contact your AWS Account Manager or visit <a href=\"https://www.richdataco.com/\" target=\"_blank\" rel=\"noopener\">Rich Data Co</a>.</p><p>For more information about generative AI on AWS, refer to the following resources:</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/05/wirjo.jpeg\" alt=\"\" width=\"100\" height=\"133\"> is a Solutions Architect at AWS, focused on FinTech and SaaS startups. As a former startup CTO, he enjoys collaborating with founders and engineering leaders to drive growth and innovation on AWS. Outside of work, Daniel enjoys taking walks with a coffee in hand, appreciating nature, and learning new ideas.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/05/liuxuefeng.jpg\" alt=\"\" width=\"100\" height=\"133\"> leads a science team at the AWS Generative AI Innovation Center in the Asia Pacific regions. His team partners with AWS customers on generative AI projects, with the goal of accelerating customers’ adoption of generative AI.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/05/iman.png\" alt=\"\" width=\"100\" height=\"133\"> is a computer scientist at the Generative AI Innovation Center at Amazon Web Services (AWS) working on Generative AI and complex multi-agents systems.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/05/rdc-gordon-campbell.png\" alt=\"\" width=\"100\" height=\"133\"> is the Chief Customer Officer and Co-Founder of RDC, where he leverages over 30 years in enterprise software to drive RDC’s leading AI Decisioning platform for business and commercial lenders. With a proven track record in product strategy and development across three global software firms, Gordon is committed to customer success, advocacy, and advancing financial inclusion through data and AI.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/05/rdc-charles-guan.png\" alt=\"\" width=\"100\" height=\"133\"> is the Chief Technology Officer and Co-founder of RDC. With more than 20 years of experience in data analytics and enterprise applications, he has driven technological innovation across both the public and private sectors. At RDC, Charles leads research, development, and product advancement—collaborating with universities to leverage advanced analytics and AI. He is dedicated to promoting financial inclusion and delivering positive community impact worldwide.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/05/rdc-hendra-suryanto.png\" alt=\"\" width=\"100\" height=\"133\"> is the Chief Data Scientist at RDC with more than 20 years of experience in data science, big data, and business intelligence. Before joining RDC, he served as a Lead Data Scientist at KPMG, advising clients globally. At RDC, Hendra designs end-to-end analytics solutions within an Agile DevOps framework. He holds a PhD in Artificial Intelligence and has completed postdoctoral research in machine learning.</p>","contentLength":10851,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Build agentic AI solutions with DeepSeek-R1, CrewAI, and Amazon SageMaker AI","url":"https://aws.amazon.com/blogs/machine-learning/build-agentic-ai-solutions-with-deepseek-r1-crewai-and-amazon-sagemaker-ai/","date":1739215990,"author":"Surya Kari","guid":120,"unread":true,"content":"<p>AI agents are rapidly becoming the next frontier in enterprise transformation, with 82% of organizations planning adoption within the next 3 years. According to a <a href=\"https://www.capgemini.com/wp-content/uploads/2024/11/Generative-AI-in-Organizations-Refresh_25112024.pdf\" target=\"_blank\" rel=\"noopener\">Capgemini survey</a> of 1,100 executives at large enterprises, 10% of organizations already use AI agents, and more than half plan to use them in the next year. The recent release of the DeepSeek-R1 models brings state-of-the-art reasoning capabilities to the open source community. Organizations can build agentic applications using these reasoning models to execute complex tasks with advanced decision-making capabilities, enhancing efficiency and adaptability.</p><p>In this post, we dive into how organizations can use <a href=\"https://aws.amazon.com/sagemaker-ai/?gclid=CjwKCAiAtYy9BhBcEiwANWQQL-kwoCy7ZdAghF_qTtqKZCdOoS419cBEv70K_pLlN0NeCVYS8bV-JRoCPMQQAvD_BwE&amp;trk=8987dd52-6f33-407a-b89b-a7ba025c913c&amp;sc_channel=ps&amp;ef_id=CjwKCAiAtYy9BhBcEiwANWQQL-kwoCy7ZdAghF_qTtqKZCdOoS419cBEv70K_pLlN0NeCVYS8bV-JRoCPMQQAvD_BwE:G:s&amp;s_kwcid=AL!4422!3!724218586004!e!!g!!amazon%20sagemaker%20ai!11206038603!174643422154\" target=\"_blank\" rel=\"noopener\">Amazon SageMaker AI</a>, a fully managed service that allows you to build, train, and deploy ML models at scale, and can build AI agents using CrewAI, a popular agentic framework and open source models like DeepSeek-R1.</p><h2>Agentic design vs. traditional software design</h2><p>Agentic systems offer a fundamentally different approach compared to traditional software, particularly in their ability to handle complex, dynamic, and domain-specific challenges. Unlike traditional systems, which rely on rule-based automation and structured data, agentic systems, powered by large language models (LLMs), can operate autonomously, learn from their environment, and make nuanced, context-aware decisions. This is achieved through modular components including reasoning, memory, cognitive skills, and tools, which enable them to perform intricate tasks and adapt to changing scenarios.</p><p>Traditional software platforms, though effective for routine tasks and horizontal scaling, often lack the domain-specific intelligence and flexibility that agentic systems provide. For example, in a manufacturing setting, traditional systems might track inventory but lack the ability to anticipate supply chain disruptions or optimize procurement using real-time market insights. In contrast, an agentic system can process live data such as inventory fluctuations, customer preferences, and environmental factors to proactively adjust strategies and reroute supply chains during disruptions.</p><p>Enterprises should strategically consider deploying agentic systems in scenarios where adaptability and domain-specific expertise are critical. For instance, consider customer service. Traditional chatbots are limited to preprogrammed responses to expected customer queries, but AI agents can engage with customers using natural language, offer personalized assistance, and resolve queries more efficiently. AI agents can significantly improve productivity by automating repetitive tasks, such as generating reports, emails, and software code. The deployment of agentic systems should focus on well-defined processes with clear success metrics and where there is potential for greater flexibility and less brittleness in process management.</p><h3>Generative AI on SageMaker AI</h3><p>SageMaker AI, a fully managed service, provides a comprehensive suite of tools designed to deliver high-performance, cost-efficient machine learning (ML) and generative AI solutions for diverse use cases. SageMaker AI empowers you to build, train, deploy, monitor, and govern ML and generative AI models through an extensive range of services, including notebooks, jobs, hosting, experiment tracking, a curated model hub, and MLOps features, all within a unified integrated development environment (IDE).</p><p>SageMaker AI simplifies the process for generative AI model builders of all skill levels to work with foundation models (FMs):</p><ul><li><a href=\"https://aws.amazon.com/sagemaker-ai/canvas/\" target=\"_blank\" rel=\"noopener\">Amazon SageMaker Canvas</a> enables data scientists to seamlessly use their own datasets alongside FMs to create applications and architectural patterns, such as chatbots and Retrieval Augmented Generation (RAG), in a low-code or no-code environment.</li><li><a href=\"https://aws.amazon.com/sagemaker-ai/jumpstart/\" target=\"_blank\" rel=\"noopener\">Amazon SageMaker JumpStart</a> offers a diverse selection of open and proprietary FMs from providers like Hugging Face, Meta, and Stability AI. You can deploy or fine-tune models through an intuitive UI or APIs, providing flexibility for all skill levels.</li></ul><p>With SageMaker AI, you can build generative AI-powered agentic workflows using a framework of your choice. Some of the key benefits of using SageMaker AI for fine-tuning and hosting LLMs or FMs include:</p><ul><li> – SageMaker AI offers access to SageMaker JumpStart, a curated model hub where models with open weights are made available for seamless deployment through a few clicks or API calls. Additionally, for Hugging Face Hub models, SageMaker AI provides pre-optimized containers built on popular open source hosting frameworks such as <a href=\"https://github.com/vllm-project/vllm\" target=\"_blank\" rel=\"noopener\">vLLM</a>, <a href=\"https://github.com/triton-inference-server/server\" target=\"_blank\" rel=\"noopener\">NVIDIA Triton</a>, and H<a href=\"https://huggingface.co/docs/text-generation-inference/en/index\" target=\"_blank\" rel=\"noopener\">ugging Face Text Generation Inference (TGI).</a> You simply need to specify the model ID, and the model can be deployed quickly.</li><li><strong>Instance-based deterministic pricing</strong> – SageMaker AI hosted models are billed based on instance-hours rather than token usage. This pricing model enables you to more accurately predict and manage generative AI inference costs while scaling resources to accommodate incoming request loads.</li><li><strong>Deployments with quantization</strong> – SageMaker AI enables you to optimize models prior to deployment using advanced strategies such as quantized deployments (such as AWQ, GPTQ, float16, int8, or int4). This flexibility allows you to efficiently deploy large models, such as a 32-billion parameter model, onto smaller instance types like ml.g5.2xlarge with 24 GB of GPU memory, significantly reducing resource requirements while maintaining performance.</li><li><strong>Inference load balancing and optimized routing</strong> – SageMaker endpoints support load balancing and optimized routing with various strategies, providing users with enhanced flexibility and adaptability to accommodate diverse use cases effectively.</li><li><strong>SageMaker fine-tuning recipes</strong> – SageMaker offers <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-hyperpod-recipes.html\" target=\"_blank\" rel=\"noopener\">ready-to-use recipes</a> for quickly training and fine-tuning publicly available FMs such as Meta’s Llama 3, Mistral, and Mixtral. These recipes use <a href=\"https://aws.amazon.com/sagemaker-ai/hyperpod/\" target=\"_blank\" rel=\"noopener\">Amazon SageMaker HyperPod</a> (a SageMaker AI service that provides resilient, self-healing clusters optimized for large-scale ML workloads), enabling efficient and resilient training on a GPU cluster for scalable and robust performance.</li></ul><p>CrewAI provides a robust framework for developing multi-agent systems that integrate with AWS services, particularly SageMaker AI. CrewAI’s role-based agent architecture and comprehensive performance monitoring capabilities work in tandem with <a href=\"http://aws.amazon.com/cloudwatch\" target=\"_blank\" rel=\"noopener\">Amazon CloudWatch</a>.</p><p>The framework excels in workflow orchestration and maintains enterprise-grade security standards aligned with AWS best practices, making it an effective solution for organizations implementing sophisticated agent-based systems within their AWS infrastructure.</p><p>In this post, we demonstrate how to use CrewAI to create a multi-agent research workflow. This workflow creates two agents: one that researches on a topic on the internet, and a writer agent takes this research and acts like an editor by formatting it in a readable format. Additionally, we guide you through deploying and integrating one or multiple LLMs into structured workflows, using tools for automated actions, and deploying these workflows on SageMaker AI for a production-ready deployment.</p><p>The following diagram illustrates the solution architecture.</p><p>To follow along with the code examples in the rest of this post, make sure the following prerequisites are met:</p><ul><li><strong>Integrated development environment</strong> – This includes the following: \n  <ul><li><strong>(Optional) Access to Amazon SageMaker Studio and the JupyterLab IDE</strong> – We will use a Python runtime environment to build agentic workflows and deploy LLMs. Having access to a JupyterLab IDE with Python 3.9, 3.10, or 3.11 runtimes is recommended. You can also set up <a href=\"https://aws.amazon.com/sagemaker/studio/\" target=\"_blank\" rel=\"noopener\">Amazon SageMaker Studio</a> for single users. For more details, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/onboard-quick-start.html\" target=\"_blank\" rel=\"noopener\">Use quick setup for Amazon SageMaker AI</a>. Create a new SageMaker JupyterLab Space for a quick JupyterLab notebook for experimentation. To learn more, refer to Boost productivity on Amazon SageMaker Studio: Introducing JupyterLab Spaces and generative AI tools.</li><li> – You can also follow along in your local IDE (such as PyCharm or VSCode), provided that Python runtimes have been configured for site to AWS VPC connectivity (to deploy models on SageMaker AI).</li></ul></li><li><strong>Permission to deploy models</strong> – Make sure that your user execution role has the necessary permissions to deploy models to a SageMaker real-time endpoint for inference. For more information, refer to <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/deploy-model.html\" target=\"_blank\" rel=\"noopener\">Deploy models for inference</a>.</li><li> – The code used in this post is available in the following GitHub repo.</li></ul><h2>Simplified LLM hosting on SageMaker AI</h2><p>Before orchestrating agentic workflows with CrewAI powered by an LLM, the first step is to host and query an LLM using <a href=\"https://docs.aws.amazon.com/prescriptive-guidance/latest/image-classification/sagemaker.html\" target=\"_blank\" rel=\"noopener\">SageMaker real-time inference endpoints</a>. There are two primary methods to host LLMs on SageMaker AI:</p><ul><li>Deploy from SageMaker JumpStart</li><li>Deploy from Hugging Face Hub</li></ul><h2>Deploy DeepSeek from SageMaker JumpStart</h2><p>SageMaker JumpStart offers access to a diverse array of state-of-the-art FMs for a wide range of tasks, including content writing, code generation, question answering, copywriting, summarization, classification, information retrieval, and more. It simplifies the onboarding and maintenance of publicly available FMs, allowing you to access, customize, and seamlessly integrate them into your ML workflows. Additionally, SageMaker JumpStart provides solution templates that configure infrastructure for common use cases, along with executable example notebooks to streamline ML development with SageMaker AI.</p><p>The following screenshot shows an example of available models on SageMaker JumpStart.</p><p>To get started, complete the following steps:</p><ol><li>Run the following command in a Jupyter cell or the SageMaker Studio terminal:</li></ol><ol start=\"3\"><li>List all available LLMs under the Hugging Face or Meta JumpStart hub. The following code is an example of how to do this programmatically using the SageMaker Python SDK:</li></ol><div><pre><code>from sagemaker.jumpstart.filters import (And, Or)\nfrom sagemaker.jumpstart.notebook_utils import list_jumpstart_models\n\n# generate a conditional filter to only select LLMs from HF or Meta\nfilter_value = Or(\n    And(\"task == llm\", \"framework == huggingface\"), \n    \"framework == meta\", \"framework == deekseek\"\n)\n\n# Retrieve all available JumpStart models\nall_models = list_jumpstart_models(filter=filter_value)</code></pre></div><p>For example, deploying the  model directly from SageMaker JumpStart requires only a few lines of code:</p><div><pre><code>from sagemaker.jumpstart.model import JumpStartModel\n\nmodel_id = \" deepseek-llm-r1\" \nmodel_version = \"*\"\n\n# instantiate a new JS meta model\nmodel = JumpStartModel(\n    model_id=model_id, \n    model_version=model_version\n)\n\n# deploy model on a 1 x p5e instance \npredictor = model.deploy(\n    accept_eula=True, \n    initial_instance_count=1, \n    # endpoint_name=\"deepseek-r1-endpoint\" # optional endpoint name\n)</code></pre></div><p>We recommend deploying your SageMaker endpoints within a VPC and a private subnet with no egress, making sure that the models remain accessible only within your VPC for enhanced security.</p><h2>Deploy DeepSeek from Hugging Face Hub</h2><p>Alternatively, you can deploy your preferred model directly from the <a href=\"https://huggingface.co/models\" target=\"_blank\" rel=\"noopener\">Hugging Face Hub</a> or the <a href=\"https://huggingface.co/spaces/open-llm-leaderboard/open_llm_leaderboard#/\" target=\"_blank\" rel=\"noopener\">Hugging Face Open LLM Leaderboard</a> to a SageMaker endpoint. Hugging Face LLMs can be hosted on SageMaker using a variety of supported frameworks, such as NVIDIA Triton, vLLM, and Hugging Face TGI. For a comprehensive list of supported deep learning container images, refer to the available <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/pre-built-containers-frameworks-deep-learning.html\" target=\"_blank\" rel=\"noopener\">Amazon SageMaker Deep Learning Containers</a>. In this post, we use a <strong><em>DeepSeek-R1-Distill-Llama-70B</em></strong> SageMaker endpoint using the TGI container for agentic AI inference. We deploy the model from Hugging Face Hub using <a href=\"https://huggingface.co/blog/sagemaker-huggingface-llm\" target=\"_blank\" rel=\"noopener\">Amazon’s optimized TGI container</a>, which provides enhanced performance for LLMs. This container is specifically optimized for text generation tasks and automatically selects the most performant parameters for the given hardware configuration. To deploy from Hugging Face Hub, refer to the  or the following code snippet:</p><div><pre><code>import json\nimport sagemaker\nimport boto3\nfrom sagemaker.huggingface import HuggingFaceModel, get_huggingface_llm_image_uri\nimport os\nfrom datetime import datetime\n\n# Model configuration\nhub = {'HF_MODEL_ID':'deepseek-ai/DeepSeek-R1-Distill-Llama-70B', #Llama-3.3-70B-Instruct\n       'SM_NUM_GPUS': json.dumps(number_of_gpu),\n       'HF_TOKEN': HUGGING_FACE_HUB_TOKEN,\n       'SAGEMAKER_CONTAINER_LOG_LEVEL': '20',  # Set to INFO level\n       'PYTORCH_CUDA_ALLOC_CONF': 'expandable_segments:True'  # configure CUDA memory to use expandable memory segments\n}\n# Create and deploy model\nhuggingface_model =   HuggingFaceModel(image_uri=get_huggingface_llm_image_uri(\"huggingface\", \nversion=\"2.3.1\"),\nenv=hub,\nrole=role,sagemaker_session=sagemaker_session)\npredictor = huggingface_model.deploy(\n               initial_instance_count=1,\n               instance_type=\"ml.p4d.24xlarge\"\n               endpoint_name=custom_endpoint_name,\n               container_startup_health_check_timeout=900)</code></pre></div><p>A new <em><strong>DeepSeek-R1-Distill-Llama-70B</strong></em>endpoint should be  in under 10 minutes. If you want to change the model from DeepSeek to another model from the hub, simply replace the following parameter or refer to the DeepSeek deploy example in the following <a href=\"https://github.com/huggingface/text-generation-inference/blob/main/docs/source/reference/launcher.md\" target=\"_blank\" rel=\"noopener\">GitHub repo</a>. To learn more about deployment parameters that can be reconfigured inside TGI containers at runtime, refer to the following <a href=\"https://github.com/aws-samples/sagemaker-genai-hosting-examples/blob/main/Deepseek/DeepSeek-R1-Llama8B-LMI-TGI-Deploy.ipynb\" target=\"_blank\" rel=\"noopener\">GitHub repo</a>&nbsp;on TGI arguments.</p><div><pre><code>...\n\"HF_MODEL_ID\": \"deepseek-ai/...\", # replace with any HF hub models\n# \"HF_TOKEN\": \"hf_...\" # add your token id for gated models\n...</code></pre></div><p>For open-weight models deployed directly from hubs, we strongly recommend placing your SageMaker endpoints within a VPC and a private subnet with no egress, making sure that the models remain accessible only within your VPC for a secure deployment.</p><h2>Build a simple agent with CrewAI</h2><p>CrewAI offers the ability to create multi-agent and very complex agentic orchestrations using LLMs from several LLM providers, including SageMaker AI and Amazon Bedrock. In the following steps, we create a simple blocks counting agent to serve as an example.</p><p><strong>Create a blocks counting agent</strong></p><p>The following code sets up a simple blocks counter workflow using CrewAI with two main components:</p><ul><li><strong>Agent creation (blocks_counter_agent)</strong> – The agent is configured with a specific role, goal, and capabilities. This agent is equipped with a tool called .</li><li><strong>Task definition (count_task)</strong> – This is a task that we want this agent to execute. The task includes a template for counting how many of each color of blocks are present, where  will be replaced with actual color of the block. The task is assigned to .</li></ul><div><pre><code>from crewai import Agent, Task\nfrom pydantic import BaseModel, Field\n\n# 1. Configure agent\nblocks_counter_agent = Agent(\n    role=\"Blocks Inventory Manager\",\n    goal=\"Maintain accurate block counts\",\n    tools=[BlocksCounterTool],\n    verbose=True\n)\n\n# 2. Create counting task\ncount_task = Task(\n    description=\"Count {color} play blocks in storage\",\n    expected_output=\"Exact inventory count for specified color\",\n    agent=blocks_counter_agent\n)</code></pre></div><p>As you can see in the preceding code, each agent begins with two essential components: an agent definition that establishes the agent’s core characteristics (including its role, goal, backstory, available tools, LLM model endpoint, and so on), and a task definition that specifies what the agent needs to accomplish, including the detailed description of work, expected outputs, and the tools it can use during execution.</p><p>This structured approach makes sure that agents have both a clear identity and purpose (through the agent definition) and a well-defined scope of work (through the task definition), enabling them to operate effectively within their designated responsibilities.</p><p>Tools are special functions that give AI agents the ability to perform specific actions, like searching the internet or analyzing data. Think of them as apps on a smartphone—each tool serves a specific purpose and extends what the agent can do. In our example,  helps the agent count the number of blocks organized by color.</p><p>Tools are essential because they let agents do real-world tasks instead of just thinking about them. Without tools, agents would be like smart speakers that can only talk—they could process information but couldn’t take actual actions. By adding tools, we transform agents from simple chat programs into practical assistants that can accomplish real tasks.</p><p><strong>Out-of-the-box tools with CrewAI</strong>Crew AI offers a range of tools out of the box for you to use along with your agents and tasks. The following table lists some of the available tools.</p><table border=\"1px\" width=\"781\" cellpadding=\"10px\"><tbody><tr><td>For reading various file formats</td></tr><tr><td>For web content extraction</td></tr><tr><td>For searching YouTube channels</td></tr><tr><td>For searching PDF documents</td></tr><tr><td>For Python code interpretation</td></tr><tr></tr></tbody></table><p><strong>Build custom tools with CrewAI</strong>You can build custom tools in CrewAI in two ways: by subclassing BaseTool or using the @tool decorator. Let’s look at the following BaseTool subclassing option to create the BlocksCounterTool we used earlier:</p><div><pre><code>from crewai.tools import BaseTool\n\nclass BlocksCounterTool(BaseTool):\n    name = \"blocks_counter\" \n    description = \"Simple tool to count play blocks\"\n\n    def _run(self, color: str) -&gt; str:\n        return f\"There are 10 {color} play blocks available\"</code></pre></div><h2><strong>Build a multi-agent workflow with CrewAI, DeepSeek-R1, and SageMaker AI</strong></h2><p>Multi-agent AI systems represent a powerful approach to complex problem-solving, where specialized AI agents work together under coordinated supervision. By combining CrewAI’s workflow orchestration capabilities with SageMaker AI based LLMs, developers can create sophisticated systems where multiple agents collaborate efficiently toward a specific goal. The code used in this post is available in the following <a href=\"https://github.com/aws-samples/amazon-sagemaker-generativeai/tree/main/agents-with-sagemaker/deepseek_crewai_based_agent\" target=\"_blank\" rel=\"noopener\">GitHub repo</a>.</p><p>Let’s build a research agent and writer agent that work together to create a PDF about a topic. We will use a DeepSeek-R1 Distilled Llama 3.3 70B model as a SageMaker endpoint for the LLM inference.</p><p><strong>Define your own DeepSeek SageMaker LLM (using LLM base class)</strong> The following code integrates SageMaker hosted LLMs with CrewAI by creating a custom inference tool that formats prompts with system instructions for factual responses, uses Boto3, an AWS core library, to call SageMaker endpoints, and processes responses by separating reasoning (before &lt;/think&gt;) from final answers. This enables CrewAI agents to use deployed models while maintaining structured output patterns.</p><div><pre><code># Calls SageMaker endpoint for DeepSeek inference\ndef deepseek_llama_inference(prompt: dict, endpoint_name: str, region: str = \"us-east-2\") -&gt; dict:\n    try:\n        # ... Response parsing Code...\n\n    except Exception as e:\n        raise RuntimeError(f\"Error while calling SageMaker endpoint: {e}\")\n\n# CrewAI-compatible LLM implementation for DeepSeek models on SageMaker.\nclass DeepSeekSageMakerLLM(LLM):\n    def __init__(self, endpoint: str):\n        # &lt;... Initialize LLM with SageMaker endpoint ...&gt;\n\n    def call(self, prompt: Union[List[Dict[str, str]], str], **kwargs) -&gt; str:\n        # &lt;... Format and return the final response ...&gt;</code></pre></div><p><strong>Name the DeepSeek-R1 Distilled endpoint</strong> Set the endpoint name as defined earlier when you deployed DeepSeek from the Hugging Face Hub:</p><div><pre><code>deepseek_endpoint = \"deepseek-r1-dist-v3-llama70b-2025-01-22\"</code></pre></div><p><strong>Create a DeepSeek inference tool</strong> Just like how we created the BlocksCounterTool earlier, let’s create a tool that uses the DeepSeek endpoint for our agents to use. We use the same BaseTool subclass here, but we hide it in the CustomTool class implementation in sage_tools.py in the tools folder. For more information, refer to the <a href=\"https://github.com/aws-samples/amazon-sagemaker-generativeai/tree/main/agents-with-sagemaker/deepseek_crewai_based_agent\" target=\"_blank\" rel=\"noopener\">GitHub repo</a>.</p><div><pre><code>from crewai import Crew, Agent, Task, Process \n\n# Create the Tool for LLaMA inference\ndeepseek_tool = CustomTool(\n    name=\"deepseek_llama_3.3_70B\",\n    func=lambda inputs: deepseek_llama_inference(\n        prompt=inputs,\n        endpoint_name=deepseek_endpoint\n    ),\n    description=\"A tool to generate text using the DeepSeek LLaMA model deployed on SageMaker.\"\n)\n</code></pre></div><p> Just like the simple blocks agent we defined earlier, we follow the same template here to define the research agent. The difference here is that we give more capabilities to this agent. We attach a SageMaker AI based DeepSeek-R1 model as an endpoint for the LLM.</p><p>This helps the research agent think critically about information processing by combining the scalable infrastructure of SageMaker with DeepSeek-R1’s advanced reasoning capabilities.</p><p>The agent uses the SageMaker hosted LLM to analyze patterns in research data, evaluate source credibility, and synthesize insights from multiple inputs. By using the deepseek_tool, the agent can dynamically adjust its research strategy based on intermediate findings, validate hypotheses through iterative questioning, and maintain context awareness across complex information it gathers.</p><div><pre><code># Research Agent\n\nresearch_agent = Agent(\n    role=\"Research Bot\",\n    goal=\"Scan sources, extract relevant information, and compile a research summary.\",\n    backstory=\"An AI agent skilled in finding relevant information from a variety of sources.\",\n    tools=[deepseek_tool],\n    allow_delegation=True,\n    llm=DeepSeekSageMakerLLM(endpoint=deepseek_endpoint),\n    verbose=False\n)\n</code></pre></div><p> The writer agent is configured as a specialized content editor that takes research data and transforms it into polished content. This agent works as part of a workflow where it takes research from a research agent and acts like an editor by formatting the content into a readable format. The agent is used for writing and formatting, and unlike the research agent, it doesn’t delegate tasks to other agents.</p><div><pre><code>writer_agent = Agent(\n    role=\"Writer Bot\",\n    goal=\"Receive research summaries and transform them into structured content.\",\n    backstory=\"A talented writer bot capable of producing high-quality, structured content based on research.\",\n    tools=[deepseek_tool],\n    allow_delegation=False,\n    llm=DeepSeekSageMakerLLM(endpoint=deepseek_endpoint),\n    verbose=False\n)</code></pre></div><p><strong>Define tasks for the agents</strong> Tasks in CrewAI define specific operations that agents need to perform. In this example, we have two tasks: a research task that processes queries and gathers information, and a writing task that transforms research data into polished content.</p><p>Each task includes a clear description of what needs to be done, the expected output format, and specifies which agent will perform the work. This structured approach makes sure that agents have well-defined responsibilities and clear deliverables.</p><p>Together, these tasks create a workflow where one agent researches a topic on the internet, and another agent takes this research and formats it into readable content. The tasks are integrated with the DeepSeek tool for advanced language processing capabilities, enabling a production-ready deployment on SageMaker AI.</p><div><pre><code>research_task = Task(\n    description=(\n        \"Your task is to conduct research based on the following query: {prompt}.\\n\"\n    ),\n    expected_output=\"A comprehensive research summary based on the provided query.\",\n    agent=research_agent,\n    tools=[deepseek_tool]\n)\n\nwriting_task = Task(\n    description=(\n              \"Your task is to create structured content based on the research provided.\\n\"\"),\n    expected_output=\"A well-structured article based on the research summary.\",\n    agent=research_agent,\n    tools=[deepseek_tool]\n)\n</code></pre></div><p> A crew in CrewAI represents a collaborative group of agents working together to achieve a set of tasks. Each crew defines the strategy for task execution, agent collaboration, and the overall workflow. In this specific example, the sequential process makes sure tasks are executed one after the other, following a linear progression. There are other more complex orchestrations of agents working together, which we will discuss in future blog posts.</p><p>This approach is ideal for projects requiring tasks to be completed in a specific order. The workflow creates two agents: a research agent and a writer agent. The research agent researches a topic on the internet, then the writer agent takes this research and acts like an editor by formatting it into a readable format.</p><p>Let’s call the crew scribble_bots:</p><div><pre><code># Define the Crew for Sequential Workflow # \n\nscribble_bots = Crew( agents=[research_agent, writer_agent], \n       tasks=[research_task, writing_task], \n       process=Process.sequential # Ensure tasks execute in sequence)\n</code></pre></div><p><strong>Use the crew to run a task</strong> We have our endpoint deployed, agents created, and crew defined. Now we’re ready to use the crew to get some work done. Let’s use the following prompt:</p><div><pre><code>result = scribble_bots.kickoff(inputs={\"prompt\": \"What is DeepSeek?\"})</code></pre></div><p>Our result is as follows:</p><div><pre><code>**DeepSeek: Pioneering AI Solutions for a Smarter Tomorrow**\n\nIn the rapidly evolving landscape of artificial intelligence, \nDeepSeek stands out as a beacon of innovation and practical application. \nAs an AI company, DeepSeek is dedicated to advancing the field through cutting-edge research and real-world applications, \nmaking AI accessible and beneficial across various industries.\n\n**Focus on AI Research and Development**\n\n………………….. ………………….. ………………….. …………………..\n</code></pre></div><p>Complete the following steps to clean up your resources:</p><ol><li>Delete your GPU DeekSeek-R1 endpoint:</li></ol><div><pre><code>import boto3\n\n# Create a low-level SageMaker service client.\nsagemaker_client = boto3.client('sagemaker', region_name=&lt;region&gt;)\n\n# Delete endpoint\nsagemaker_client.delete_endpoint(EndpointName=endpoint_name)\n</code></pre></div><ol start=\"2\"><li>If you’re using a SageMaker Studio JupyterLab notebook, shut down the JupyterLab notebook instance.</li></ol><p>In this post, we demonstrated how you can deploy an LLM such as DeepSeek-R1—or another FM of your choice—from popular model hubs like SageMaker JumpStart or Hugging Face Hub to SageMaker AI for <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/realtime-endpoints-deploy-models.html\" target=\"_blank\" rel=\"noopener\">real-time inference</a>. We explored inference frameworks like Hugging Face TGI which helps streamline deployment while integrating built-in performance optimizations to minimize latency and maximize throughput. Additionally, we showcased how the SageMaker developer-friendly Python SDK simplifies endpoint orchestration, allowing seamless experimentation and scaling of LLM-powered applications.</p><p>Beyond deployment, this post provided an in-depth exploration of agentic AI, guiding you through its conceptual foundations, practical design principles using CrewAI, and the seamless integration of state-of-the-art LLMs like DeepSeek-R1 as the intelligent backbone of an autonomous agentic workflow. We outlined a sequential CrewAI workflow design, illustrating how to equip LLM-powered agents with specialized tools that enable autonomous data retrieval, real-time processing, and interaction with complex external systems.</p><p>Now, it’s your turn to experiment! Dive into our publicly available code on <a href=\"https://github.com/aws-samples/amazon-sagemaker-generativeai/tree/main/agents-with-sagemaker/deepseek_crewai_based_agent\" target=\"_blank\" rel=\"noopener\">GitHub</a>, and start building your own DeepSeek-R1-powered agentic AI system on SageMaker. Unlock the next frontier of AI-driven automation—seamlessly scalable, intelligent, and production-ready.</p><p>Special thanks to Giuseppe Zappia, Poli Rao, and Siamak Nariman for their support with this blog post.</p><p> is a Senior Generative AI Data Scientist at AWS, specializing in developing solutions leveraging state-of-the-art foundation models. He has extensive experience working with advanced language models including DeepSeek-R1, the LLama family, and Qwen, focusing on their fine-tuning and optimization for specific scientific applications. His expertise extends to implementing efficient training pipelines and deployment strategies using AWS SageMaker, enabling the scaling of foundation models from development to production. He collaborates with customers to design and implement generative AI solutions, helping them navigate model selection, fine-tuning approaches, and deployment strategies to achieve optimal performance for their specific use cases.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/06/26/Bobby-LIndsey.jpg\" alt=\"\" width=\"100\" height=\"141\">&nbsp;is a Machine Learning Specialist at Amazon Web Services. He’s been in technology for over a decade, spanning various technologies and multiple roles. He is currently focused on combining his background in software engineering, DevOps, and machine learning to help customers deliver machine learning workflows at scale. In his spare time, he enjoys reading, research, hiking, biking, and trail running.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2024/11/25/DSC03728_cleanup-PhotoRoom-1.jpeg\" alt=\"\" width=\"100\" height=\"140\"> is a Generative AI Specialist for third-party models at AWS, where he works with top-tier third-party foundation model (FM) providers to develop and execute joint Go-To-Market strategies, enabling customers to effectively train, deploy, and scale FMs to solve industry specific challenges. Karan holds a Bachelor of Science in Electrical and Instrumentation Engineering from Manipal University, a master’s in science in Electrical Engineering from Northwestern University and is currently an MBA Candidate at the Haas School of Business at University of California, Berkeley.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2024/08/29/Pranav-Profile-100.jpeg\" alt=\"\" width=\"100\" height=\"100\">&nbsp;is an AI/ML Specialist Solutions Architect at AWS. He focuses on helping customers build, train, deploy and migrate machine learning (ML) workloads to SageMaker. He previously worked in the semiconductor industry developing large computer vision (CV) and natural language processing (NLP) models to improve semiconductor processes using state of the art ML techniques. In his free time, he enjoys playing chess and traveling. You can find Pranav on&nbsp;<a href=\"https://www.linkedin.com/in/pranav-murthy-6bbb5773/\" target=\"_blank\" rel=\"noopener noreferrer\" data-stringify-link=\"https://www.linkedin.com/in/pranav-murthy-6bbb5773/\" data-sk=\"tooltip_parent\">LinkedIn</a>.</p>","contentLength":29139,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"How Transformer LLMs Work [Free Course]","url":"https://newsletter.languagemodels.co/p/how-transformer-llms-work-free-course","date":1739214020,"author":"Jay Alammar","guid":390,"unread":true,"content":"<p>Enroll for free now: https://bit.ly/4aRnn7Z Github Repo: https://github.com/HandsOnLLM/Hands-On-Large-Language-Models </p><p>We're ecstatic to bring you \"How Transformer LLMs Work\" -- a free course with ~90 minutes of video, code, and crisp visuals and animations that explain the modern Transformer architecture, tokenizers, embeddings, and mixture-of-expert models.</p><p> and I have developed a lot of the visual language over the last several years (tens of thousands of iterations for hundreds of figures) for the book. This was informed by many incredible colleagues at Cohere, C4AI, and the open source and open science ML community. But to have an opportunity to collaborate with the legendary Andrew Ng and the team at DeepLearning.ai we took them to the next level with animations and a concise narrative meant to enable technical learners to pick up an ML paper and understand the architecture description. </p><p>In this course, you'll learn how a transformer network architecture that powers LLMs works. You'll build the intuition of how LLMs process text and work with code examples that illustrate the key components of the transformer architecture. </p><p>Key topics covered in this course include: </p><ul><li><p>The evolution of how language has been represented numerically, from the Bag-of-Words model through Word2Vec embeddings to the transformer architecture that captures word meanings in full context. </p></li><li><p>How LLM inputs are broken down into tokens, which represent words or pieces before they are sent to the language model. </p></li><li><p>The details of a transformer and the three main stages, consisting of tokenization and embedding, the stack of transformer blocks, and the language model head. </p></li><li><p>The details of the transformer block, including attention, which calculates relevance scores followed by the feedforward layer, which incorporates stored information learned in training. </p></li><li><p>How cached calculations make transformers faster, how the transformer block has evolved over the years since the original paper was released, and how they continue to be widely used. </p></li><li><p>Explore an implementation of recent models in the Hugging Face transformer library. </p></li></ul><p>By the end of this course, you’ll have a deep understanding of how LLMs process language and you'll be able to read through papers describing models and understand the details that are used to describe these architectures. This intuition will help improve your approach to building LLM applications.</p>","contentLength":2419,"flags":null,"enclosureUrl":"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8995a108-11cc-4edf-b69d-73006c087981_3050x1922.png","enclosureMime":"","commentsUrl":null},{"title":"Automate bulk image editing with Crop.photo and Amazon Rekognition","url":"https://aws.amazon.com/blogs/machine-learning/automate-bulk-image-editing-with-crop-photo-and-amazon-rekognition/","date":1739213429,"author":"Rahul Bhargava","guid":119,"unread":true,"content":"<p><a href=\"https://evolphin.com/creatives-collaborative-video-editing/\" target=\"_blank\" rel=\"noopener\">Evolphin Software</a>, Inc. is a leading provider of digital and media asset management solutions based in Silicon Valley, California. <a href=\"https://www.crop.photo/\" target=\"_blank\" rel=\"noopener\">Crop.photo</a> from Evolphin Software is a cloud-based service that offers powerful bulk processing tools for automating image cropping, content resizing, background removal, and listing image analysis.</p><p>Crop.photo is tailored for high-end retailers, ecommerce platforms, and sports organizations. The solution has created a unique offering for bulk image editing through its advanced AI-driven solutions. In this post, we explore how Crop.photo uses <a href=\"https://aws.amazon.com/rekognition/\" target=\"_blank\" rel=\"noopener\">Amazon Rekognition</a> to provide sophisticated image analysis, enabling automated and precise editing of large volumes of images. This integration streamlines the image editing process for clients, providing speed and accuracy, which is crucial in the fast-paced environments of ecommerce and sports.</p><h2>Automation: The way out of bulk image editing challenges</h2><p>Bulk image editing isn’t just about handling a high volume of images, it’s about delivering flawless results with speed at scale. Large retail brands, marketplaces, and sports industries process thousands of images weekly. Each image must be catalog-ready or broadcast-worthy in minutes, not hours.</p><p>The challenge lies not just in the quantity but in maintaining high-quality images and brand integrity. Speed and accuracy are non-negotiable. Retailers and sports organizations expect rapid turnaround without compromising image integrity.</p><p>This is where Crop.photo’s smart automations come in with an innovative solution for high-volume image processing needs. The platform’s advanced AI algorithms can automatically detect subjects of interest, crop the images, and optimize thousands of images simultaneously while providing consistent quality and brand compliance. By automating repetitive editing tasks, Crop.photo enables enterprises to reduce image processing time from hours to minutes, allowing creative teams to focus on higher-value activities.</p><h2>Challenges in the ecommerce industry</h2><p>The ecommerce industry often encounters the following challenges:</p><ul><li><strong>Inefficiencies and delays in manual image editing </strong>– Ecommerce companies rely on manual editing for tasks like resizing, alignment, and background removal. This process can be time-consuming and prone to delays and inconsistencies. A more efficient solution is needed to streamline the editing process, especially during platform migrations or large updates.</li><li><strong>Maintaining uniformity across diverse image types </strong>– Companies work with a variety of image types, from lifestyle shots to product close-ups, across different categories. Maintaining uniformity and professionalism in all image types is essential to meet the diverse needs of marketing, product cataloging, and overall brand presentation.</li><li><strong>Large-scale migration and platform transition </strong>– Transitioning to a new ecommerce platform involves migrating thousands of images, which presents significant logistical challenges. Providing consistency and quality across a diverse range of images during such a large-scale migration is crucial for maintaining brand standards and a seamless user experience.</li></ul><p>For a US top retailer, wholesale distribution channels posed a unique challenge. Thousands of fashion images need to be made for the marketplace with less than a day’s notice for flash sales. Their director of creative operations said,</p><blockquote><p><em>“Crop.photo is an essential part of our ecommerce fashion marketplace workflow. With over 3,000 on-model product images to bulk crop each month, we rely on Crop.photo to enable our wholesale team to quickly publish new products on popular online marketplaces such as Macy’s, Nordstrom, and Bloomingdales. By increasing our retouching team’s productivity by over 70%, Crop.photo has been a game changer for us. Bulk crop images used to take days can now be done in a matter of seconds!”</em></p></blockquote><h2>Challenges in the sports industry</h2><p>The sports industry often contends with the following challenges:</p><ul><li><strong>Bulk player headshot volume and consistency </strong>– Sports organizations face the challenge of bulk cropping and resizing hundreds of player headshots for numerous teams, frequently on short notice. Maintaining consistency and quality across a large volume of images can be difficult without AI.</li><li><strong>Diverse player facial features </strong>– Players have varying facial features, such as different hair lengths, forehead sizes, and face dimensions. Adapting cropping processes to accommodate these differences traditionally requires manual adjustments for each image, which leads to inconsistencies and significant time investment.</li><li><strong>Editorial time constraints </strong>– Tight editorial schedules and resource limitations are common in sports organizations. The time-consuming nature of manual cropping tasks strains editorial teams, particularly during high-volume periods like tournaments, where delays and rushed work can impact quality and timing.</li></ul><p>An Imaging Manager at Europe’s Premier Football Organization expressed,</p><blockquote><p><em>“We recently found ourselves with 40 images from a top flight English premier league club needing to be edited just 2 hours before kick-off. Using the <a href=\"https://www.crop.photo/blog/bulk-headshots-for-sports\" target=\"_blank\" rel=\"noopener\">Bulk AI headshot cropping for sports</a> feature from Crop.photo, we had perfectly cropped headshots of the squad in just 5 minutes, making them ready for publishing in our website CMS just in time. We would never have met this deadline using manual processes. This level of speed was unthinkable before, and it’s why we’re actively recommending Crop.photo to other sports leagues.”</em></p></blockquote><p>Crop.photo uses Amazon Rekognition to power a robust solution for bulk image editing. Amazon Rekognition offers features like object and scene detection, facial analysis, and image labeling, which they use to generate markers that drive a fully automated image editing workflow.</p><p>The following diagram presents a high-level architectural data flow highlighting several of the AWS services used in building the solution.</p><p>The solution consists of the following key components:</p><ul><li> – <a href=\"https://aws.amazon.com/cognito/\" target=\"_blank\" rel=\"noopener\">Amazon Cognito</a> is used for user authentication and user management.</li><li><strong>Infrastructure deployment</strong> – Frontend and backend servers are used on <a href=\"https://aws.amazon.com/ecs/\" target=\"_blank\" rel=\"noopener\">Amazon Elastic Container Service</a> (Amazon ECS) for container deployment, orchestration, and scaling.</li><li><strong>Content delivery and caching</strong> – <a href=\"https://aws.amazon.com/cloudfront/\" target=\"_blank\" rel=\"noopener\">Amazon CloudFront</a> is used to cache content, improving performance and routing traffic efficiently.</li><li> – Information about uploaded files and job execution is stored in <a href=\"https://aws.amazon.com/rds/aurora/\" target=\"_blank\" rel=\"noopener\">Amazon Aurora</a>.</li><li> – <a href=\"https://aws.amazon.com/batch/\" target=\"_blank\" rel=\"noopener\">AWS Batch</a> processes thousands of images in bulk.</li><li> – <a href=\"https://aws.amazon.com/sqs/\" target=\"_blank\" rel=\"noopener\">Amazon Simple Queue Service</a> (Amazon SQS) manages and queues jobs for processing, making sure they’re run in the correct order by AWS Batch.</li><li> – Amazon Rekognition services analyze media files, including: \n  <ul><li>Face Analysis to generate headless crops.</li><li>Moderation to detect and flag profanity and explicit content.</li><li>Label Detection to provide context for image processing and focus on relevant objects.</li><li>Custom Labels to identify and verify brand logos and adhere to brand guidelines.</li></ul></li></ul><p>Amazon Rekognition is an AWS computer vision service that powers Crop.photo’s automated image analysis. It enables object detection, facial recognition, and content moderation capabilities:</p><ul><li><a href=\"https://docs.aws.amazon.com/rekognition/latest/dg/faces.html\" target=\"_blank\" rel=\"noopener\">Face detection</a> – The Amazon Rekognition face detection feature automatically identifies and analyzes faces in product images. You can use this feature for face-based cropping and optimization through adjustable bounding boxes in the interface.</li><li><a href=\"https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DetectLabelsImageProperties.html\" target=\"_blank\" rel=\"noopener\">Image color analysis</a> – The color analysis feature examines image composition, identifying dominant colors and balance. This integrates with Crop.photo’s brand guidelines checker to provide consistency across product images.</li><li><a href=\"https://docs.aws.amazon.com/rekognition/latest/dg/labels.html\" target=\"_blank\" rel=\"noopener\">Object detection</a> – Object detection automatically identifies key elements in images, enabling smart cropping suggestions. The interface highlights detected objects, allowing you to prioritize specific elements during cropping.</li><li><a href=\"https://docs.aws.amazon.com/rekognition/latest/customlabels-dg/what-is.html\" target=\"_blank\" rel=\"noopener\">Custom label detection</a> – Custom label detection recognizes brand-specific items and assets. Companies can train models for their unique needs, automatically applying brand-specific cropping rules to maintain consistency.</li><li><a href=\"https://docs.aws.amazon.com/rekognition/latest/dg/text-detection.html\" target=\"_blank\" rel=\"noopener\">Text detection (OCR)</a> – The OCR capabilities of Amazon Recognition detect and preserve text within images during editing. The system highlights text areas to make sure critical product information remains legible after cropping.</li></ul><p>Within the Crop.photo interface, users can upload videos through the standard interface, and the speech-to-text functionality will automatically transcribe any audio content. This transcribed text can then be used to enrich the metadata and descriptions associated with the product images or videos, improving searchability and accessibility for customers. Additionally, the brand guidelines check feature can be applied to the transcribed text, making sure that the written content aligns with the company’s branding and communication style.</p><p>The Crop.photo service follows a transparent <a href=\"https://help.crop.photo/en/articles/9752452-understanding-your-subscription-plan\" target=\"_blank\" rel=\"noopener\">pricing model</a> that combines unlimited automations with a flexible image credit system. Users have unrestricted access to create and run as many automation workflows as needed, without any additional charges. The service includes a range of features at no extra cost, such as basic image operations, storage, and behind-the-scenes processing.</p><p>For advanced AI-powered image processing tasks, like smart cropping or background removal, users consume image credits. The number of credits required for each operation is clearly specified, allowing users to understand the costs upfront. Crop.photo offers several subscription plans with varying image credit allowances, enabling users to choose the plan that best fits their needs.</p><h2>Results: Improved speed and precision</h2><p>The automated image editing capabilities of Crop.photo with the integration of Amazon Rekognition has increased speed in editing, with 70% faster image retouching for ecommerce. With a 75% reduction in manual work, the turnaround time for new product images is reduced from 2–3 days to just 1 hour. Similarly, the bulk image editing process has been streamlined, allowing over 100,000 image collections to be processed per day using <a href=\"https://aws.amazon.com/fargate\" target=\"_blank\" rel=\"noopener\">AWS Fargate</a>. Advanced AI-powered image analysis and editing features provide consistent, high-quality images at scale, eliminating the need for manual review and approval of thousands of product images.</p><p>For instance, in the ecommerce industry, this integration facilitates automatic product detection and precise cropping, making sure every image meets specific marketplace and brand standards. In sports, it enables quick identification and cropping of player facial features, including head, eyes, and mouth, adapting to varying backgrounds and maintaining brand consistency.</p><p>The following images are before and after pictures for an ecommerce use case.</p><p>For a <a href=\"https://www.crop.photo/case-studies/bulk-content-resize-beverage\" target=\"_blank\" rel=\"noopener\">famous wine</a> retailer in the United Kingdom, the integration of Amazon Rekognition with Crop.photo streamlined the processing of over 1,700 product images, achieving a 95% reduction in bulk image editing time, a confirmation to the efficiency of AI-powered enhancement.</p><p>Similarly, a top 10 <a href=\"https://www.crop.photo/blog/bulk-on-model-product-images-face-crop\" target=\"_blank\" rel=\"noopener\">global specialty retailer</a> experienced a transformative impact on their ecommerce fashion marketplace workflow. By automating the cropping of over 3,000 on-model product images monthly, they boosted their retouching team’s productivity by over 70%, maintaining compliance with the varied image standards of multiple online marketplaces.</p><p>These case studies illustrate the tangible benefits of integrating Crop.photo with Amazon Rekognition, demonstrating how automation and AI can revolutionize the bulk image editing landscape for ecommerce and sports industries.</p><p>Crop.photo, from AWS Partner Evolphin Software, offers powerful bulk processing tools for automating image cropping, content resizing, and listing image analysis, using advanced AI-driven solutions. Crop.photo is tailored for high-end retailers, ecommerce platforms, and sports organizations. Its integration with Amazon Rekognition aims to streamline the image editing process for clients, providing speed and accuracy in the high-stakes environment of ecommerce and sports. Crop.photo plans additional AI capabilities with <a href=\"https://aws.amazon.com/bedrock/\" target=\"_blank\" rel=\"noopener\">Amazon Bedrock</a> generative AI frameworks to adapt to emerging digital imaging trends, so it remains an indispensable tool for its clients.</p><p>To learn more about Evolphin Software and Crop.photo, visit their <a href=\"https://www.crop.photo/\" target=\"_blank\" rel=\"noopener\">website</a>.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/01/28/Rahul-copy.png\" alt=\"\" width=\"100\" height=\"100\"> founder &amp; CTO of Evolphin Software and Crop.photo, is reshaping how brands produce and manage visual content at scale. Through Crop.photo’s AI-powered tools, global names like Lacoste and Urban Outfitters, as well as ambitious Shopify retailers, are rethinking their creative production workflows. By leveraging cutting-edge Generative AI, he’s enabling brands of all sizes to scale their content creation efficiently while maintaining brand consistency.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/01/28/vaishnavi-100-1.png\" alt=\"\" width=\"100\" height=\"127\"> is a Solutions Architect specializing in Cloud Security at AWS based in the San Francisco Bay Area. As a trusted technical advisor, Vaishnavi helps customers to design secure, scalable and innovative cloud solutions that drive both business value and technical excellence. Outside of work, Vaishnavi enjoys traveling and exploring different artisan coffee roasters.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/01/16/image-7-1.png\" alt=\"\" width=\"100\" height=\"100\"> is an Account Manager at AWS, who provides guidance to Evolphin Software and other organizations to help accelerate business outcomes leveraging AWS Technologies. John has a degree in Business Administration and Management with a concentration in Finance from Gonzaga University, and enjoys snowboarding in the Sierras in his free time.</p>","contentLength":13507,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Revolutionizing business processes with Amazon Bedrock and Appian’s generative AI skills","url":"https://aws.amazon.com/blogs/machine-learning/revolutionizing-business-processes-with-amazon-bedrock-and-appians-generative-ai-skills/","date":1739212621,"author":"Sunil Bemarkar","guid":118,"unread":true,"content":"<p><em>This blog post is co-written with Louis Prensky and Philip Kang from Appian.&nbsp;</em></p><p>The digital transformation wave has compelled enterprises to seek innovative solutions to streamline operations, enhance efficiency, and maintain a competitive edge. Recognizing the growing complexity of business processes and the increasing demand for automation, the integration of <a href=\"https://aws.amazon.com/generative-ai/\" target=\"_blank\" rel=\"noopener\">generative AI</a> skills into environments has become essential. This strategic move addresses key challenges such as managing vast amounts of unstructured data, adhering to regulatory compliance, and automating repetitive tasks to boost productivity. Using robust infrastructure and advanced language models, these AI-driven tools enhance decision-making by providing valuable insights, improving operational efficiency by automating routine tasks, and helping with data privacy through built-in detection and management of sensitive information. For enterprises, this means achieving higher levels of operational excellence, significant cost savings, and scalable solutions that adapt to business growth. For customers, it translates to improved service quality, enhanced data protection, and a more dynamic, responsive service, ultimately driving better experiences and satisfaction.</p><p>Appian has led the charge by offering generative AI skills powered by a collaboration with <a href=\"https://aws.amazon.com/bedrock/\" target=\"_blank\" rel=\"noopener\">Amazon Bedrock</a> and <a href=\"https://aws.amazon.com/bedrock/claude/\" target=\"_blank\" rel=\"noopener\">Anthropic’s Claude</a> large language models (LLMs). This partnership allows organizations to:</p><ul><li>Enhance decision making with valuable insights</li><li>Improve operational efficiency by automating tasks</li><li>Help protect data privacy through built-in detection and management of sensitive information</li><li>Maintain compliance with HIPAA and FedRAMP compliant AI skills</li></ul><p>Critically, by placing AI in the context of a wider environment, organizations can operationalize AI in processes that seamlessly integrate with existing software, pass work between digital workers and humans, and help achieve strong security and compliance.</p><p><a href=\"https://www.appian.com/\" target=\"_blank\" rel=\"noopener\">Appian</a>, an&nbsp;<a href=\"https://partners.amazonaws.com/partners/001E000000Rl0w0IAB/Appian\" target=\"_blank\" rel=\"noopener\">AWS Partner</a>&nbsp;with competencies in financial services, healthcare, and life sciences, is a leading provider of&nbsp;<a href=\"https://www.appian.com/low-code-basics/\" target=\"_blank\" rel=\"noopener\">low-code automation software</a> to streamline and optimize complex business processes for enterprises. The Appian AI Process Platform includes everything you need to design, automate, and optimize even the most complex processes, from start to finish. The world’s most innovative organizations trust Appian to improve their workflows, unify data, and optimize operations—resulting in accelerated growth and superior customer experiences.</p><p><a href=\"https://aws.amazon.com/bedrock/\" target=\"_blank\" rel=\"noopener\">Amazon Bedrock</a> is a fully managed service that offers a choice of high-performing foundation models (FMs) from leading AI companies such as AI21 Labs, Anthropic, Cohere, Meta, Mistral AI, Stability AI, and Amazon through a single API, along with a broad set of capabilities you need to build generative AI applications with security, privacy, and responsible AI.</p><p>Appian uses the robust infrastructure of Amazon Bedrock and Anthropic’s Claude LLMs to offer fully integrated, pre-built generative AI skills that help developers enhance and automate business processes using low-code development. These use case-driven tools automate common tasks in business processes, making AI-powered applications faster and easier to develop.</p><p>This blog post will cover how Appian AI skills build automation into organizations’ mission-critical processes to improve operational excellence, reduce costs, and build scalable solutions. Additionally, we’ll cover real-world examples of processes such as:</p><ul><li>A mortgage lender that used AI-driven data extraction to reduce mortgage processing times from 16 weeks to 10 weeks.</li><li>A financial services company that achieved a four-fold reduction in data extraction time from trade-related emails.</li><li>A legal institution that used AI to reduce attorney time spent on contract review, enabling them to focus on other, high-value work.</li></ul><h2>Current challenges faced by enterprises</h2><p>Modern enterprises face numerous challenges, including:</p><ul><li><strong>Managing vast amounts of unstructured data: </strong>Enterprises deal with immense volumes of data generated from various sources such as emails, documents, and customer interactions. Organizing, analyzing, and extracting valuable insights from unstructured data can be overwhelming without advanced AI capabilities.</li><li><strong>Help protect data privacy and compliance: </strong>With increasing regulatory requirements around data privacy and protection, organizations must safeguard sensitive information, such as personally identifiable information (PII). Manual processes for data redaction and compliance checks are often error-prone and resource-intensive.</li><li><strong>Streamlining repetitive and time-consuming tasks: </strong>Routine tasks such as data entry, document processing, and content classification consume significant time and effort. Automating these tasks can lead to substantial productivity gains and allow employees to focus on more strategic activities.</li><li><strong>Adapting to rapidly changing market conditions: </strong>In a fast-paced business environment, organizations need to be agile and responsive. This requires real-time data analysis and decision-making capabilities that traditional systems might not provide. AI helps businesses quickly adapt to industry changes and customer demands.</li><li><strong>Enhancing decision-making with accurate data insights: </strong>Making informed decisions requires access to accurate and timely data. However, extracting meaningful insights from large datasets can be challenging without advanced analytical tools. AI-powered solutions can process and analyze data at scale, providing valuable insights that drive better decision-making.</li></ul><h2>Appian AI service architecture</h2><p>The architecture of the generative AI skills integrates both the Amazon Bedrock and <a href=\"https://aws.amazon.com/textract/\" target=\"_blank\" rel=\"noopener\">Amazon Textract</a> scalable infrastructure with Appian’s process management capabilities. This generative AI architecture is designed with&nbsp;<a href=\"https://docs.appian.com/suite/help/24.3/private-ai.html\" target=\"_blank\" rel=\"noopener\">private AI</a>&nbsp;as the foundation and upholds those principles.</p><p>The key components of this architecture include:</p><ol><li><strong>Appian AI Process Platform instances</strong>: The frontend serves as the primary application environment where users interact with the system application to upload documents, initiate workflows, and view processed results.</li><li>: This service functions as an intermediary layer between the Appian instances and AWS AI services (Amazon Textract and Amazon Bedrock). This layer encapsulates the logic required to interact with the AWS AI services to manage API calls, data formatting, and error handling.</li><li>: This AWS service is used to automate the extraction of text and structured data from scanned documents and images and provide the extracted data in a structured format.</li><li>: This AWS service provides advanced AI capabilities using FMs for tasks such as text summarization, sentiment analysis, and natural language understanding. This helps enhance the extracted data with deeper insights and contextual understanding.</li></ol><p>Appian generative AI skills, powered by Amazon Bedrock with Anthropic’s Claude family of LLMs, are designed to jump-start the use of generative AI in your processes. The following figure showcases the diverse capabilities of Appian’s generative AI skills, demonstrating how they enable enterprises to seamlessly automate complex tasks.</p><p>Each new skill provides a pre-populated prompt template tailored to specific tasks, alleviating the need to start from scratch. Businesses can select the desired action and customize the prompt for a perfect fit, enabling the automation of tasks such as:</p><ul><li><strong>Content analysis and processing</strong>: With Appian’s generative AI skills, businesses can automatically generate, summarize, and classify content across various formats. This capability is particularly useful for managing large volumes of customer feedback, generating reports, and creating content summaries, significantly reducing the time and effort required for manual content processing.</li><li>: Organizations generate mountains of data and documents. Extracting this information manually can be both burdensome and error-prone. Appian’s AI skills can perform highly accurate text extraction from PDF files and scanned images and pull relevant data from both structured and unstructured data sources such as invoices, forms, and emails. This speeds up data processing and promotes higher accuracy and consistency.</li><li><strong>PII extraction and redaction</strong>: Identifying and managing PII within large datasets is crucial for data governance and compliance. Appian’s AI skills can automatically identify and extract sensitive information from documents and communication channels. Additionally, Appian supports plugins that can redact this content for further privacy. This assists your compliance efforts without extensive manual intervention.</li><li>: Appian’s AI skills can summarize documents to give users an overview before digging into the details. Whether it’s summarizing research papers, legal documents, or internal reports, AI can generate concise summaries, saving time and making sure that critical information is highlighted for quick review.</li></ul><p>The following figure shows an example of a prompt-builder skill used to extract unstructured data from a bond certificate.</p><p>Each AI skill offers pre-populated prompt templates, allowing you to deploy AI without starting from scratch. Each template caters to specific business needs, making implementation straightforward and efficient. Plus, users can customize these prompts to fit their unique requirements and operational needs.</p><p>In this solution, Appian Cloud seamlessly integrates and customizes Amazon Bedrock and Claude LLMs behind the scenes, abstracting complexity to deliver enterprise-grade AI capabilities tailored to its cloud environment. It provides pre-built, use case specific prompt templates for tasks like text summarization and data extractions, dynamically customized based on user inputs and business context. Using the scalability of the Amazon Bedrock infrastructure, Appian Cloud provides optimal performance and efficient handling of enterprise-scale workflows, all within a fully managed cloud service.</p><p>By addressing these complexities, Appian Cloud empowers businesses to focus solely on using AI to achieve operational excellence and business outcomes without the burdens of technical setup, integration challenges, or ongoing maintenance efforts.</p><p>Appian’s AI skills have proven effective across multiple industries. Here are a few real-world examples:</p><ul><li>: This organization automated the extraction of over 60 data fields from inconsistent document formats, reducing the process timeline from 16 weeks to 10 weeks and achieving 98.33% accuracy. The implementation of Appian’s generative AI skills allowed the mortgage processor to streamline their workflow, significantly cutting down on processing time and improving data accuracy, which led to faster loan approvals and increased customer satisfaction.</li><li>: A financial service company received over 1,000 loosely structured emails about trades. Manually annotating these emails led to significant human errors. With an Appian generative AI skill, the customer revamped the entity tagging process by automatically extracting approximately 40 data fields from unstructured emails. This resulted in a four-fold reduction in extraction time and achieved over 95% accuracy, improving the user experience compared to traditional ML extraction tools. The automated process not only reduced errors but also enhanced the speed and reliability of data extraction, leading to more accurate and timely trading decisions.</li><li>: A legal institution had to review negotiated contracts against the original contracts to determine whether the outlined risks had been resolved. This manual process was error prone and labor intensive. By deploying a generative AI skill, they automated the extraction of changes between contracts to find the differences and whether risks had been resolved. This streamlined the attorney review process and provided insights and reasoning into the differences found. The automated solution significantly reduced the time attorneys spent on contract review, allowing them to focus on more strategic tasks and improving the overall efficiency of the legal department.</li></ul><p>AWS and Appian’s collaboration marks a significant advancement in business process automation. By using the power of Amazon Bedrock and Anthropic’s Claude models, Appian empowers enterprises to optimize and automate processes for greater efficiency and effectiveness. This partnership sets a new standard for AI-driven business solutions, leading to greater growth and enhanced customer experiences. The ability to quickly deploy and customize AI skills allows businesses to stay agile and responsive in a dynamic environment.</p><p><a href=\"https://aws.amazon.com/marketplace/seller-profile?id=94a5a278-5f8c-4a9e-82e4-d3f0dd2ecbfe\" target=\"_blank\" rel=\"noopener\">Appian</a> solutions&nbsp;are available as software as a service (SaaS) offerings in&nbsp;<a href=\"https://aws.amazon.com/marketplace\" target=\"_blank\" rel=\"noopener\">AWS Marketplace</a>. Check out the <a href=\"https://docs.appian.com/suite/help/24.3/ai-skills-intro.html\" target=\"_blank\" rel=\"noopener\">Appian</a> website to learn more about how to use the AI skills.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2024/03/07/hsSunil.png\" alt=\"Sunil Bemarkar\" width=\"100\" height=\"125\">is a Senior Partner Solutions Architect at Amazon Web Services. He works with various Independent Software Vendors (ISVs) and Strategic customers across industries to accelerate their digital transformation journey and cloud adoption.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2024/01/28/John-Klacynski-100.jpeg\" alt=\"\" width=\"100\" height=\"100\">is a Principal Customer Solution Manager within the AWS Independent Software Vendor (ISV) team. In this role, he programmatically helps ISV customers adopt AWS technologies and services to reach their business goals more quickly.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/05/louis.jpg\" alt=\"\" width=\"100\" height=\"100\">is a Senior Product Manager at Appian. He is responsible for driving product strategy and feature design for AI Skills within Appian’s Cognitive Automation Group.</p><p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/02/01/Appian-Philip-Kang-100x100.jpeg\" alt=\"Philip Kang\" width=\"100\" height=\"100\">is a Principal Solutions Consultant in Partner Technology &amp; Innovation centers with Appian. In this role, he spearheads technical innovation with a focus on AI/ML and cloud solutions.</p>","contentLength":13619,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Beginner’s Guide to Subqueries in SQL","url":"https://www.kdnuggets.com/beginners-guide-subqueries-sql","date":1739206838,"author":"Nate Rosidi","guid":245,"unread":true,"content":"<article>Subqueries are popular tools for more complex data manipulation in SQL. If you’re a beginner on a quest to understand subqueries, this is the article for you.</article>","contentLength":160,"flags":null,"enclosureUrl":"https://www.kdnuggets.com/wp-content/uploads/Rosidi_Beginners_Guide_to_Subqueries_in_SQL_5.png.png","enclosureMime":"","commentsUrl":null},{"title":"Data Science Showdown: Which Tools Will Gain Ground in 2025","url":"https://www.kdnuggets.com/data-science-showdown-tools-gain-ground-2025","date":1739199602,"author":"Iván Palomares Carrascosa","guid":244,"unread":true,"content":"<article>An analysis and discussion of the data science tools expected to gain prominence throughout the present year, and why.</article>","contentLength":118,"flags":null,"enclosureUrl":"https://www.kdnuggets.com/wp-content/uploads/kdn-tools-battle-2025.png","enclosureMime":"","commentsUrl":null},{"title":"Using Gemini 2.0 Pro Locally","url":"https://www.kdnuggets.com/using-gemini-2-pro-locally","date":1739192434,"author":"Abid Ali Awan","guid":243,"unread":true,"content":"<article>Learn the easiest way to use a state-of-the-art Google experimental model locally.</article>","contentLength":82,"flags":null,"enclosureUrl":"https://www.kdnuggets.com/wp-content/uploads/awan_gemini_20_pro_locally_7.png","enclosureMime":"","commentsUrl":null},{"title":"Transformational Power of Marginal Propensity to Reuse Undermined by Siren of One-off AI Projects","url":"https://www.datasciencecentral.com/transformational-power-of-marginal-propensity-to-reuse-undermined-by-siren-of-one-off-ai-projects/","date":1739192355,"author":"Bill Schmarzo","guid":59,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null}],"tags":["ai"]}